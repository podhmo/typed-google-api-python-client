auth dict
auth/oauth2 dict
auth/oauth2/scopes dict
auth/oauth2/scopes/https://www.googleapis.com/auth/drive dict
auth/oauth2/scopes/https://www.googleapis.com/auth/drive/description str View and manage the files in your Google Drive
auth/oauth2/scopes/https://www.googleapis.com/auth/drive.file dict
auth/oauth2/scopes/https://www.googleapis.com/auth/drive.file/description str View and manage Google Drive files and folders that you have opened or created with this app
auth/oauth2/scopes/https://www.googleapis.com/auth/drive.readonly dict
auth/oauth2/scopes/https://www.googleapis.com/auth/drive.readonly/description str View the files in your Google Drive
auth/oauth2/scopes/https://www.googleapis.com/auth/spreadsheets dict
auth/oauth2/scopes/https://www.googleapis.com/auth/spreadsheets/description str View and manage your spreadsheets in Google Drive
auth/oauth2/scopes/https://www.googleapis.com/auth/spreadsheets.readonly dict
auth/oauth2/scopes/https://www.googleapis.com/auth/spreadsheets.readonly/description str View your Google Spreadsheets
basePath str 
baseUrl str https://sheets.googleapis.com/
batchPath str batch
canonicalName str Sheets
description str Reads and writes Google Sheets.
discoveryVersion str v1
documentationLink str https://developers.google.com/sheets/
icons dict
icons/x16 str http://www.google.com/images/icons/product/search-16.gif
icons/x32 str http://www.google.com/images/icons/product/search-32.gif
id str sheets:v4
kind str discovery#restDescription
name str sheets
ownerDomain str google.com
ownerName str Google
parameters dict
parameters/$.xgafv dict
parameters/$.xgafv/description str V1 error format.
parameters/$.xgafv/enum list
parameters/$.xgafv/enum/[] str 1
parameters/$.xgafv/enumDescriptions list
parameters/$.xgafv/enumDescriptions/[] str v1 error format
parameters/$.xgafv/location str query
parameters/$.xgafv/type str string
parameters/access_token dict
parameters/access_token/description str OAuth access token.
parameters/access_token/location str query
parameters/access_token/type str string
parameters/alt dict
parameters/alt/default str json
parameters/alt/description str Data format for response.
parameters/alt/enum list
parameters/alt/enum/[] str json
parameters/alt/enumDescriptions list
parameters/alt/enumDescriptions/[] str Responses with Content-Type of application/json
parameters/alt/location str query
parameters/alt/type str string
parameters/callback dict
parameters/callback/description str JSONP
parameters/callback/location str query
parameters/callback/type str string
parameters/fields dict
parameters/fields/description str Selector specifying which fields to include in a partial response.
parameters/fields/location str query
parameters/fields/type str string
parameters/key dict
parameters/key/description str API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
parameters/key/location str query
parameters/key/type str string
parameters/oauth_token dict
parameters/oauth_token/description str OAuth 2.0 token for the current user.
parameters/oauth_token/location str query
parameters/oauth_token/type str string
parameters/prettyPrint dict
parameters/prettyPrint/default str true
parameters/prettyPrint/description str Returns response with indentations and line breaks.
parameters/prettyPrint/location str query
parameters/prettyPrint/type str boolean
parameters/quotaUser dict
parameters/quotaUser/description str Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
parameters/quotaUser/location str query
parameters/quotaUser/type str string
parameters/uploadType dict
parameters/uploadType/description str Legacy upload protocol for media (e.g. "media", "multipart").
parameters/uploadType/location str query
parameters/uploadType/type str string
parameters/upload_protocol dict
parameters/upload_protocol/description str Upload protocol for media (e.g. "raw", "multipart").
parameters/upload_protocol/location str query
parameters/upload_protocol/type str string
protocol str rest
resources dict
resources/spreadsheets dict
resources/spreadsheets/methods dict
resources/spreadsheets/methods/batchUpdate dict
resources/spreadsheets/methods/batchUpdate/description str Applies one or more updates to the spreadsheet.

Each request is validated before
being applied. If any request is not valid then the entire request will
fail and nothing will be applied.

Some requests have replies to
give you some information about how
they are applied. The replies will mirror the requests.  For example,
if you applied 4 updates and the 3rd one had a reply, then the
response will have 2 empty replies, the actual reply, and another empty
reply, in that order.

Due to the collaborative nature of spreadsheets, it is not guaranteed that
the spreadsheet will reflect exactly your changes after this completes,
however it is guaranteed that the updates in the request will be
applied together atomically. Your changes may be altered with respect to
collaborator changes. If there are no collaborators, the spreadsheet
should reflect your changes.
resources/spreadsheets/methods/batchUpdate/flatPath str v4/spreadsheets/{spreadsheetId}:batchUpdate
resources/spreadsheets/methods/batchUpdate/httpMethod str POST
resources/spreadsheets/methods/batchUpdate/id str sheets.spreadsheets.batchUpdate
resources/spreadsheets/methods/batchUpdate/parameterOrder list
resources/spreadsheets/methods/batchUpdate/parameterOrder/[] str spreadsheetId
resources/spreadsheets/methods/batchUpdate/parameters dict
resources/spreadsheets/methods/batchUpdate/parameters/spreadsheetId dict
resources/spreadsheets/methods/batchUpdate/parameters/spreadsheetId/description str The spreadsheet to apply the updates to.
resources/spreadsheets/methods/batchUpdate/parameters/spreadsheetId/location str path
resources/spreadsheets/methods/batchUpdate/parameters/spreadsheetId/required bool True
resources/spreadsheets/methods/batchUpdate/parameters/spreadsheetId/type str string
resources/spreadsheets/methods/batchUpdate/path str v4/spreadsheets/{spreadsheetId}:batchUpdate
resources/spreadsheets/methods/batchUpdate/request dict
resources/spreadsheets/methods/batchUpdate/request/$ref str BatchUpdateSpreadsheetRequest
resources/spreadsheets/methods/batchUpdate/response dict
resources/spreadsheets/methods/batchUpdate/response/$ref str BatchUpdateSpreadsheetResponse
resources/spreadsheets/methods/batchUpdate/scopes list
resources/spreadsheets/methods/batchUpdate/scopes/[] str https://www.googleapis.com/auth/drive
resources/spreadsheets/methods/create dict
resources/spreadsheets/methods/create/description str Creates a spreadsheet, returning the newly created spreadsheet.
resources/spreadsheets/methods/create/flatPath str v4/spreadsheets
resources/spreadsheets/methods/create/httpMethod str POST
resources/spreadsheets/methods/create/id str sheets.spreadsheets.create
resources/spreadsheets/methods/create/parameterOrder list
resources/spreadsheets/methods/create/parameters dict
resources/spreadsheets/methods/create/path str v4/spreadsheets
resources/spreadsheets/methods/create/request dict
resources/spreadsheets/methods/create/request/$ref str Spreadsheet
resources/spreadsheets/methods/create/response dict
resources/spreadsheets/methods/create/response/$ref str Spreadsheet
resources/spreadsheets/methods/create/scopes list
resources/spreadsheets/methods/create/scopes/[] str https://www.googleapis.com/auth/drive
resources/spreadsheets/methods/get dict
resources/spreadsheets/methods/get/description str Returns the spreadsheet at the given ID.
The caller must specify the spreadsheet ID.

By default, data within grids will not be returned.
You can include grid data one of two ways:

* Specify a field mask listing your desired fields using the `fields` URL
parameter in HTTP

* Set the includeGridData
URL parameter to true.  If a field mask is set, the `includeGridData`
parameter is ignored

For large spreadsheets, it is recommended to retrieve only the specific
fields of the spreadsheet that you want.

To retrieve only subsets of the spreadsheet, use the
ranges URL parameter.
Multiple ranges can be specified.  Limiting the range will
return only the portions of the spreadsheet that intersect the requested
ranges. Ranges are specified using A1 notation.
resources/spreadsheets/methods/get/flatPath str v4/spreadsheets/{spreadsheetId}
resources/spreadsheets/methods/get/httpMethod str GET
resources/spreadsheets/methods/get/id str sheets.spreadsheets.get
resources/spreadsheets/methods/get/parameterOrder list
resources/spreadsheets/methods/get/parameterOrder/[] str spreadsheetId
resources/spreadsheets/methods/get/parameters dict
resources/spreadsheets/methods/get/parameters/includeGridData dict
resources/spreadsheets/methods/get/parameters/includeGridData/description str True if grid data should be returned.
This parameter is ignored if a field mask was set in the request.
resources/spreadsheets/methods/get/parameters/includeGridData/location str query
resources/spreadsheets/methods/get/parameters/includeGridData/type str boolean
resources/spreadsheets/methods/get/parameters/ranges dict
resources/spreadsheets/methods/get/parameters/ranges/description str The ranges to retrieve from the spreadsheet.
resources/spreadsheets/methods/get/parameters/ranges/location str query
resources/spreadsheets/methods/get/parameters/ranges/repeated bool True
resources/spreadsheets/methods/get/parameters/ranges/type str string
resources/spreadsheets/methods/get/parameters/spreadsheetId dict
resources/spreadsheets/methods/get/parameters/spreadsheetId/description str The spreadsheet to request.
resources/spreadsheets/methods/get/parameters/spreadsheetId/location str path
resources/spreadsheets/methods/get/parameters/spreadsheetId/required bool True
resources/spreadsheets/methods/get/parameters/spreadsheetId/type str string
resources/spreadsheets/methods/get/path str v4/spreadsheets/{spreadsheetId}
resources/spreadsheets/methods/get/response dict
resources/spreadsheets/methods/get/response/$ref str Spreadsheet
resources/spreadsheets/methods/get/scopes list
resources/spreadsheets/methods/get/scopes/[] str https://www.googleapis.com/auth/drive
resources/spreadsheets/methods/getByDataFilter dict
resources/spreadsheets/methods/getByDataFilter/description str Returns the spreadsheet at the given ID.
The caller must specify the spreadsheet ID.

This method differs from GetSpreadsheet in that it allows selecting
which subsets of spreadsheet data to return by specifying a
dataFilters parameter.
Multiple DataFilters can be specified.  Specifying one or
more data filters will return the portions of the spreadsheet that
intersect ranges matched by any of the filters.

By default, data within grids will not be returned.
You can include grid data one of two ways:

* Specify a field mask listing your desired fields using the `fields` URL
parameter in HTTP

* Set the includeGridData
parameter to true.  If a field mask is set, the `includeGridData`
parameter is ignored

For large spreadsheets, it is recommended to retrieve only the specific
fields of the spreadsheet that you want.
resources/spreadsheets/methods/getByDataFilter/flatPath str v4/spreadsheets/{spreadsheetId}:getByDataFilter
resources/spreadsheets/methods/getByDataFilter/httpMethod str POST
resources/spreadsheets/methods/getByDataFilter/id str sheets.spreadsheets.getByDataFilter
resources/spreadsheets/methods/getByDataFilter/parameterOrder list
resources/spreadsheets/methods/getByDataFilter/parameterOrder/[] str spreadsheetId
resources/spreadsheets/methods/getByDataFilter/parameters dict
resources/spreadsheets/methods/getByDataFilter/parameters/spreadsheetId dict
resources/spreadsheets/methods/getByDataFilter/parameters/spreadsheetId/description str The spreadsheet to request.
resources/spreadsheets/methods/getByDataFilter/parameters/spreadsheetId/location str path
resources/spreadsheets/methods/getByDataFilter/parameters/spreadsheetId/required bool True
resources/spreadsheets/methods/getByDataFilter/parameters/spreadsheetId/type str string
resources/spreadsheets/methods/getByDataFilter/path str v4/spreadsheets/{spreadsheetId}:getByDataFilter
resources/spreadsheets/methods/getByDataFilter/request dict
resources/spreadsheets/methods/getByDataFilter/request/$ref str GetSpreadsheetByDataFilterRequest
resources/spreadsheets/methods/getByDataFilter/response dict
resources/spreadsheets/methods/getByDataFilter/response/$ref str Spreadsheet
resources/spreadsheets/methods/getByDataFilter/scopes list
resources/spreadsheets/methods/getByDataFilter/scopes/[] str https://www.googleapis.com/auth/drive
resources/spreadsheets/resources dict
resources/spreadsheets/resources/developerMetadata dict
resources/spreadsheets/resources/developerMetadata/methods dict
resources/spreadsheets/resources/developerMetadata/methods/get dict
resources/spreadsheets/resources/developerMetadata/methods/get/description str Returns the developer metadata with the specified ID.
The caller must specify the spreadsheet ID and the developer metadata's
unique metadataId.
resources/spreadsheets/resources/developerMetadata/methods/get/flatPath str v4/spreadsheets/{spreadsheetId}/developerMetadata/{metadataId}
resources/spreadsheets/resources/developerMetadata/methods/get/httpMethod str GET
resources/spreadsheets/resources/developerMetadata/methods/get/id str sheets.spreadsheets.developerMetadata.get
resources/spreadsheets/resources/developerMetadata/methods/get/parameterOrder list
resources/spreadsheets/resources/developerMetadata/methods/get/parameterOrder/[] str spreadsheetId
resources/spreadsheets/resources/developerMetadata/methods/get/parameters dict
resources/spreadsheets/resources/developerMetadata/methods/get/parameters/metadataId dict
resources/spreadsheets/resources/developerMetadata/methods/get/parameters/metadataId/description str The ID of the developer metadata to retrieve.
resources/spreadsheets/resources/developerMetadata/methods/get/parameters/metadataId/format str int32
resources/spreadsheets/resources/developerMetadata/methods/get/parameters/metadataId/location str path
resources/spreadsheets/resources/developerMetadata/methods/get/parameters/metadataId/required bool True
resources/spreadsheets/resources/developerMetadata/methods/get/parameters/metadataId/type str integer
resources/spreadsheets/resources/developerMetadata/methods/get/parameters/spreadsheetId dict
resources/spreadsheets/resources/developerMetadata/methods/get/parameters/spreadsheetId/description str The ID of the spreadsheet to retrieve metadata from.
resources/spreadsheets/resources/developerMetadata/methods/get/parameters/spreadsheetId/location str path
resources/spreadsheets/resources/developerMetadata/methods/get/parameters/spreadsheetId/required bool True
resources/spreadsheets/resources/developerMetadata/methods/get/parameters/spreadsheetId/type str string
resources/spreadsheets/resources/developerMetadata/methods/get/path str v4/spreadsheets/{spreadsheetId}/developerMetadata/{metadataId}
resources/spreadsheets/resources/developerMetadata/methods/get/response dict
resources/spreadsheets/resources/developerMetadata/methods/get/response/$ref str DeveloperMetadata
resources/spreadsheets/resources/developerMetadata/methods/get/scopes list
resources/spreadsheets/resources/developerMetadata/methods/get/scopes/[] str https://www.googleapis.com/auth/drive
resources/spreadsheets/resources/developerMetadata/methods/search dict
resources/spreadsheets/resources/developerMetadata/methods/search/description str Returns all developer metadata matching the specified DataFilter.
If the provided DataFilter represents a DeveloperMetadataLookup object,
this will return all DeveloperMetadata entries selected by it. If the
DataFilter represents a location in a spreadsheet, this will return all
developer metadata associated with locations intersecting that region.
resources/spreadsheets/resources/developerMetadata/methods/search/flatPath str v4/spreadsheets/{spreadsheetId}/developerMetadata:search
resources/spreadsheets/resources/developerMetadata/methods/search/httpMethod str POST
resources/spreadsheets/resources/developerMetadata/methods/search/id str sheets.spreadsheets.developerMetadata.search
resources/spreadsheets/resources/developerMetadata/methods/search/parameterOrder list
resources/spreadsheets/resources/developerMetadata/methods/search/parameterOrder/[] str spreadsheetId
resources/spreadsheets/resources/developerMetadata/methods/search/parameters dict
resources/spreadsheets/resources/developerMetadata/methods/search/parameters/spreadsheetId dict
resources/spreadsheets/resources/developerMetadata/methods/search/parameters/spreadsheetId/description str The ID of the spreadsheet to retrieve metadata from.
resources/spreadsheets/resources/developerMetadata/methods/search/parameters/spreadsheetId/location str path
resources/spreadsheets/resources/developerMetadata/methods/search/parameters/spreadsheetId/required bool True
resources/spreadsheets/resources/developerMetadata/methods/search/parameters/spreadsheetId/type str string
resources/spreadsheets/resources/developerMetadata/methods/search/path str v4/spreadsheets/{spreadsheetId}/developerMetadata:search
resources/spreadsheets/resources/developerMetadata/methods/search/request dict
resources/spreadsheets/resources/developerMetadata/methods/search/request/$ref str SearchDeveloperMetadataRequest
resources/spreadsheets/resources/developerMetadata/methods/search/response dict
resources/spreadsheets/resources/developerMetadata/methods/search/response/$ref str SearchDeveloperMetadataResponse
resources/spreadsheets/resources/developerMetadata/methods/search/scopes list
resources/spreadsheets/resources/developerMetadata/methods/search/scopes/[] str https://www.googleapis.com/auth/drive
resources/spreadsheets/resources/sheets dict
resources/spreadsheets/resources/sheets/methods dict
resources/spreadsheets/resources/sheets/methods/copyTo dict
resources/spreadsheets/resources/sheets/methods/copyTo/description str Copies a single sheet from a spreadsheet to another spreadsheet.
Returns the properties of the newly created sheet.
resources/spreadsheets/resources/sheets/methods/copyTo/flatPath str v4/spreadsheets/{spreadsheetId}/sheets/{sheetId}:copyTo
resources/spreadsheets/resources/sheets/methods/copyTo/httpMethod str POST
resources/spreadsheets/resources/sheets/methods/copyTo/id str sheets.spreadsheets.sheets.copyTo
resources/spreadsheets/resources/sheets/methods/copyTo/parameterOrder list
resources/spreadsheets/resources/sheets/methods/copyTo/parameterOrder/[] str spreadsheetId
resources/spreadsheets/resources/sheets/methods/copyTo/parameters dict
resources/spreadsheets/resources/sheets/methods/copyTo/parameters/sheetId dict
resources/spreadsheets/resources/sheets/methods/copyTo/parameters/sheetId/description str The ID of the sheet to copy.
resources/spreadsheets/resources/sheets/methods/copyTo/parameters/sheetId/format str int32
resources/spreadsheets/resources/sheets/methods/copyTo/parameters/sheetId/location str path
resources/spreadsheets/resources/sheets/methods/copyTo/parameters/sheetId/required bool True
resources/spreadsheets/resources/sheets/methods/copyTo/parameters/sheetId/type str integer
resources/spreadsheets/resources/sheets/methods/copyTo/parameters/spreadsheetId dict
resources/spreadsheets/resources/sheets/methods/copyTo/parameters/spreadsheetId/description str The ID of the spreadsheet containing the sheet to copy.
resources/spreadsheets/resources/sheets/methods/copyTo/parameters/spreadsheetId/location str path
resources/spreadsheets/resources/sheets/methods/copyTo/parameters/spreadsheetId/required bool True
resources/spreadsheets/resources/sheets/methods/copyTo/parameters/spreadsheetId/type str string
resources/spreadsheets/resources/sheets/methods/copyTo/path str v4/spreadsheets/{spreadsheetId}/sheets/{sheetId}:copyTo
resources/spreadsheets/resources/sheets/methods/copyTo/request dict
resources/spreadsheets/resources/sheets/methods/copyTo/request/$ref str CopySheetToAnotherSpreadsheetRequest
resources/spreadsheets/resources/sheets/methods/copyTo/response dict
resources/spreadsheets/resources/sheets/methods/copyTo/response/$ref str SheetProperties
resources/spreadsheets/resources/sheets/methods/copyTo/scopes list
resources/spreadsheets/resources/sheets/methods/copyTo/scopes/[] str https://www.googleapis.com/auth/drive
resources/spreadsheets/resources/values dict
resources/spreadsheets/resources/values/methods dict
resources/spreadsheets/resources/values/methods/append dict
resources/spreadsheets/resources/values/methods/append/description str Appends values to a spreadsheet. The input range is used to search for
existing data and find a "table" within that range. Values will be
appended to the next row of the table, starting with the first column of
the table. See the
[guide](/sheets/api/guides/values#appending_values)
and
[sample code](/sheets/api/samples/writing#append_values)
for specific details of how tables are detected and data is appended.

The caller must specify the spreadsheet ID, range, and
a valueInputOption.  The `valueInputOption` only
controls how the input data will be added to the sheet (column-wise or
row-wise), it does not influence what cell the data starts being written
to.
resources/spreadsheets/resources/values/methods/append/flatPath str v4/spreadsheets/{spreadsheetId}/values/{range}:append
resources/spreadsheets/resources/values/methods/append/httpMethod str POST
resources/spreadsheets/resources/values/methods/append/id str sheets.spreadsheets.values.append
resources/spreadsheets/resources/values/methods/append/parameterOrder list
resources/spreadsheets/resources/values/methods/append/parameterOrder/[] str spreadsheetId
resources/spreadsheets/resources/values/methods/append/parameters dict
resources/spreadsheets/resources/values/methods/append/parameters/includeValuesInResponse dict
resources/spreadsheets/resources/values/methods/append/parameters/includeValuesInResponse/description str Determines if the update response should include the values
of the cells that were appended. By default, responses
do not include the updated values.
resources/spreadsheets/resources/values/methods/append/parameters/includeValuesInResponse/location str query
resources/spreadsheets/resources/values/methods/append/parameters/includeValuesInResponse/type str boolean
resources/spreadsheets/resources/values/methods/append/parameters/insertDataOption dict
resources/spreadsheets/resources/values/methods/append/parameters/insertDataOption/description str How the input data should be inserted.
resources/spreadsheets/resources/values/methods/append/parameters/insertDataOption/enum list
resources/spreadsheets/resources/values/methods/append/parameters/insertDataOption/enum/[] str OVERWRITE
resources/spreadsheets/resources/values/methods/append/parameters/insertDataOption/location str query
resources/spreadsheets/resources/values/methods/append/parameters/insertDataOption/type str string
resources/spreadsheets/resources/values/methods/append/parameters/range dict
resources/spreadsheets/resources/values/methods/append/parameters/range/description str The A1 notation of a range to search for a logical table of data.
Values will be appended after the last row of the table.
resources/spreadsheets/resources/values/methods/append/parameters/range/location str path
resources/spreadsheets/resources/values/methods/append/parameters/range/required bool True
resources/spreadsheets/resources/values/methods/append/parameters/range/type str string
resources/spreadsheets/resources/values/methods/append/parameters/responseDateTimeRenderOption dict
resources/spreadsheets/resources/values/methods/append/parameters/responseDateTimeRenderOption/description str Determines how dates, times, and durations in the response should be
rendered. This is ignored if response_value_render_option is
FORMATTED_VALUE.
The default dateTime render option is [DateTimeRenderOption.SERIAL_NUMBER].
resources/spreadsheets/resources/values/methods/append/parameters/responseDateTimeRenderOption/enum list
resources/spreadsheets/resources/values/methods/append/parameters/responseDateTimeRenderOption/enum/[] str SERIAL_NUMBER
resources/spreadsheets/resources/values/methods/append/parameters/responseDateTimeRenderOption/location str query
resources/spreadsheets/resources/values/methods/append/parameters/responseDateTimeRenderOption/type str string
resources/spreadsheets/resources/values/methods/append/parameters/responseValueRenderOption dict
resources/spreadsheets/resources/values/methods/append/parameters/responseValueRenderOption/description str Determines how values in the response should be rendered.
The default render option is ValueRenderOption.FORMATTED_VALUE.
resources/spreadsheets/resources/values/methods/append/parameters/responseValueRenderOption/enum list
resources/spreadsheets/resources/values/methods/append/parameters/responseValueRenderOption/enum/[] str FORMATTED_VALUE
resources/spreadsheets/resources/values/methods/append/parameters/responseValueRenderOption/location str query
resources/spreadsheets/resources/values/methods/append/parameters/responseValueRenderOption/type str string
resources/spreadsheets/resources/values/methods/append/parameters/spreadsheetId dict
resources/spreadsheets/resources/values/methods/append/parameters/spreadsheetId/description str The ID of the spreadsheet to update.
resources/spreadsheets/resources/values/methods/append/parameters/spreadsheetId/location str path
resources/spreadsheets/resources/values/methods/append/parameters/spreadsheetId/required bool True
resources/spreadsheets/resources/values/methods/append/parameters/spreadsheetId/type str string
resources/spreadsheets/resources/values/methods/append/parameters/valueInputOption dict
resources/spreadsheets/resources/values/methods/append/parameters/valueInputOption/description str How the input data should be interpreted.
resources/spreadsheets/resources/values/methods/append/parameters/valueInputOption/enum list
resources/spreadsheets/resources/values/methods/append/parameters/valueInputOption/enum/[] str INPUT_VALUE_OPTION_UNSPECIFIED
resources/spreadsheets/resources/values/methods/append/parameters/valueInputOption/location str query
resources/spreadsheets/resources/values/methods/append/parameters/valueInputOption/type str string
resources/spreadsheets/resources/values/methods/append/path str v4/spreadsheets/{spreadsheetId}/values/{range}:append
resources/spreadsheets/resources/values/methods/append/request dict
resources/spreadsheets/resources/values/methods/append/request/$ref str ValueRange
resources/spreadsheets/resources/values/methods/append/response dict
resources/spreadsheets/resources/values/methods/append/response/$ref str AppendValuesResponse
resources/spreadsheets/resources/values/methods/append/scopes list
resources/spreadsheets/resources/values/methods/append/scopes/[] str https://www.googleapis.com/auth/drive
resources/spreadsheets/resources/values/methods/batchClear dict
resources/spreadsheets/resources/values/methods/batchClear/description str Clears one or more ranges of values from a spreadsheet.
The caller must specify the spreadsheet ID and one or more ranges.
Only values are cleared -- all other properties of the cell (such as
formatting, data validation, etc..) are kept.
resources/spreadsheets/resources/values/methods/batchClear/flatPath str v4/spreadsheets/{spreadsheetId}/values:batchClear
resources/spreadsheets/resources/values/methods/batchClear/httpMethod str POST
resources/spreadsheets/resources/values/methods/batchClear/id str sheets.spreadsheets.values.batchClear
resources/spreadsheets/resources/values/methods/batchClear/parameterOrder list
resources/spreadsheets/resources/values/methods/batchClear/parameterOrder/[] str spreadsheetId
resources/spreadsheets/resources/values/methods/batchClear/parameters dict
resources/spreadsheets/resources/values/methods/batchClear/parameters/spreadsheetId dict
resources/spreadsheets/resources/values/methods/batchClear/parameters/spreadsheetId/description str The ID of the spreadsheet to update.
resources/spreadsheets/resources/values/methods/batchClear/parameters/spreadsheetId/location str path
resources/spreadsheets/resources/values/methods/batchClear/parameters/spreadsheetId/required bool True
resources/spreadsheets/resources/values/methods/batchClear/parameters/spreadsheetId/type str string
resources/spreadsheets/resources/values/methods/batchClear/path str v4/spreadsheets/{spreadsheetId}/values:batchClear
resources/spreadsheets/resources/values/methods/batchClear/request dict
resources/spreadsheets/resources/values/methods/batchClear/request/$ref str BatchClearValuesRequest
resources/spreadsheets/resources/values/methods/batchClear/response dict
resources/spreadsheets/resources/values/methods/batchClear/response/$ref str BatchClearValuesResponse
resources/spreadsheets/resources/values/methods/batchClear/scopes list
resources/spreadsheets/resources/values/methods/batchClear/scopes/[] str https://www.googleapis.com/auth/drive
resources/spreadsheets/resources/values/methods/batchClearByDataFilter dict
resources/spreadsheets/resources/values/methods/batchClearByDataFilter/description str Clears one or more ranges of values from a spreadsheet.
The caller must specify the spreadsheet ID and one or more
DataFilters. Ranges matching any of the specified data
filters will be cleared.  Only values are cleared -- all other properties
of the cell (such as formatting, data validation, etc..) are kept.
resources/spreadsheets/resources/values/methods/batchClearByDataFilter/flatPath str v4/spreadsheets/{spreadsheetId}/values:batchClearByDataFilter
resources/spreadsheets/resources/values/methods/batchClearByDataFilter/httpMethod str POST
resources/spreadsheets/resources/values/methods/batchClearByDataFilter/id str sheets.spreadsheets.values.batchClearByDataFilter
resources/spreadsheets/resources/values/methods/batchClearByDataFilter/parameterOrder list
resources/spreadsheets/resources/values/methods/batchClearByDataFilter/parameterOrder/[] str spreadsheetId
resources/spreadsheets/resources/values/methods/batchClearByDataFilter/parameters dict
resources/spreadsheets/resources/values/methods/batchClearByDataFilter/parameters/spreadsheetId dict
resources/spreadsheets/resources/values/methods/batchClearByDataFilter/parameters/spreadsheetId/description str The ID of the spreadsheet to update.
resources/spreadsheets/resources/values/methods/batchClearByDataFilter/parameters/spreadsheetId/location str path
resources/spreadsheets/resources/values/methods/batchClearByDataFilter/parameters/spreadsheetId/required bool True
resources/spreadsheets/resources/values/methods/batchClearByDataFilter/parameters/spreadsheetId/type str string
resources/spreadsheets/resources/values/methods/batchClearByDataFilter/path str v4/spreadsheets/{spreadsheetId}/values:batchClearByDataFilter
resources/spreadsheets/resources/values/methods/batchClearByDataFilter/request dict
resources/spreadsheets/resources/values/methods/batchClearByDataFilter/request/$ref str BatchClearValuesByDataFilterRequest
resources/spreadsheets/resources/values/methods/batchClearByDataFilter/response dict
resources/spreadsheets/resources/values/methods/batchClearByDataFilter/response/$ref str BatchClearValuesByDataFilterResponse
resources/spreadsheets/resources/values/methods/batchClearByDataFilter/scopes list
resources/spreadsheets/resources/values/methods/batchClearByDataFilter/scopes/[] str https://www.googleapis.com/auth/drive
resources/spreadsheets/resources/values/methods/batchGet dict
resources/spreadsheets/resources/values/methods/batchGet/description str Returns one or more ranges of values from a spreadsheet.
The caller must specify the spreadsheet ID and one or more ranges.
resources/spreadsheets/resources/values/methods/batchGet/flatPath str v4/spreadsheets/{spreadsheetId}/values:batchGet
resources/spreadsheets/resources/values/methods/batchGet/httpMethod str GET
resources/spreadsheets/resources/values/methods/batchGet/id str sheets.spreadsheets.values.batchGet
resources/spreadsheets/resources/values/methods/batchGet/parameterOrder list
resources/spreadsheets/resources/values/methods/batchGet/parameterOrder/[] str spreadsheetId
resources/spreadsheets/resources/values/methods/batchGet/parameters dict
resources/spreadsheets/resources/values/methods/batchGet/parameters/dateTimeRenderOption dict
resources/spreadsheets/resources/values/methods/batchGet/parameters/dateTimeRenderOption/description str How dates, times, and durations should be represented in the output.
This is ignored if value_render_option is
FORMATTED_VALUE.
The default dateTime render option is [DateTimeRenderOption.SERIAL_NUMBER].
resources/spreadsheets/resources/values/methods/batchGet/parameters/dateTimeRenderOption/enum list
resources/spreadsheets/resources/values/methods/batchGet/parameters/dateTimeRenderOption/enum/[] str SERIAL_NUMBER
resources/spreadsheets/resources/values/methods/batchGet/parameters/dateTimeRenderOption/location str query
resources/spreadsheets/resources/values/methods/batchGet/parameters/dateTimeRenderOption/type str string
resources/spreadsheets/resources/values/methods/batchGet/parameters/majorDimension dict
resources/spreadsheets/resources/values/methods/batchGet/parameters/majorDimension/description str The major dimension that results should use.

For example, if the spreadsheet data is: `A1=1,B1=2,A2=3,B2=4`,
then requesting `range=A1:B2,majorDimension=ROWS` will return
`[[1,2],[3,4]]`,
whereas requesting `range=A1:B2,majorDimension=COLUMNS` will return
`[[1,3],[2,4]]`.
resources/spreadsheets/resources/values/methods/batchGet/parameters/majorDimension/enum list
resources/spreadsheets/resources/values/methods/batchGet/parameters/majorDimension/enum/[] str DIMENSION_UNSPECIFIED
resources/spreadsheets/resources/values/methods/batchGet/parameters/majorDimension/location str query
resources/spreadsheets/resources/values/methods/batchGet/parameters/majorDimension/type str string
resources/spreadsheets/resources/values/methods/batchGet/parameters/ranges dict
resources/spreadsheets/resources/values/methods/batchGet/parameters/ranges/description str The A1 notation of the values to retrieve.
resources/spreadsheets/resources/values/methods/batchGet/parameters/ranges/location str query
resources/spreadsheets/resources/values/methods/batchGet/parameters/ranges/repeated bool True
resources/spreadsheets/resources/values/methods/batchGet/parameters/ranges/type str string
resources/spreadsheets/resources/values/methods/batchGet/parameters/spreadsheetId dict
resources/spreadsheets/resources/values/methods/batchGet/parameters/spreadsheetId/description str The ID of the spreadsheet to retrieve data from.
resources/spreadsheets/resources/values/methods/batchGet/parameters/spreadsheetId/location str path
resources/spreadsheets/resources/values/methods/batchGet/parameters/spreadsheetId/required bool True
resources/spreadsheets/resources/values/methods/batchGet/parameters/spreadsheetId/type str string
resources/spreadsheets/resources/values/methods/batchGet/parameters/valueRenderOption dict
resources/spreadsheets/resources/values/methods/batchGet/parameters/valueRenderOption/description str How values should be represented in the output.
The default render option is ValueRenderOption.FORMATTED_VALUE.
resources/spreadsheets/resources/values/methods/batchGet/parameters/valueRenderOption/enum list
resources/spreadsheets/resources/values/methods/batchGet/parameters/valueRenderOption/enum/[] str FORMATTED_VALUE
resources/spreadsheets/resources/values/methods/batchGet/parameters/valueRenderOption/location str query
resources/spreadsheets/resources/values/methods/batchGet/parameters/valueRenderOption/type str string
resources/spreadsheets/resources/values/methods/batchGet/path str v4/spreadsheets/{spreadsheetId}/values:batchGet
resources/spreadsheets/resources/values/methods/batchGet/response dict
resources/spreadsheets/resources/values/methods/batchGet/response/$ref str BatchGetValuesResponse
resources/spreadsheets/resources/values/methods/batchGet/scopes list
resources/spreadsheets/resources/values/methods/batchGet/scopes/[] str https://www.googleapis.com/auth/drive
resources/spreadsheets/resources/values/methods/batchGetByDataFilter dict
resources/spreadsheets/resources/values/methods/batchGetByDataFilter/description str Returns one or more ranges of values that match the specified data filters.
The caller must specify the spreadsheet ID and one or more
DataFilters.  Ranges that match any of the data filters in
the request will be returned.
resources/spreadsheets/resources/values/methods/batchGetByDataFilter/flatPath str v4/spreadsheets/{spreadsheetId}/values:batchGetByDataFilter
resources/spreadsheets/resources/values/methods/batchGetByDataFilter/httpMethod str POST
resources/spreadsheets/resources/values/methods/batchGetByDataFilter/id str sheets.spreadsheets.values.batchGetByDataFilter
resources/spreadsheets/resources/values/methods/batchGetByDataFilter/parameterOrder list
resources/spreadsheets/resources/values/methods/batchGetByDataFilter/parameterOrder/[] str spreadsheetId
resources/spreadsheets/resources/values/methods/batchGetByDataFilter/parameters dict
resources/spreadsheets/resources/values/methods/batchGetByDataFilter/parameters/spreadsheetId dict
resources/spreadsheets/resources/values/methods/batchGetByDataFilter/parameters/spreadsheetId/description str The ID of the spreadsheet to retrieve data from.
resources/spreadsheets/resources/values/methods/batchGetByDataFilter/parameters/spreadsheetId/location str path
resources/spreadsheets/resources/values/methods/batchGetByDataFilter/parameters/spreadsheetId/required bool True
resources/spreadsheets/resources/values/methods/batchGetByDataFilter/parameters/spreadsheetId/type str string
resources/spreadsheets/resources/values/methods/batchGetByDataFilter/path str v4/spreadsheets/{spreadsheetId}/values:batchGetByDataFilter
resources/spreadsheets/resources/values/methods/batchGetByDataFilter/request dict
resources/spreadsheets/resources/values/methods/batchGetByDataFilter/request/$ref str BatchGetValuesByDataFilterRequest
resources/spreadsheets/resources/values/methods/batchGetByDataFilter/response dict
resources/spreadsheets/resources/values/methods/batchGetByDataFilter/response/$ref str BatchGetValuesByDataFilterResponse
resources/spreadsheets/resources/values/methods/batchGetByDataFilter/scopes list
resources/spreadsheets/resources/values/methods/batchGetByDataFilter/scopes/[] str https://www.googleapis.com/auth/drive
resources/spreadsheets/resources/values/methods/batchUpdate dict
resources/spreadsheets/resources/values/methods/batchUpdate/description str Sets values in one or more ranges of a spreadsheet.
The caller must specify the spreadsheet ID,
a valueInputOption, and one or more
ValueRanges.
resources/spreadsheets/resources/values/methods/batchUpdate/flatPath str v4/spreadsheets/{spreadsheetId}/values:batchUpdate
resources/spreadsheets/resources/values/methods/batchUpdate/httpMethod str POST
resources/spreadsheets/resources/values/methods/batchUpdate/id str sheets.spreadsheets.values.batchUpdate
resources/spreadsheets/resources/values/methods/batchUpdate/parameterOrder list
resources/spreadsheets/resources/values/methods/batchUpdate/parameterOrder/[] str spreadsheetId
resources/spreadsheets/resources/values/methods/batchUpdate/parameters dict
resources/spreadsheets/resources/values/methods/batchUpdate/parameters/spreadsheetId dict
resources/spreadsheets/resources/values/methods/batchUpdate/parameters/spreadsheetId/description str The ID of the spreadsheet to update.
resources/spreadsheets/resources/values/methods/batchUpdate/parameters/spreadsheetId/location str path
resources/spreadsheets/resources/values/methods/batchUpdate/parameters/spreadsheetId/required bool True
resources/spreadsheets/resources/values/methods/batchUpdate/parameters/spreadsheetId/type str string
resources/spreadsheets/resources/values/methods/batchUpdate/path str v4/spreadsheets/{spreadsheetId}/values:batchUpdate
resources/spreadsheets/resources/values/methods/batchUpdate/request dict
resources/spreadsheets/resources/values/methods/batchUpdate/request/$ref str BatchUpdateValuesRequest
resources/spreadsheets/resources/values/methods/batchUpdate/response dict
resources/spreadsheets/resources/values/methods/batchUpdate/response/$ref str BatchUpdateValuesResponse
resources/spreadsheets/resources/values/methods/batchUpdate/scopes list
resources/spreadsheets/resources/values/methods/batchUpdate/scopes/[] str https://www.googleapis.com/auth/drive
resources/spreadsheets/resources/values/methods/batchUpdateByDataFilter dict
resources/spreadsheets/resources/values/methods/batchUpdateByDataFilter/description str Sets values in one or more ranges of a spreadsheet.
The caller must specify the spreadsheet ID,
a valueInputOption, and one or more
DataFilterValueRanges.
resources/spreadsheets/resources/values/methods/batchUpdateByDataFilter/flatPath str v4/spreadsheets/{spreadsheetId}/values:batchUpdateByDataFilter
resources/spreadsheets/resources/values/methods/batchUpdateByDataFilter/httpMethod str POST
resources/spreadsheets/resources/values/methods/batchUpdateByDataFilter/id str sheets.spreadsheets.values.batchUpdateByDataFilter
resources/spreadsheets/resources/values/methods/batchUpdateByDataFilter/parameterOrder list
resources/spreadsheets/resources/values/methods/batchUpdateByDataFilter/parameterOrder/[] str spreadsheetId
resources/spreadsheets/resources/values/methods/batchUpdateByDataFilter/parameters dict
resources/spreadsheets/resources/values/methods/batchUpdateByDataFilter/parameters/spreadsheetId dict
resources/spreadsheets/resources/values/methods/batchUpdateByDataFilter/parameters/spreadsheetId/description str The ID of the spreadsheet to update.
resources/spreadsheets/resources/values/methods/batchUpdateByDataFilter/parameters/spreadsheetId/location str path
resources/spreadsheets/resources/values/methods/batchUpdateByDataFilter/parameters/spreadsheetId/required bool True
resources/spreadsheets/resources/values/methods/batchUpdateByDataFilter/parameters/spreadsheetId/type str string
resources/spreadsheets/resources/values/methods/batchUpdateByDataFilter/path str v4/spreadsheets/{spreadsheetId}/values:batchUpdateByDataFilter
resources/spreadsheets/resources/values/methods/batchUpdateByDataFilter/request dict
resources/spreadsheets/resources/values/methods/batchUpdateByDataFilter/request/$ref str BatchUpdateValuesByDataFilterRequest
resources/spreadsheets/resources/values/methods/batchUpdateByDataFilter/response dict
resources/spreadsheets/resources/values/methods/batchUpdateByDataFilter/response/$ref str BatchUpdateValuesByDataFilterResponse
resources/spreadsheets/resources/values/methods/batchUpdateByDataFilter/scopes list
resources/spreadsheets/resources/values/methods/batchUpdateByDataFilter/scopes/[] str https://www.googleapis.com/auth/drive
resources/spreadsheets/resources/values/methods/clear dict
resources/spreadsheets/resources/values/methods/clear/description str Clears values from a spreadsheet.
The caller must specify the spreadsheet ID and range.
Only values are cleared -- all other properties of the cell (such as
formatting, data validation, etc..) are kept.
resources/spreadsheets/resources/values/methods/clear/flatPath str v4/spreadsheets/{spreadsheetId}/values/{range}:clear
resources/spreadsheets/resources/values/methods/clear/httpMethod str POST
resources/spreadsheets/resources/values/methods/clear/id str sheets.spreadsheets.values.clear
resources/spreadsheets/resources/values/methods/clear/parameterOrder list
resources/spreadsheets/resources/values/methods/clear/parameterOrder/[] str spreadsheetId
resources/spreadsheets/resources/values/methods/clear/parameters dict
resources/spreadsheets/resources/values/methods/clear/parameters/range dict
resources/spreadsheets/resources/values/methods/clear/parameters/range/description str The A1 notation of the values to clear.
resources/spreadsheets/resources/values/methods/clear/parameters/range/location str path
resources/spreadsheets/resources/values/methods/clear/parameters/range/required bool True
resources/spreadsheets/resources/values/methods/clear/parameters/range/type str string
resources/spreadsheets/resources/values/methods/clear/parameters/spreadsheetId dict
resources/spreadsheets/resources/values/methods/clear/parameters/spreadsheetId/description str The ID of the spreadsheet to update.
resources/spreadsheets/resources/values/methods/clear/parameters/spreadsheetId/location str path
resources/spreadsheets/resources/values/methods/clear/parameters/spreadsheetId/required bool True
resources/spreadsheets/resources/values/methods/clear/parameters/spreadsheetId/type str string
resources/spreadsheets/resources/values/methods/clear/path str v4/spreadsheets/{spreadsheetId}/values/{range}:clear
resources/spreadsheets/resources/values/methods/clear/request dict
resources/spreadsheets/resources/values/methods/clear/request/$ref str ClearValuesRequest
resources/spreadsheets/resources/values/methods/clear/response dict
resources/spreadsheets/resources/values/methods/clear/response/$ref str ClearValuesResponse
resources/spreadsheets/resources/values/methods/clear/scopes list
resources/spreadsheets/resources/values/methods/clear/scopes/[] str https://www.googleapis.com/auth/drive
resources/spreadsheets/resources/values/methods/get dict
resources/spreadsheets/resources/values/methods/get/description str Returns a range of values from a spreadsheet.
The caller must specify the spreadsheet ID and a range.
resources/spreadsheets/resources/values/methods/get/flatPath str v4/spreadsheets/{spreadsheetId}/values/{range}
resources/spreadsheets/resources/values/methods/get/httpMethod str GET
resources/spreadsheets/resources/values/methods/get/id str sheets.spreadsheets.values.get
resources/spreadsheets/resources/values/methods/get/parameterOrder list
resources/spreadsheets/resources/values/methods/get/parameterOrder/[] str spreadsheetId
resources/spreadsheets/resources/values/methods/get/parameters dict
resources/spreadsheets/resources/values/methods/get/parameters/dateTimeRenderOption dict
resources/spreadsheets/resources/values/methods/get/parameters/dateTimeRenderOption/description str How dates, times, and durations should be represented in the output.
This is ignored if value_render_option is
FORMATTED_VALUE.
The default dateTime render option is [DateTimeRenderOption.SERIAL_NUMBER].
resources/spreadsheets/resources/values/methods/get/parameters/dateTimeRenderOption/enum list
resources/spreadsheets/resources/values/methods/get/parameters/dateTimeRenderOption/enum/[] str SERIAL_NUMBER
resources/spreadsheets/resources/values/methods/get/parameters/dateTimeRenderOption/location str query
resources/spreadsheets/resources/values/methods/get/parameters/dateTimeRenderOption/type str string
resources/spreadsheets/resources/values/methods/get/parameters/majorDimension dict
resources/spreadsheets/resources/values/methods/get/parameters/majorDimension/description str The major dimension that results should use.

For example, if the spreadsheet data is: `A1=1,B1=2,A2=3,B2=4`,
then requesting `range=A1:B2,majorDimension=ROWS` will return
`[[1,2],[3,4]]`,
whereas requesting `range=A1:B2,majorDimension=COLUMNS` will return
`[[1,3],[2,4]]`.
resources/spreadsheets/resources/values/methods/get/parameters/majorDimension/enum list
resources/spreadsheets/resources/values/methods/get/parameters/majorDimension/enum/[] str DIMENSION_UNSPECIFIED
resources/spreadsheets/resources/values/methods/get/parameters/majorDimension/location str query
resources/spreadsheets/resources/values/methods/get/parameters/majorDimension/type str string
resources/spreadsheets/resources/values/methods/get/parameters/range dict
resources/spreadsheets/resources/values/methods/get/parameters/range/description str The A1 notation of the values to retrieve.
resources/spreadsheets/resources/values/methods/get/parameters/range/location str path
resources/spreadsheets/resources/values/methods/get/parameters/range/required bool True
resources/spreadsheets/resources/values/methods/get/parameters/range/type str string
resources/spreadsheets/resources/values/methods/get/parameters/spreadsheetId dict
resources/spreadsheets/resources/values/methods/get/parameters/spreadsheetId/description str The ID of the spreadsheet to retrieve data from.
resources/spreadsheets/resources/values/methods/get/parameters/spreadsheetId/location str path
resources/spreadsheets/resources/values/methods/get/parameters/spreadsheetId/required bool True
resources/spreadsheets/resources/values/methods/get/parameters/spreadsheetId/type str string
resources/spreadsheets/resources/values/methods/get/parameters/valueRenderOption dict
resources/spreadsheets/resources/values/methods/get/parameters/valueRenderOption/description str How values should be represented in the output.
The default render option is ValueRenderOption.FORMATTED_VALUE.
resources/spreadsheets/resources/values/methods/get/parameters/valueRenderOption/enum list
resources/spreadsheets/resources/values/methods/get/parameters/valueRenderOption/enum/[] str FORMATTED_VALUE
resources/spreadsheets/resources/values/methods/get/parameters/valueRenderOption/location str query
resources/spreadsheets/resources/values/methods/get/parameters/valueRenderOption/type str string
resources/spreadsheets/resources/values/methods/get/path str v4/spreadsheets/{spreadsheetId}/values/{range}
resources/spreadsheets/resources/values/methods/get/response dict
resources/spreadsheets/resources/values/methods/get/response/$ref str ValueRange
resources/spreadsheets/resources/values/methods/get/scopes list
resources/spreadsheets/resources/values/methods/get/scopes/[] str https://www.googleapis.com/auth/drive
resources/spreadsheets/resources/values/methods/update dict
resources/spreadsheets/resources/values/methods/update/description str Sets values in a range of a spreadsheet.
The caller must specify the spreadsheet ID, range, and
a valueInputOption.
resources/spreadsheets/resources/values/methods/update/flatPath str v4/spreadsheets/{spreadsheetId}/values/{range}
resources/spreadsheets/resources/values/methods/update/httpMethod str PUT
resources/spreadsheets/resources/values/methods/update/id str sheets.spreadsheets.values.update
resources/spreadsheets/resources/values/methods/update/parameterOrder list
resources/spreadsheets/resources/values/methods/update/parameterOrder/[] str spreadsheetId
resources/spreadsheets/resources/values/methods/update/parameters dict
resources/spreadsheets/resources/values/methods/update/parameters/includeValuesInResponse dict
resources/spreadsheets/resources/values/methods/update/parameters/includeValuesInResponse/description str Determines if the update response should include the values
of the cells that were updated. By default, responses
do not include the updated values.
If the range to write was larger than than the range actually written,
the response will include all values in the requested range (excluding
trailing empty rows and columns).
resources/spreadsheets/resources/values/methods/update/parameters/includeValuesInResponse/location str query
resources/spreadsheets/resources/values/methods/update/parameters/includeValuesInResponse/type str boolean
resources/spreadsheets/resources/values/methods/update/parameters/range dict
resources/spreadsheets/resources/values/methods/update/parameters/range/description str The A1 notation of the values to update.
resources/spreadsheets/resources/values/methods/update/parameters/range/location str path
resources/spreadsheets/resources/values/methods/update/parameters/range/required bool True
resources/spreadsheets/resources/values/methods/update/parameters/range/type str string
resources/spreadsheets/resources/values/methods/update/parameters/responseDateTimeRenderOption dict
resources/spreadsheets/resources/values/methods/update/parameters/responseDateTimeRenderOption/description str Determines how dates, times, and durations in the response should be
rendered. This is ignored if response_value_render_option is
FORMATTED_VALUE.
The default dateTime render option is
DateTimeRenderOption.SERIAL_NUMBER.
resources/spreadsheets/resources/values/methods/update/parameters/responseDateTimeRenderOption/enum list
resources/spreadsheets/resources/values/methods/update/parameters/responseDateTimeRenderOption/enum/[] str SERIAL_NUMBER
resources/spreadsheets/resources/values/methods/update/parameters/responseDateTimeRenderOption/location str query
resources/spreadsheets/resources/values/methods/update/parameters/responseDateTimeRenderOption/type str string
resources/spreadsheets/resources/values/methods/update/parameters/responseValueRenderOption dict
resources/spreadsheets/resources/values/methods/update/parameters/responseValueRenderOption/description str Determines how values in the response should be rendered.
The default render option is ValueRenderOption.FORMATTED_VALUE.
resources/spreadsheets/resources/values/methods/update/parameters/responseValueRenderOption/enum list
resources/spreadsheets/resources/values/methods/update/parameters/responseValueRenderOption/enum/[] str FORMATTED_VALUE
resources/spreadsheets/resources/values/methods/update/parameters/responseValueRenderOption/location str query
resources/spreadsheets/resources/values/methods/update/parameters/responseValueRenderOption/type str string
resources/spreadsheets/resources/values/methods/update/parameters/spreadsheetId dict
resources/spreadsheets/resources/values/methods/update/parameters/spreadsheetId/description str The ID of the spreadsheet to update.
resources/spreadsheets/resources/values/methods/update/parameters/spreadsheetId/location str path
resources/spreadsheets/resources/values/methods/update/parameters/spreadsheetId/required bool True
resources/spreadsheets/resources/values/methods/update/parameters/spreadsheetId/type str string
resources/spreadsheets/resources/values/methods/update/parameters/valueInputOption dict
resources/spreadsheets/resources/values/methods/update/parameters/valueInputOption/description str How the input data should be interpreted.
resources/spreadsheets/resources/values/methods/update/parameters/valueInputOption/enum list
resources/spreadsheets/resources/values/methods/update/parameters/valueInputOption/enum/[] str INPUT_VALUE_OPTION_UNSPECIFIED
resources/spreadsheets/resources/values/methods/update/parameters/valueInputOption/location str query
resources/spreadsheets/resources/values/methods/update/parameters/valueInputOption/type str string
resources/spreadsheets/resources/values/methods/update/path str v4/spreadsheets/{spreadsheetId}/values/{range}
resources/spreadsheets/resources/values/methods/update/request dict
resources/spreadsheets/resources/values/methods/update/request/$ref str ValueRange
resources/spreadsheets/resources/values/methods/update/response dict
resources/spreadsheets/resources/values/methods/update/response/$ref str UpdateValuesResponse
resources/spreadsheets/resources/values/methods/update/scopes list
resources/spreadsheets/resources/values/methods/update/scopes/[] str https://www.googleapis.com/auth/drive
revision str 20180727
rootUrl str https://sheets.googleapis.com/
schemas dict
schemas/AddBandingRequest dict
schemas/AddBandingRequest/description str Adds a new banded range to the spreadsheet.
schemas/AddBandingRequest/id str AddBandingRequest
schemas/AddBandingRequest/properties dict
schemas/AddBandingRequest/properties/bandedRange dict
schemas/AddBandingRequest/properties/bandedRange/$ref str BandedRange
schemas/AddBandingRequest/properties/bandedRange/description str The banded range to add. The bandedRangeId
field is optional; if one is not set, an id will be randomly generated. (It
is an error to specify the ID of a range that already exists.)
schemas/AddBandingRequest/type str object
schemas/AddBandingResponse dict
schemas/AddBandingResponse/description str The result of adding a banded range.
schemas/AddBandingResponse/id str AddBandingResponse
schemas/AddBandingResponse/properties dict
schemas/AddBandingResponse/properties/bandedRange dict
schemas/AddBandingResponse/properties/bandedRange/$ref str BandedRange
schemas/AddBandingResponse/properties/bandedRange/description str The banded range that was added.
schemas/AddBandingResponse/type str object
schemas/AddChartRequest dict
schemas/AddChartRequest/description str Adds a chart to a sheet in the spreadsheet.
schemas/AddChartRequest/id str AddChartRequest
schemas/AddChartRequest/properties dict
schemas/AddChartRequest/properties/chart dict
schemas/AddChartRequest/properties/chart/$ref str EmbeddedChart
schemas/AddChartRequest/properties/chart/description str The chart that should be added to the spreadsheet, including the position
where it should be placed. The chartId
field is optional; if one is not set, an id will be randomly generated. (It
is an error to specify the ID of a chart that already exists.)
schemas/AddChartRequest/type str object
schemas/AddChartResponse dict
schemas/AddChartResponse/description str The result of adding a chart to a spreadsheet.
schemas/AddChartResponse/id str AddChartResponse
schemas/AddChartResponse/properties dict
schemas/AddChartResponse/properties/chart dict
schemas/AddChartResponse/properties/chart/$ref str EmbeddedChart
schemas/AddChartResponse/properties/chart/description str The newly added chart.
schemas/AddChartResponse/type str object
schemas/AddConditionalFormatRuleRequest dict
schemas/AddConditionalFormatRuleRequest/description str Adds a new conditional format rule at the given index.
All subsequent rules' indexes are incremented.
schemas/AddConditionalFormatRuleRequest/id str AddConditionalFormatRuleRequest
schemas/AddConditionalFormatRuleRequest/properties dict
schemas/AddConditionalFormatRuleRequest/properties/index dict
schemas/AddConditionalFormatRuleRequest/properties/index/description str The zero-based index where the rule should be inserted.
schemas/AddConditionalFormatRuleRequest/properties/index/format str int32
schemas/AddConditionalFormatRuleRequest/properties/index/type str integer
schemas/AddConditionalFormatRuleRequest/properties/rule dict
schemas/AddConditionalFormatRuleRequest/properties/rule/$ref str ConditionalFormatRule
schemas/AddConditionalFormatRuleRequest/properties/rule/description str The rule to add.
schemas/AddConditionalFormatRuleRequest/type str object
schemas/AddDimensionGroupRequest dict
schemas/AddDimensionGroupRequest/description str Creates a group over the specified range.

If the requested range is a superset of the range of an existing group G,
then the depth of G is incremented and this new group G' has the
depth of that group. For example, a group [C:D, depth 1] + [B:E] results in
groups [B:E, depth 1] and [C:D, depth 2].
If the requested range is a subset of the range of an existing group G,
then the depth of the new group G' becomes one greater than the depth of G.
For example, a group [B:E, depth 1] + [C:D] results in groups [B:E, depth 1]
and [C:D, depth 2].
If the requested range starts before and ends within, or starts within and
ends after, the range of an existing group G, then the range of the existing
group G becomes the union of the ranges, and the new group G' has
depth one greater than the depth of G and range as the intersection of the
ranges. For example, a group [B:D, depth 1] + [C:E] results in groups [B:E,
depth 1] and [C:D, depth 2].
schemas/AddDimensionGroupRequest/id str AddDimensionGroupRequest
schemas/AddDimensionGroupRequest/properties dict
schemas/AddDimensionGroupRequest/properties/range dict
schemas/AddDimensionGroupRequest/properties/range/$ref str DimensionRange
schemas/AddDimensionGroupRequest/properties/range/description str The range over which to create a group.
schemas/AddDimensionGroupRequest/type str object
schemas/AddDimensionGroupResponse dict
schemas/AddDimensionGroupResponse/description str The result of adding a group.
schemas/AddDimensionGroupResponse/id str AddDimensionGroupResponse
schemas/AddDimensionGroupResponse/properties dict
schemas/AddDimensionGroupResponse/properties/dimensionGroups dict
schemas/AddDimensionGroupResponse/properties/dimensionGroups/description str All groups of a dimension after adding a group to that dimension.
schemas/AddDimensionGroupResponse/properties/dimensionGroups/items dict
schemas/AddDimensionGroupResponse/properties/dimensionGroups/items/$ref str DimensionGroup
schemas/AddDimensionGroupResponse/properties/dimensionGroups/type str array
schemas/AddDimensionGroupResponse/type str object
schemas/AddFilterViewRequest dict
schemas/AddFilterViewRequest/description str Adds a filter view.
schemas/AddFilterViewRequest/id str AddFilterViewRequest
schemas/AddFilterViewRequest/properties dict
schemas/AddFilterViewRequest/properties/filter dict
schemas/AddFilterViewRequest/properties/filter/$ref str FilterView
schemas/AddFilterViewRequest/properties/filter/description str The filter to add. The filterViewId
field is optional; if one is not set, an id will be randomly generated. (It
is an error to specify the ID of a filter that already exists.)
schemas/AddFilterViewRequest/type str object
schemas/AddFilterViewResponse dict
schemas/AddFilterViewResponse/description str The result of adding a filter view.
schemas/AddFilterViewResponse/id str AddFilterViewResponse
schemas/AddFilterViewResponse/properties dict
schemas/AddFilterViewResponse/properties/filter dict
schemas/AddFilterViewResponse/properties/filter/$ref str FilterView
schemas/AddFilterViewResponse/properties/filter/description str The newly added filter view.
schemas/AddFilterViewResponse/type str object
schemas/AddNamedRangeRequest dict
schemas/AddNamedRangeRequest/description str Adds a named range to the spreadsheet.
schemas/AddNamedRangeRequest/id str AddNamedRangeRequest
schemas/AddNamedRangeRequest/properties dict
schemas/AddNamedRangeRequest/properties/namedRange dict
schemas/AddNamedRangeRequest/properties/namedRange/$ref str NamedRange
schemas/AddNamedRangeRequest/properties/namedRange/description str The named range to add. The namedRangeId
field is optional; if one is not set, an id will be randomly generated. (It
is an error to specify the ID of a range that already exists.)
schemas/AddNamedRangeRequest/type str object
schemas/AddNamedRangeResponse dict
schemas/AddNamedRangeResponse/description str The result of adding a named range.
schemas/AddNamedRangeResponse/id str AddNamedRangeResponse
schemas/AddNamedRangeResponse/properties dict
schemas/AddNamedRangeResponse/properties/namedRange dict
schemas/AddNamedRangeResponse/properties/namedRange/$ref str NamedRange
schemas/AddNamedRangeResponse/properties/namedRange/description str The named range to add.
schemas/AddNamedRangeResponse/type str object
schemas/AddProtectedRangeRequest dict
schemas/AddProtectedRangeRequest/description str Adds a new protected range.
schemas/AddProtectedRangeRequest/id str AddProtectedRangeRequest
schemas/AddProtectedRangeRequest/properties dict
schemas/AddProtectedRangeRequest/properties/protectedRange dict
schemas/AddProtectedRangeRequest/properties/protectedRange/$ref str ProtectedRange
schemas/AddProtectedRangeRequest/properties/protectedRange/description str The protected range to be added. The
protectedRangeId field is optional; if
one is not set, an id will be randomly generated. (It is an error to
specify the ID of a range that already exists.)
schemas/AddProtectedRangeRequest/type str object
schemas/AddProtectedRangeResponse dict
schemas/AddProtectedRangeResponse/description str The result of adding a new protected range.
schemas/AddProtectedRangeResponse/id str AddProtectedRangeResponse
schemas/AddProtectedRangeResponse/properties dict
schemas/AddProtectedRangeResponse/properties/protectedRange dict
schemas/AddProtectedRangeResponse/properties/protectedRange/$ref str ProtectedRange
schemas/AddProtectedRangeResponse/properties/protectedRange/description str The newly added protected range.
schemas/AddProtectedRangeResponse/type str object
schemas/AddSheetRequest dict
schemas/AddSheetRequest/description str Adds a new sheet.
When a sheet is added at a given index,
all subsequent sheets' indexes are incremented.
To add an object sheet, use AddChartRequest instead and specify
EmbeddedObjectPosition.sheetId or
EmbeddedObjectPosition.newSheet.
schemas/AddSheetRequest/id str AddSheetRequest
schemas/AddSheetRequest/properties dict
schemas/AddSheetRequest/properties/properties dict
schemas/AddSheetRequest/properties/properties/$ref str SheetProperties
schemas/AddSheetRequest/properties/properties/description str The properties the new sheet should have.
All properties are optional.
The sheetId field is optional; if one is not
set, an id will be randomly generated. (It is an error to specify the ID
of a sheet that already exists.)
schemas/AddSheetRequest/type str object
schemas/AddSheetResponse dict
schemas/AddSheetResponse/description str The result of adding a sheet.
schemas/AddSheetResponse/id str AddSheetResponse
schemas/AddSheetResponse/properties dict
schemas/AddSheetResponse/properties/properties dict
schemas/AddSheetResponse/properties/properties/$ref str SheetProperties
schemas/AddSheetResponse/properties/properties/description str The properties of the newly added sheet.
schemas/AddSheetResponse/type str object
schemas/AppendCellsRequest dict
schemas/AppendCellsRequest/description str Adds new cells after the last row with data in a sheet,
inserting new rows into the sheet if necessary.
schemas/AppendCellsRequest/id str AppendCellsRequest
schemas/AppendCellsRequest/properties dict
schemas/AppendCellsRequest/properties/fields dict
schemas/AppendCellsRequest/properties/fields/description str The fields of CellData that should be updated.
At least one field must be specified.
The root is the CellData; 'row.values.' should not be specified.
A single `"*"` can be used as short-hand for listing every field.
schemas/AppendCellsRequest/properties/fields/format str google-fieldmask
schemas/AppendCellsRequest/properties/fields/type str string
schemas/AppendCellsRequest/properties/rows dict
schemas/AppendCellsRequest/properties/rows/description str The data to append.
schemas/AppendCellsRequest/properties/rows/items dict
schemas/AppendCellsRequest/properties/rows/items/$ref str RowData
schemas/AppendCellsRequest/properties/rows/type str array
schemas/AppendCellsRequest/properties/sheetId dict
schemas/AppendCellsRequest/properties/sheetId/description str The sheet ID to append the data to.
schemas/AppendCellsRequest/properties/sheetId/format str int32
schemas/AppendCellsRequest/properties/sheetId/type str integer
schemas/AppendCellsRequest/type str object
schemas/AppendDimensionRequest dict
schemas/AppendDimensionRequest/description str Appends rows or columns to the end of a sheet.
schemas/AppendDimensionRequest/id str AppendDimensionRequest
schemas/AppendDimensionRequest/properties dict
schemas/AppendDimensionRequest/properties/dimension dict
schemas/AppendDimensionRequest/properties/dimension/description str Whether rows or columns should be appended.
schemas/AppendDimensionRequest/properties/dimension/enum list
schemas/AppendDimensionRequest/properties/dimension/enum/[] str DIMENSION_UNSPECIFIED
schemas/AppendDimensionRequest/properties/dimension/enumDescriptions list
schemas/AppendDimensionRequest/properties/dimension/enumDescriptions/[] str The default value, do not use.
schemas/AppendDimensionRequest/properties/dimension/type str string
schemas/AppendDimensionRequest/properties/length dict
schemas/AppendDimensionRequest/properties/length/description str The number of rows or columns to append.
schemas/AppendDimensionRequest/properties/length/format str int32
schemas/AppendDimensionRequest/properties/length/type str integer
schemas/AppendDimensionRequest/properties/sheetId dict
schemas/AppendDimensionRequest/properties/sheetId/description str The sheet to append rows or columns to.
schemas/AppendDimensionRequest/properties/sheetId/format str int32
schemas/AppendDimensionRequest/properties/sheetId/type str integer
schemas/AppendDimensionRequest/type str object
schemas/AppendValuesResponse dict
schemas/AppendValuesResponse/description str The response when updating a range of values in a spreadsheet.
schemas/AppendValuesResponse/id str AppendValuesResponse
schemas/AppendValuesResponse/properties dict
schemas/AppendValuesResponse/properties/spreadsheetId dict
schemas/AppendValuesResponse/properties/spreadsheetId/description str The spreadsheet the updates were applied to.
schemas/AppendValuesResponse/properties/spreadsheetId/type str string
schemas/AppendValuesResponse/properties/tableRange dict
schemas/AppendValuesResponse/properties/tableRange/description str The range (in A1 notation) of the table that values are being appended to
(before the values were appended).
Empty if no table was found.
schemas/AppendValuesResponse/properties/tableRange/type str string
schemas/AppendValuesResponse/properties/updates dict
schemas/AppendValuesResponse/properties/updates/$ref str UpdateValuesResponse
schemas/AppendValuesResponse/properties/updates/description str Information about the updates that were applied.
schemas/AppendValuesResponse/type str object
schemas/AutoFillRequest dict
schemas/AutoFillRequest/description str Fills in more data based on existing data.
schemas/AutoFillRequest/id str AutoFillRequest
schemas/AutoFillRequest/properties dict
schemas/AutoFillRequest/properties/range dict
schemas/AutoFillRequest/properties/range/$ref str GridRange
schemas/AutoFillRequest/properties/range/description str The range to autofill. This will examine the range and detect
the location that has data and automatically fill that data
in to the rest of the range.
schemas/AutoFillRequest/properties/sourceAndDestination dict
schemas/AutoFillRequest/properties/sourceAndDestination/$ref str SourceAndDestination
schemas/AutoFillRequest/properties/sourceAndDestination/description str The source and destination areas to autofill.
This explicitly lists the source of the autofill and where to
extend that data.
schemas/AutoFillRequest/properties/useAlternateSeries dict
schemas/AutoFillRequest/properties/useAlternateSeries/description str True if we should generate data with the "alternate" series.
This differs based on the type and amount of source data.
schemas/AutoFillRequest/properties/useAlternateSeries/type str boolean
schemas/AutoFillRequest/type str object
schemas/AutoResizeDimensionsRequest dict
schemas/AutoResizeDimensionsRequest/description str Automatically resizes one or more dimensions based on the contents
of the cells in that dimension.
schemas/AutoResizeDimensionsRequest/id str AutoResizeDimensionsRequest
schemas/AutoResizeDimensionsRequest/properties dict
schemas/AutoResizeDimensionsRequest/properties/dimensions dict
schemas/AutoResizeDimensionsRequest/properties/dimensions/$ref str DimensionRange
schemas/AutoResizeDimensionsRequest/properties/dimensions/description str The dimensions to automatically resize.
schemas/AutoResizeDimensionsRequest/type str object
schemas/BandedRange dict
schemas/BandedRange/description str A banded (alternating colors) range in a sheet.
schemas/BandedRange/id str BandedRange
schemas/BandedRange/properties dict
schemas/BandedRange/properties/bandedRangeId dict
schemas/BandedRange/properties/bandedRangeId/description str The id of the banded range.
schemas/BandedRange/properties/bandedRangeId/format str int32
schemas/BandedRange/properties/bandedRangeId/type str integer
schemas/BandedRange/properties/columnProperties dict
schemas/BandedRange/properties/columnProperties/$ref str BandingProperties
schemas/BandedRange/properties/columnProperties/description str Properties for column bands. These properties are applied on a column-
by-column basis throughout all the columns in the range. At least one of
row_properties or column_properties must be specified.
schemas/BandedRange/properties/range dict
schemas/BandedRange/properties/range/$ref str GridRange
schemas/BandedRange/properties/range/description str The range over which these properties are applied.
schemas/BandedRange/properties/rowProperties dict
schemas/BandedRange/properties/rowProperties/$ref str BandingProperties
schemas/BandedRange/properties/rowProperties/description str Properties for row bands. These properties are applied on a row-by-row
basis throughout all the rows in the range. At least one of
row_properties or column_properties must be specified.
schemas/BandedRange/type str object
schemas/BandingProperties dict
schemas/BandingProperties/description str Properties referring a single dimension (either row or column). If both
BandedRange.row_properties and BandedRange.column_properties are
set, the fill colors are applied to cells according to the following rules:

* header_color and footer_color take priority over band colors.
* first_band_color takes priority over second_band_color.
* row_properties takes priority over column_properties.

For example, the first row color takes priority over the first column
color, but the first column color takes priority over the second row color.
Similarly, the row header takes priority over the column header in the
top left cell, but the column header takes priority over the first row
color if the row header is not set.
schemas/BandingProperties/id str BandingProperties
schemas/BandingProperties/properties dict
schemas/BandingProperties/properties/firstBandColor dict
schemas/BandingProperties/properties/firstBandColor/$ref str Color
schemas/BandingProperties/properties/firstBandColor/description str The first color that is alternating. (Required)
schemas/BandingProperties/properties/footerColor dict
schemas/BandingProperties/properties/footerColor/$ref str Color
schemas/BandingProperties/properties/footerColor/description str The color of the last row or column. If this field is not set, the last
row or column will be filled with either first_band_color or
second_band_color, depending on the color of the previous row or
column.
schemas/BandingProperties/properties/headerColor dict
schemas/BandingProperties/properties/headerColor/$ref str Color
schemas/BandingProperties/properties/headerColor/description str The color of the first row or column. If this field is set, the first
row or column will be filled with this color and the colors will
alternate between first_band_color and second_band_color starting
from the second row or column. Otherwise, the first row or column will be
filled with first_band_color and the colors will proceed to alternate
as they normally would.
schemas/BandingProperties/properties/secondBandColor dict
schemas/BandingProperties/properties/secondBandColor/$ref str Color
schemas/BandingProperties/properties/secondBandColor/description str The second color that is alternating. (Required)
schemas/BandingProperties/type str object
schemas/BasicChartAxis dict
schemas/BasicChartAxis/description str An axis of the chart.
A chart may not have more than one axis per
axis position.
schemas/BasicChartAxis/id str BasicChartAxis
schemas/BasicChartAxis/properties dict
schemas/BasicChartAxis/properties/format dict
schemas/BasicChartAxis/properties/format/$ref str TextFormat
schemas/BasicChartAxis/properties/format/description str The format of the title.
Only valid if the axis is not associated with the domain.
schemas/BasicChartAxis/properties/position dict
schemas/BasicChartAxis/properties/position/description str The position of this axis.
schemas/BasicChartAxis/properties/position/enum list
schemas/BasicChartAxis/properties/position/enum/[] str BASIC_CHART_AXIS_POSITION_UNSPECIFIED
schemas/BasicChartAxis/properties/position/enumDescriptions list
schemas/BasicChartAxis/properties/position/enumDescriptions/[] str Default value, do not use.
schemas/BasicChartAxis/properties/position/type str string
schemas/BasicChartAxis/properties/title dict
schemas/BasicChartAxis/properties/title/description str The title of this axis. If set, this overrides any title inferred
from headers of the data.
schemas/BasicChartAxis/properties/title/type str string
schemas/BasicChartAxis/properties/titleTextPosition dict
schemas/BasicChartAxis/properties/titleTextPosition/$ref str TextPosition
schemas/BasicChartAxis/properties/titleTextPosition/description str The axis title text position.
schemas/BasicChartAxis/type str object
schemas/BasicChartDomain dict
schemas/BasicChartDomain/description str The domain of a chart.
For example, if charting stock prices over time, this would be the date.
schemas/BasicChartDomain/id str BasicChartDomain
schemas/BasicChartDomain/properties dict
schemas/BasicChartDomain/properties/domain dict
schemas/BasicChartDomain/properties/domain/$ref str ChartData
schemas/BasicChartDomain/properties/domain/description str The data of the domain. For example, if charting stock prices over time,
this is the data representing the dates.
schemas/BasicChartDomain/properties/reversed dict
schemas/BasicChartDomain/properties/reversed/description str True to reverse the order of the domain values (horizontal axis).
schemas/BasicChartDomain/properties/reversed/type str boolean
schemas/BasicChartDomain/type str object
schemas/BasicChartSeries dict
schemas/BasicChartSeries/description str A single series of data in a chart.
For example, if charting stock prices over time, multiple series may exist,
one for the "Open Price", "High Price", "Low Price" and "Close Price".
schemas/BasicChartSeries/id str BasicChartSeries
schemas/BasicChartSeries/properties dict
schemas/BasicChartSeries/properties/color dict
schemas/BasicChartSeries/properties/color/$ref str Color
schemas/BasicChartSeries/properties/color/description str The color for elements (i.e. bars, lines, points) associated with this
series.  If empty, a default color is used.
schemas/BasicChartSeries/properties/lineStyle dict
schemas/BasicChartSeries/properties/lineStyle/$ref str LineStyle
schemas/BasicChartSeries/properties/lineStyle/description str The line style of this series. Valid only if the
chartType is AREA,
LINE, or SCATTER.
COMBO charts are also supported if the
series chart type is
AREA or LINE.
schemas/BasicChartSeries/properties/series dict
schemas/BasicChartSeries/properties/series/$ref str ChartData
schemas/BasicChartSeries/properties/series/description str The data being visualized in this chart series.
schemas/BasicChartSeries/properties/targetAxis dict
schemas/BasicChartSeries/properties/targetAxis/description str The minor axis that will specify the range of values for this series.
For example, if charting stocks over time, the "Volume" series
may want to be pinned to the right with the prices pinned to the left,
because the scale of trading volume is different than the scale of
prices.
It is an error to specify an axis that isn't a valid minor axis
for the chart's type.
schemas/BasicChartSeries/properties/targetAxis/enum list
schemas/BasicChartSeries/properties/targetAxis/enum/[] str BASIC_CHART_AXIS_POSITION_UNSPECIFIED
schemas/BasicChartSeries/properties/targetAxis/enumDescriptions list
schemas/BasicChartSeries/properties/targetAxis/enumDescriptions/[] str Default value, do not use.
schemas/BasicChartSeries/properties/targetAxis/type str string
schemas/BasicChartSeries/properties/type dict
schemas/BasicChartSeries/properties/type/description str The type of this series. Valid only if the
chartType is
COMBO.
Different types will change the way the series is visualized.
Only LINE, AREA,
and COLUMN are supported.
schemas/BasicChartSeries/properties/type/enum list
schemas/BasicChartSeries/properties/type/enum/[] str BASIC_CHART_TYPE_UNSPECIFIED
schemas/BasicChartSeries/properties/type/enumDescriptions list
schemas/BasicChartSeries/properties/type/enumDescriptions/[] str Default value, do not use.
schemas/BasicChartSeries/properties/type/type str string
schemas/BasicChartSeries/type str object
schemas/BasicChartSpec dict
schemas/BasicChartSpec/description str The specification for a basic chart.  See BasicChartType for the list
of charts this supports.
schemas/BasicChartSpec/id str BasicChartSpec
schemas/BasicChartSpec/properties dict
schemas/BasicChartSpec/properties/axis dict
schemas/BasicChartSpec/properties/axis/description str The axis on the chart.
schemas/BasicChartSpec/properties/axis/items dict
schemas/BasicChartSpec/properties/axis/items/$ref str BasicChartAxis
schemas/BasicChartSpec/properties/axis/type str array
schemas/BasicChartSpec/properties/chartType dict
schemas/BasicChartSpec/properties/chartType/description str The type of the chart.
schemas/BasicChartSpec/properties/chartType/enum list
schemas/BasicChartSpec/properties/chartType/enum/[] str BASIC_CHART_TYPE_UNSPECIFIED
schemas/BasicChartSpec/properties/chartType/enumDescriptions list
schemas/BasicChartSpec/properties/chartType/enumDescriptions/[] str Default value, do not use.
schemas/BasicChartSpec/properties/chartType/type str string
schemas/BasicChartSpec/properties/compareMode dict
schemas/BasicChartSpec/properties/compareMode/description str The behavior of tooltips and data highlighting when hovering on data and
chart area.
schemas/BasicChartSpec/properties/compareMode/enum list
schemas/BasicChartSpec/properties/compareMode/enum/[] str BASIC_CHART_COMPARE_MODE_UNSPECIFIED
schemas/BasicChartSpec/properties/compareMode/enumDescriptions list
schemas/BasicChartSpec/properties/compareMode/enumDescriptions/[] str Default value, do not use.
schemas/BasicChartSpec/properties/compareMode/type str string
schemas/BasicChartSpec/properties/domains dict
schemas/BasicChartSpec/properties/domains/description str The domain of data this is charting.
Only a single domain is supported.
schemas/BasicChartSpec/properties/domains/items dict
schemas/BasicChartSpec/properties/domains/items/$ref str BasicChartDomain
schemas/BasicChartSpec/properties/domains/type str array
schemas/BasicChartSpec/properties/headerCount dict
schemas/BasicChartSpec/properties/headerCount/description str The number of rows or columns in the data that are "headers".
If not set, Google Sheets will guess how many rows are headers based
on the data.

(Note that BasicChartAxis.title may override the axis title
 inferred from the header values.)
schemas/BasicChartSpec/properties/headerCount/format str int32
schemas/BasicChartSpec/properties/headerCount/type str integer
schemas/BasicChartSpec/properties/interpolateNulls dict
schemas/BasicChartSpec/properties/interpolateNulls/description str If some values in a series are missing, gaps may appear in the chart (e.g,
segments of lines in a line chart will be missing).  To eliminate these
gaps set this to true.
Applies to Line, Area, and Combo charts.
schemas/BasicChartSpec/properties/interpolateNulls/type str boolean
schemas/BasicChartSpec/properties/legendPosition dict
schemas/BasicChartSpec/properties/legendPosition/description str The position of the chart legend.
schemas/BasicChartSpec/properties/legendPosition/enum list
schemas/BasicChartSpec/properties/legendPosition/enum/[] str BASIC_CHART_LEGEND_POSITION_UNSPECIFIED
schemas/BasicChartSpec/properties/legendPosition/enumDescriptions list
schemas/BasicChartSpec/properties/legendPosition/enumDescriptions/[] str Default value, do not use.
schemas/BasicChartSpec/properties/legendPosition/type str string
schemas/BasicChartSpec/properties/lineSmoothing dict
schemas/BasicChartSpec/properties/lineSmoothing/description str Gets whether all lines should be rendered smooth or straight by default.
Applies to Line charts.
schemas/BasicChartSpec/properties/lineSmoothing/type str boolean
schemas/BasicChartSpec/properties/series dict
schemas/BasicChartSpec/properties/series/description str The data this chart is visualizing.
schemas/BasicChartSpec/properties/series/items dict
schemas/BasicChartSpec/properties/series/items/$ref str BasicChartSeries
schemas/BasicChartSpec/properties/series/type str array
schemas/BasicChartSpec/properties/stackedType dict
schemas/BasicChartSpec/properties/stackedType/description str The stacked type for charts that support vertical stacking.
Applies to Area, Bar, Column, Combo, and Stepped Area charts.
schemas/BasicChartSpec/properties/stackedType/enum list
schemas/BasicChartSpec/properties/stackedType/enum/[] str BASIC_CHART_STACKED_TYPE_UNSPECIFIED
schemas/BasicChartSpec/properties/stackedType/enumDescriptions list
schemas/BasicChartSpec/properties/stackedType/enumDescriptions/[] str Default value, do not use.
schemas/BasicChartSpec/properties/stackedType/type str string
schemas/BasicChartSpec/properties/threeDimensional dict
schemas/BasicChartSpec/properties/threeDimensional/description str True to make the chart 3D.
Applies to Bar and Column charts.
schemas/BasicChartSpec/properties/threeDimensional/type str boolean
schemas/BasicChartSpec/type str object
schemas/BasicFilter dict
schemas/BasicFilter/description str The default filter associated with a sheet.
schemas/BasicFilter/id str BasicFilter
schemas/BasicFilter/properties dict
schemas/BasicFilter/properties/criteria dict
schemas/BasicFilter/properties/criteria/additionalProperties dict
schemas/BasicFilter/properties/criteria/additionalProperties/$ref str FilterCriteria
schemas/BasicFilter/properties/criteria/description str The criteria for showing/hiding values per column.
The map's key is the column index, and the value is the criteria for
that column.
schemas/BasicFilter/properties/criteria/type str object
schemas/BasicFilter/properties/range dict
schemas/BasicFilter/properties/range/$ref str GridRange
schemas/BasicFilter/properties/range/description str The range the filter covers.
schemas/BasicFilter/properties/sortSpecs dict
schemas/BasicFilter/properties/sortSpecs/description str The sort order per column. Later specifications are used when values
are equal in the earlier specifications.
schemas/BasicFilter/properties/sortSpecs/items dict
schemas/BasicFilter/properties/sortSpecs/items/$ref str SortSpec
schemas/BasicFilter/properties/sortSpecs/type str array
schemas/BasicFilter/type str object
schemas/BatchClearValuesByDataFilterRequest dict
schemas/BatchClearValuesByDataFilterRequest/description str The request for clearing more than one range selected by a
DataFilter in a spreadsheet.
schemas/BatchClearValuesByDataFilterRequest/id str BatchClearValuesByDataFilterRequest
schemas/BatchClearValuesByDataFilterRequest/properties dict
schemas/BatchClearValuesByDataFilterRequest/properties/dataFilters dict
schemas/BatchClearValuesByDataFilterRequest/properties/dataFilters/description str The DataFilters used to determine which ranges to clear.
schemas/BatchClearValuesByDataFilterRequest/properties/dataFilters/items dict
schemas/BatchClearValuesByDataFilterRequest/properties/dataFilters/items/$ref str DataFilter
schemas/BatchClearValuesByDataFilterRequest/properties/dataFilters/type str array
schemas/BatchClearValuesByDataFilterRequest/type str object
schemas/BatchClearValuesByDataFilterResponse dict
schemas/BatchClearValuesByDataFilterResponse/description str The response when clearing a range of values selected with
DataFilters in a spreadsheet.
schemas/BatchClearValuesByDataFilterResponse/id str BatchClearValuesByDataFilterResponse
schemas/BatchClearValuesByDataFilterResponse/properties dict
schemas/BatchClearValuesByDataFilterResponse/properties/clearedRanges dict
schemas/BatchClearValuesByDataFilterResponse/properties/clearedRanges/description str The ranges that were cleared, in A1 notation.
(If the requests were for an unbounded range or a ranger larger
 than the bounds of the sheet, this will be the actual ranges
 that were cleared, bounded to the sheet's limits.)
schemas/BatchClearValuesByDataFilterResponse/properties/clearedRanges/items dict
schemas/BatchClearValuesByDataFilterResponse/properties/clearedRanges/items/type str string
schemas/BatchClearValuesByDataFilterResponse/properties/clearedRanges/type str array
schemas/BatchClearValuesByDataFilterResponse/properties/spreadsheetId dict
schemas/BatchClearValuesByDataFilterResponse/properties/spreadsheetId/description str The spreadsheet the updates were applied to.
schemas/BatchClearValuesByDataFilterResponse/properties/spreadsheetId/type str string
schemas/BatchClearValuesByDataFilterResponse/type str object
schemas/BatchClearValuesRequest dict
schemas/BatchClearValuesRequest/description str The request for clearing more than one range of values in a spreadsheet.
schemas/BatchClearValuesRequest/id str BatchClearValuesRequest
schemas/BatchClearValuesRequest/properties dict
schemas/BatchClearValuesRequest/properties/ranges dict
schemas/BatchClearValuesRequest/properties/ranges/description str The ranges to clear, in A1 notation.
schemas/BatchClearValuesRequest/properties/ranges/items dict
schemas/BatchClearValuesRequest/properties/ranges/items/type str string
schemas/BatchClearValuesRequest/properties/ranges/type str array
schemas/BatchClearValuesRequest/type str object
schemas/BatchClearValuesResponse dict
schemas/BatchClearValuesResponse/description str The response when clearing a range of values in a spreadsheet.
schemas/BatchClearValuesResponse/id str BatchClearValuesResponse
schemas/BatchClearValuesResponse/properties dict
schemas/BatchClearValuesResponse/properties/clearedRanges dict
schemas/BatchClearValuesResponse/properties/clearedRanges/description str The ranges that were cleared, in A1 notation.
(If the requests were for an unbounded range or a ranger larger
 than the bounds of the sheet, this will be the actual ranges
 that were cleared, bounded to the sheet's limits.)
schemas/BatchClearValuesResponse/properties/clearedRanges/items dict
schemas/BatchClearValuesResponse/properties/clearedRanges/items/type str string
schemas/BatchClearValuesResponse/properties/clearedRanges/type str array
schemas/BatchClearValuesResponse/properties/spreadsheetId dict
schemas/BatchClearValuesResponse/properties/spreadsheetId/description str The spreadsheet the updates were applied to.
schemas/BatchClearValuesResponse/properties/spreadsheetId/type str string
schemas/BatchClearValuesResponse/type str object
schemas/BatchGetValuesByDataFilterRequest dict
schemas/BatchGetValuesByDataFilterRequest/description str The request for retrieving a range of values in a spreadsheet selected by a
set of DataFilters.
schemas/BatchGetValuesByDataFilterRequest/id str BatchGetValuesByDataFilterRequest
schemas/BatchGetValuesByDataFilterRequest/properties dict
schemas/BatchGetValuesByDataFilterRequest/properties/dataFilters dict
schemas/BatchGetValuesByDataFilterRequest/properties/dataFilters/description str The data filters used to match the ranges of values to retrieve.  Ranges
that match any of the specified data filters will be included in the
response.
schemas/BatchGetValuesByDataFilterRequest/properties/dataFilters/items dict
schemas/BatchGetValuesByDataFilterRequest/properties/dataFilters/items/$ref str DataFilter
schemas/BatchGetValuesByDataFilterRequest/properties/dataFilters/type str array
schemas/BatchGetValuesByDataFilterRequest/properties/dateTimeRenderOption dict
schemas/BatchGetValuesByDataFilterRequest/properties/dateTimeRenderOption/description str How dates, times, and durations should be represented in the output.
This is ignored if value_render_option is
FORMATTED_VALUE.
The default dateTime render option is [DateTimeRenderOption.SERIAL_NUMBER].
schemas/BatchGetValuesByDataFilterRequest/properties/dateTimeRenderOption/enum list
schemas/BatchGetValuesByDataFilterRequest/properties/dateTimeRenderOption/enum/[] str SERIAL_NUMBER
schemas/BatchGetValuesByDataFilterRequest/properties/dateTimeRenderOption/enumDescriptions list
schemas/BatchGetValuesByDataFilterRequest/properties/dateTimeRenderOption/enumDescriptions/[] str Instructs date, time, datetime, and duration fields to be output
as doubles in "serial number" format, as popularized by Lotus 1-2-3.
The whole number portion of the value (left of the decimal) counts
the days since December 30th 1899. The fractional portion (right of
the decimal) counts the time as a fraction of the day. For example,
January 1st 1900 at noon would be 2.5, 2 because it's 2 days after
December 30st 1899, and .5 because noon is half a day.  February 1st
1900 at 3pm would be 33.625. This correctly treats the year 1900 as
not a leap year.
schemas/BatchGetValuesByDataFilterRequest/properties/dateTimeRenderOption/type str string
schemas/BatchGetValuesByDataFilterRequest/properties/majorDimension dict
schemas/BatchGetValuesByDataFilterRequest/properties/majorDimension/description str The major dimension that results should use.

For example, if the spreadsheet data is: `A1=1,B1=2,A2=3,B2=4`,
then a request that selects that range and sets `majorDimension=ROWS` will
return `[[1,2],[3,4]]`,
whereas a request that sets `majorDimension=COLUMNS` will return
`[[1,3],[2,4]]`.
schemas/BatchGetValuesByDataFilterRequest/properties/majorDimension/enum list
schemas/BatchGetValuesByDataFilterRequest/properties/majorDimension/enum/[] str DIMENSION_UNSPECIFIED
schemas/BatchGetValuesByDataFilterRequest/properties/majorDimension/enumDescriptions list
schemas/BatchGetValuesByDataFilterRequest/properties/majorDimension/enumDescriptions/[] str The default value, do not use.
schemas/BatchGetValuesByDataFilterRequest/properties/majorDimension/type str string
schemas/BatchGetValuesByDataFilterRequest/properties/valueRenderOption dict
schemas/BatchGetValuesByDataFilterRequest/properties/valueRenderOption/description str How values should be represented in the output.
The default render option is ValueRenderOption.FORMATTED_VALUE.
schemas/BatchGetValuesByDataFilterRequest/properties/valueRenderOption/enum list
schemas/BatchGetValuesByDataFilterRequest/properties/valueRenderOption/enum/[] str FORMATTED_VALUE
schemas/BatchGetValuesByDataFilterRequest/properties/valueRenderOption/enumDescriptions list
schemas/BatchGetValuesByDataFilterRequest/properties/valueRenderOption/enumDescriptions/[] str Values will be calculated & formatted in the reply according to the
cell's formatting.  Formatting is based on the spreadsheet's locale,
not the requesting user's locale.
For example, if `A1` is `1.23` and `A2` is `=A1` and formatted as currency,
then `A2` would return `"$1.23"`.
schemas/BatchGetValuesByDataFilterRequest/properties/valueRenderOption/type str string
schemas/BatchGetValuesByDataFilterRequest/type str object
schemas/BatchGetValuesByDataFilterResponse dict
schemas/BatchGetValuesByDataFilterResponse/description str The response when retrieving more than one range of values in a spreadsheet
selected by DataFilters.
schemas/BatchGetValuesByDataFilterResponse/id str BatchGetValuesByDataFilterResponse
schemas/BatchGetValuesByDataFilterResponse/properties dict
schemas/BatchGetValuesByDataFilterResponse/properties/spreadsheetId dict
schemas/BatchGetValuesByDataFilterResponse/properties/spreadsheetId/description str The ID of the spreadsheet the data was retrieved from.
schemas/BatchGetValuesByDataFilterResponse/properties/spreadsheetId/type str string
schemas/BatchGetValuesByDataFilterResponse/properties/valueRanges dict
schemas/BatchGetValuesByDataFilterResponse/properties/valueRanges/description str The requested values with the list of data filters that matched them.
schemas/BatchGetValuesByDataFilterResponse/properties/valueRanges/items dict
schemas/BatchGetValuesByDataFilterResponse/properties/valueRanges/items/$ref str MatchedValueRange
schemas/BatchGetValuesByDataFilterResponse/properties/valueRanges/type str array
schemas/BatchGetValuesByDataFilterResponse/type str object
schemas/BatchGetValuesResponse dict
schemas/BatchGetValuesResponse/description str The response when retrieving more than one range of values in a spreadsheet.
schemas/BatchGetValuesResponse/id str BatchGetValuesResponse
schemas/BatchGetValuesResponse/properties dict
schemas/BatchGetValuesResponse/properties/spreadsheetId dict
schemas/BatchGetValuesResponse/properties/spreadsheetId/description str The ID of the spreadsheet the data was retrieved from.
schemas/BatchGetValuesResponse/properties/spreadsheetId/type str string
schemas/BatchGetValuesResponse/properties/valueRanges dict
schemas/BatchGetValuesResponse/properties/valueRanges/description str The requested values. The order of the ValueRanges is the same as the
order of the requested ranges.
schemas/BatchGetValuesResponse/properties/valueRanges/items dict
schemas/BatchGetValuesResponse/properties/valueRanges/items/$ref str ValueRange
schemas/BatchGetValuesResponse/properties/valueRanges/type str array
schemas/BatchGetValuesResponse/type str object
schemas/BatchUpdateSpreadsheetRequest dict
schemas/BatchUpdateSpreadsheetRequest/description str The request for updating any aspect of a spreadsheet.
schemas/BatchUpdateSpreadsheetRequest/id str BatchUpdateSpreadsheetRequest
schemas/BatchUpdateSpreadsheetRequest/properties dict
schemas/BatchUpdateSpreadsheetRequest/properties/includeSpreadsheetInResponse dict
schemas/BatchUpdateSpreadsheetRequest/properties/includeSpreadsheetInResponse/description str Determines if the update response should include the spreadsheet
resource.
schemas/BatchUpdateSpreadsheetRequest/properties/includeSpreadsheetInResponse/type str boolean
schemas/BatchUpdateSpreadsheetRequest/properties/requests dict
schemas/BatchUpdateSpreadsheetRequest/properties/requests/description str A list of updates to apply to the spreadsheet.
Requests will be applied in the order they are specified.
If any request is not valid, no requests will be applied.
schemas/BatchUpdateSpreadsheetRequest/properties/requests/items dict
schemas/BatchUpdateSpreadsheetRequest/properties/requests/items/$ref str Request
schemas/BatchUpdateSpreadsheetRequest/properties/requests/type str array
schemas/BatchUpdateSpreadsheetRequest/properties/responseIncludeGridData dict
schemas/BatchUpdateSpreadsheetRequest/properties/responseIncludeGridData/description str True if grid data should be returned. Meaningful only if
if include_spreadsheet_in_response is 'true'.
This parameter is ignored if a field mask was set in the request.
schemas/BatchUpdateSpreadsheetRequest/properties/responseIncludeGridData/type str boolean
schemas/BatchUpdateSpreadsheetRequest/properties/responseRanges dict
schemas/BatchUpdateSpreadsheetRequest/properties/responseRanges/description str Limits the ranges included in the response spreadsheet.
Meaningful only if include_spreadsheet_response is 'true'.
schemas/BatchUpdateSpreadsheetRequest/properties/responseRanges/items dict
schemas/BatchUpdateSpreadsheetRequest/properties/responseRanges/items/type str string
schemas/BatchUpdateSpreadsheetRequest/properties/responseRanges/type str array
schemas/BatchUpdateSpreadsheetRequest/type str object
schemas/BatchUpdateSpreadsheetResponse dict
schemas/BatchUpdateSpreadsheetResponse/description str The reply for batch updating a spreadsheet.
schemas/BatchUpdateSpreadsheetResponse/id str BatchUpdateSpreadsheetResponse
schemas/BatchUpdateSpreadsheetResponse/properties dict
schemas/BatchUpdateSpreadsheetResponse/properties/replies dict
schemas/BatchUpdateSpreadsheetResponse/properties/replies/description str The reply of the updates.  This maps 1:1 with the updates, although
replies to some requests may be empty.
schemas/BatchUpdateSpreadsheetResponse/properties/replies/items dict
schemas/BatchUpdateSpreadsheetResponse/properties/replies/items/$ref str Response
schemas/BatchUpdateSpreadsheetResponse/properties/replies/type str array
schemas/BatchUpdateSpreadsheetResponse/properties/spreadsheetId dict
schemas/BatchUpdateSpreadsheetResponse/properties/spreadsheetId/description str The spreadsheet the updates were applied to.
schemas/BatchUpdateSpreadsheetResponse/properties/spreadsheetId/type str string
schemas/BatchUpdateSpreadsheetResponse/properties/updatedSpreadsheet dict
schemas/BatchUpdateSpreadsheetResponse/properties/updatedSpreadsheet/$ref str Spreadsheet
schemas/BatchUpdateSpreadsheetResponse/properties/updatedSpreadsheet/description str The spreadsheet after updates were applied. This is only set if
[BatchUpdateSpreadsheetRequest.include_spreadsheet_in_response] is `true`.
schemas/BatchUpdateSpreadsheetResponse/type str object
schemas/BatchUpdateValuesByDataFilterRequest dict
schemas/BatchUpdateValuesByDataFilterRequest/description str The request for updating more than one range of values in a spreadsheet.
schemas/BatchUpdateValuesByDataFilterRequest/id str BatchUpdateValuesByDataFilterRequest
schemas/BatchUpdateValuesByDataFilterRequest/properties dict
schemas/BatchUpdateValuesByDataFilterRequest/properties/data dict
schemas/BatchUpdateValuesByDataFilterRequest/properties/data/description str The new values to apply to the spreadsheet.  If more than one range is
matched by the specified DataFilter the specified values will be
applied to all of those ranges.
schemas/BatchUpdateValuesByDataFilterRequest/properties/data/items dict
schemas/BatchUpdateValuesByDataFilterRequest/properties/data/items/$ref str DataFilterValueRange
schemas/BatchUpdateValuesByDataFilterRequest/properties/data/type str array
schemas/BatchUpdateValuesByDataFilterRequest/properties/includeValuesInResponse dict
schemas/BatchUpdateValuesByDataFilterRequest/properties/includeValuesInResponse/description str Determines if the update response should include the values
of the cells that were updated. By default, responses
do not include the updated values. The `updatedData` field within
each of the BatchUpdateValuesResponse.responses will contain
the updated values. If the range to write was larger than than the range
actually written, the response will include all values in the requested
range (excluding trailing empty rows and columns).
schemas/BatchUpdateValuesByDataFilterRequest/properties/includeValuesInResponse/type str boolean
schemas/BatchUpdateValuesByDataFilterRequest/properties/responseDateTimeRenderOption dict
schemas/BatchUpdateValuesByDataFilterRequest/properties/responseDateTimeRenderOption/description str Determines how dates, times, and durations in the response should be
rendered. This is ignored if response_value_render_option is
FORMATTED_VALUE.
The default dateTime render option is
DateTimeRenderOption.SERIAL_NUMBER.
schemas/BatchUpdateValuesByDataFilterRequest/properties/responseDateTimeRenderOption/enum list
schemas/BatchUpdateValuesByDataFilterRequest/properties/responseDateTimeRenderOption/enum/[] str SERIAL_NUMBER
schemas/BatchUpdateValuesByDataFilterRequest/properties/responseDateTimeRenderOption/enumDescriptions list
schemas/BatchUpdateValuesByDataFilterRequest/properties/responseDateTimeRenderOption/enumDescriptions/[] str Instructs date, time, datetime, and duration fields to be output
as doubles in "serial number" format, as popularized by Lotus 1-2-3.
The whole number portion of the value (left of the decimal) counts
the days since December 30th 1899. The fractional portion (right of
the decimal) counts the time as a fraction of the day. For example,
January 1st 1900 at noon would be 2.5, 2 because it's 2 days after
December 30st 1899, and .5 because noon is half a day.  February 1st
1900 at 3pm would be 33.625. This correctly treats the year 1900 as
not a leap year.
schemas/BatchUpdateValuesByDataFilterRequest/properties/responseDateTimeRenderOption/type str string
schemas/BatchUpdateValuesByDataFilterRequest/properties/responseValueRenderOption dict
schemas/BatchUpdateValuesByDataFilterRequest/properties/responseValueRenderOption/description str Determines how values in the response should be rendered.
The default render option is ValueRenderOption.FORMATTED_VALUE.
schemas/BatchUpdateValuesByDataFilterRequest/properties/responseValueRenderOption/enum list
schemas/BatchUpdateValuesByDataFilterRequest/properties/responseValueRenderOption/enum/[] str FORMATTED_VALUE
schemas/BatchUpdateValuesByDataFilterRequest/properties/responseValueRenderOption/enumDescriptions list
schemas/BatchUpdateValuesByDataFilterRequest/properties/responseValueRenderOption/enumDescriptions/[] str Values will be calculated & formatted in the reply according to the
cell's formatting.  Formatting is based on the spreadsheet's locale,
not the requesting user's locale.
For example, if `A1` is `1.23` and `A2` is `=A1` and formatted as currency,
then `A2` would return `"$1.23"`.
schemas/BatchUpdateValuesByDataFilterRequest/properties/responseValueRenderOption/type str string
schemas/BatchUpdateValuesByDataFilterRequest/properties/valueInputOption dict
schemas/BatchUpdateValuesByDataFilterRequest/properties/valueInputOption/description str How the input data should be interpreted.
schemas/BatchUpdateValuesByDataFilterRequest/properties/valueInputOption/enum list
schemas/BatchUpdateValuesByDataFilterRequest/properties/valueInputOption/enum/[] str INPUT_VALUE_OPTION_UNSPECIFIED
schemas/BatchUpdateValuesByDataFilterRequest/properties/valueInputOption/enumDescriptions list
schemas/BatchUpdateValuesByDataFilterRequest/properties/valueInputOption/enumDescriptions/[] str Default input value. This value must not be used.
schemas/BatchUpdateValuesByDataFilterRequest/properties/valueInputOption/type str string
schemas/BatchUpdateValuesByDataFilterRequest/type str object
schemas/BatchUpdateValuesByDataFilterResponse dict
schemas/BatchUpdateValuesByDataFilterResponse/description str The response when updating a range of values in a spreadsheet.
schemas/BatchUpdateValuesByDataFilterResponse/id str BatchUpdateValuesByDataFilterResponse
schemas/BatchUpdateValuesByDataFilterResponse/properties dict
schemas/BatchUpdateValuesByDataFilterResponse/properties/responses dict
schemas/BatchUpdateValuesByDataFilterResponse/properties/responses/description str The response for each range updated.
schemas/BatchUpdateValuesByDataFilterResponse/properties/responses/items dict
schemas/BatchUpdateValuesByDataFilterResponse/properties/responses/items/$ref str UpdateValuesByDataFilterResponse
schemas/BatchUpdateValuesByDataFilterResponse/properties/responses/type str array
schemas/BatchUpdateValuesByDataFilterResponse/properties/spreadsheetId dict
schemas/BatchUpdateValuesByDataFilterResponse/properties/spreadsheetId/description str The spreadsheet the updates were applied to.
schemas/BatchUpdateValuesByDataFilterResponse/properties/spreadsheetId/type str string
schemas/BatchUpdateValuesByDataFilterResponse/properties/totalUpdatedCells dict
schemas/BatchUpdateValuesByDataFilterResponse/properties/totalUpdatedCells/description str The total number of cells updated.
schemas/BatchUpdateValuesByDataFilterResponse/properties/totalUpdatedCells/format str int32
schemas/BatchUpdateValuesByDataFilterResponse/properties/totalUpdatedCells/type str integer
schemas/BatchUpdateValuesByDataFilterResponse/properties/totalUpdatedColumns dict
schemas/BatchUpdateValuesByDataFilterResponse/properties/totalUpdatedColumns/description str The total number of columns where at least one cell in the column was
updated.
schemas/BatchUpdateValuesByDataFilterResponse/properties/totalUpdatedColumns/format str int32
schemas/BatchUpdateValuesByDataFilterResponse/properties/totalUpdatedColumns/type str integer
schemas/BatchUpdateValuesByDataFilterResponse/properties/totalUpdatedRows dict
schemas/BatchUpdateValuesByDataFilterResponse/properties/totalUpdatedRows/description str The total number of rows where at least one cell in the row was updated.
schemas/BatchUpdateValuesByDataFilterResponse/properties/totalUpdatedRows/format str int32
schemas/BatchUpdateValuesByDataFilterResponse/properties/totalUpdatedRows/type str integer
schemas/BatchUpdateValuesByDataFilterResponse/properties/totalUpdatedSheets dict
schemas/BatchUpdateValuesByDataFilterResponse/properties/totalUpdatedSheets/description str The total number of sheets where at least one cell in the sheet was
updated.
schemas/BatchUpdateValuesByDataFilterResponse/properties/totalUpdatedSheets/format str int32
schemas/BatchUpdateValuesByDataFilterResponse/properties/totalUpdatedSheets/type str integer
schemas/BatchUpdateValuesByDataFilterResponse/type str object
schemas/BatchUpdateValuesRequest dict
schemas/BatchUpdateValuesRequest/description str The request for updating more than one range of values in a spreadsheet.
schemas/BatchUpdateValuesRequest/id str BatchUpdateValuesRequest
schemas/BatchUpdateValuesRequest/properties dict
schemas/BatchUpdateValuesRequest/properties/data dict
schemas/BatchUpdateValuesRequest/properties/data/description str The new values to apply to the spreadsheet.
schemas/BatchUpdateValuesRequest/properties/data/items dict
schemas/BatchUpdateValuesRequest/properties/data/items/$ref str ValueRange
schemas/BatchUpdateValuesRequest/properties/data/type str array
schemas/BatchUpdateValuesRequest/properties/includeValuesInResponse dict
schemas/BatchUpdateValuesRequest/properties/includeValuesInResponse/description str Determines if the update response should include the values
of the cells that were updated. By default, responses
do not include the updated values. The `updatedData` field within
each of the BatchUpdateValuesResponse.responses will contain
the updated values. If the range to write was larger than than the range
actually written, the response will include all values in the requested
range (excluding trailing empty rows and columns).
schemas/BatchUpdateValuesRequest/properties/includeValuesInResponse/type str boolean
schemas/BatchUpdateValuesRequest/properties/responseDateTimeRenderOption dict
schemas/BatchUpdateValuesRequest/properties/responseDateTimeRenderOption/description str Determines how dates, times, and durations in the response should be
rendered. This is ignored if response_value_render_option is
FORMATTED_VALUE.
The default dateTime render option is
DateTimeRenderOption.SERIAL_NUMBER.
schemas/BatchUpdateValuesRequest/properties/responseDateTimeRenderOption/enum list
schemas/BatchUpdateValuesRequest/properties/responseDateTimeRenderOption/enum/[] str SERIAL_NUMBER
schemas/BatchUpdateValuesRequest/properties/responseDateTimeRenderOption/enumDescriptions list
schemas/BatchUpdateValuesRequest/properties/responseDateTimeRenderOption/enumDescriptions/[] str Instructs date, time, datetime, and duration fields to be output
as doubles in "serial number" format, as popularized by Lotus 1-2-3.
The whole number portion of the value (left of the decimal) counts
the days since December 30th 1899. The fractional portion (right of
the decimal) counts the time as a fraction of the day. For example,
January 1st 1900 at noon would be 2.5, 2 because it's 2 days after
December 30st 1899, and .5 because noon is half a day.  February 1st
1900 at 3pm would be 33.625. This correctly treats the year 1900 as
not a leap year.
schemas/BatchUpdateValuesRequest/properties/responseDateTimeRenderOption/type str string
schemas/BatchUpdateValuesRequest/properties/responseValueRenderOption dict
schemas/BatchUpdateValuesRequest/properties/responseValueRenderOption/description str Determines how values in the response should be rendered.
The default render option is ValueRenderOption.FORMATTED_VALUE.
schemas/BatchUpdateValuesRequest/properties/responseValueRenderOption/enum list
schemas/BatchUpdateValuesRequest/properties/responseValueRenderOption/enum/[] str FORMATTED_VALUE
schemas/BatchUpdateValuesRequest/properties/responseValueRenderOption/enumDescriptions list
schemas/BatchUpdateValuesRequest/properties/responseValueRenderOption/enumDescriptions/[] str Values will be calculated & formatted in the reply according to the
cell's formatting.  Formatting is based on the spreadsheet's locale,
not the requesting user's locale.
For example, if `A1` is `1.23` and `A2` is `=A1` and formatted as currency,
then `A2` would return `"$1.23"`.
schemas/BatchUpdateValuesRequest/properties/responseValueRenderOption/type str string
schemas/BatchUpdateValuesRequest/properties/valueInputOption dict
schemas/BatchUpdateValuesRequest/properties/valueInputOption/description str How the input data should be interpreted.
schemas/BatchUpdateValuesRequest/properties/valueInputOption/enum list
schemas/BatchUpdateValuesRequest/properties/valueInputOption/enum/[] str INPUT_VALUE_OPTION_UNSPECIFIED
schemas/BatchUpdateValuesRequest/properties/valueInputOption/enumDescriptions list
schemas/BatchUpdateValuesRequest/properties/valueInputOption/enumDescriptions/[] str Default input value. This value must not be used.
schemas/BatchUpdateValuesRequest/properties/valueInputOption/type str string
schemas/BatchUpdateValuesRequest/type str object
schemas/BatchUpdateValuesResponse dict
schemas/BatchUpdateValuesResponse/description str The response when updating a range of values in a spreadsheet.
schemas/BatchUpdateValuesResponse/id str BatchUpdateValuesResponse
schemas/BatchUpdateValuesResponse/properties dict
schemas/BatchUpdateValuesResponse/properties/responses dict
schemas/BatchUpdateValuesResponse/properties/responses/description str One UpdateValuesResponse per requested range, in the same order as
the requests appeared.
schemas/BatchUpdateValuesResponse/properties/responses/items dict
schemas/BatchUpdateValuesResponse/properties/responses/items/$ref str UpdateValuesResponse
schemas/BatchUpdateValuesResponse/properties/responses/type str array
schemas/BatchUpdateValuesResponse/properties/spreadsheetId dict
schemas/BatchUpdateValuesResponse/properties/spreadsheetId/description str The spreadsheet the updates were applied to.
schemas/BatchUpdateValuesResponse/properties/spreadsheetId/type str string
schemas/BatchUpdateValuesResponse/properties/totalUpdatedCells dict
schemas/BatchUpdateValuesResponse/properties/totalUpdatedCells/description str The total number of cells updated.
schemas/BatchUpdateValuesResponse/properties/totalUpdatedCells/format str int32
schemas/BatchUpdateValuesResponse/properties/totalUpdatedCells/type str integer
schemas/BatchUpdateValuesResponse/properties/totalUpdatedColumns dict
schemas/BatchUpdateValuesResponse/properties/totalUpdatedColumns/description str The total number of columns where at least one cell in the column was
updated.
schemas/BatchUpdateValuesResponse/properties/totalUpdatedColumns/format str int32
schemas/BatchUpdateValuesResponse/properties/totalUpdatedColumns/type str integer
schemas/BatchUpdateValuesResponse/properties/totalUpdatedRows dict
schemas/BatchUpdateValuesResponse/properties/totalUpdatedRows/description str The total number of rows where at least one cell in the row was updated.
schemas/BatchUpdateValuesResponse/properties/totalUpdatedRows/format str int32
schemas/BatchUpdateValuesResponse/properties/totalUpdatedRows/type str integer
schemas/BatchUpdateValuesResponse/properties/totalUpdatedSheets dict
schemas/BatchUpdateValuesResponse/properties/totalUpdatedSheets/description str The total number of sheets where at least one cell in the sheet was
updated.
schemas/BatchUpdateValuesResponse/properties/totalUpdatedSheets/format str int32
schemas/BatchUpdateValuesResponse/properties/totalUpdatedSheets/type str integer
schemas/BatchUpdateValuesResponse/type str object
schemas/BooleanCondition dict
schemas/BooleanCondition/description str A condition that can evaluate to true or false.
BooleanConditions are used by conditional formatting,
data validation, and the criteria in filters.
schemas/BooleanCondition/id str BooleanCondition
schemas/BooleanCondition/properties dict
schemas/BooleanCondition/properties/type dict
schemas/BooleanCondition/properties/type/description str The type of condition.
schemas/BooleanCondition/properties/type/enum list
schemas/BooleanCondition/properties/type/enum/[] str CONDITION_TYPE_UNSPECIFIED
schemas/BooleanCondition/properties/type/enumDescriptions list
schemas/BooleanCondition/properties/type/enumDescriptions/[] str The default value, do not use.
schemas/BooleanCondition/properties/type/type str string
schemas/BooleanCondition/properties/values dict
schemas/BooleanCondition/properties/values/description str The values of the condition. The number of supported values depends
on the condition type.  Some support zero values,
others one or two values,
and ConditionType.ONE_OF_LIST supports an arbitrary number of values.
schemas/BooleanCondition/properties/values/items dict
schemas/BooleanCondition/properties/values/items/$ref str ConditionValue
schemas/BooleanCondition/properties/values/type str array
schemas/BooleanCondition/type str object
schemas/BooleanRule dict
schemas/BooleanRule/description str A rule that may or may not match, depending on the condition.
schemas/BooleanRule/id str BooleanRule
schemas/BooleanRule/properties dict
schemas/BooleanRule/properties/condition dict
schemas/BooleanRule/properties/condition/$ref str BooleanCondition
schemas/BooleanRule/properties/condition/description str The condition of the rule. If the condition evaluates to true,
the format is applied.
schemas/BooleanRule/properties/format dict
schemas/BooleanRule/properties/format/$ref str CellFormat
schemas/BooleanRule/properties/format/description str The format to apply.
Conditional formatting can only apply a subset of formatting:
bold, italic,
strikethrough,
foreground color &
background color.
schemas/BooleanRule/type str object
schemas/Border dict
schemas/Border/description str A border along a cell.
schemas/Border/id str Border
schemas/Border/properties dict
schemas/Border/properties/color dict
schemas/Border/properties/color/$ref str Color
schemas/Border/properties/color/description str The color of the border.
schemas/Border/properties/style dict
schemas/Border/properties/style/description str The style of the border.
schemas/Border/properties/style/enum list
schemas/Border/properties/style/enum/[] str STYLE_UNSPECIFIED
schemas/Border/properties/style/enumDescriptions list
schemas/Border/properties/style/enumDescriptions/[] str The style is not specified. Do not use this.
schemas/Border/properties/style/type str string
schemas/Border/properties/width dict
schemas/Border/properties/width/description str The width of the border, in pixels.
Deprecated; the width is determined by the "style" field.
schemas/Border/properties/width/format str int32
schemas/Border/properties/width/type str integer
schemas/Border/type str object
schemas/Borders dict
schemas/Borders/description str The borders of the cell.
schemas/Borders/id str Borders
schemas/Borders/properties dict
schemas/Borders/properties/bottom dict
schemas/Borders/properties/bottom/$ref str Border
schemas/Borders/properties/bottom/description str The bottom border of the cell.
schemas/Borders/properties/left dict
schemas/Borders/properties/left/$ref str Border
schemas/Borders/properties/left/description str The left border of the cell.
schemas/Borders/properties/right dict
schemas/Borders/properties/right/$ref str Border
schemas/Borders/properties/right/description str The right border of the cell.
schemas/Borders/properties/top dict
schemas/Borders/properties/top/$ref str Border
schemas/Borders/properties/top/description str The top border of the cell.
schemas/Borders/type str object
schemas/BubbleChartSpec dict
schemas/BubbleChartSpec/description str A <a href="/chart/interactive/docs/gallery/bubblechart">bubble chart</a>.
schemas/BubbleChartSpec/id str BubbleChartSpec
schemas/BubbleChartSpec/properties dict
schemas/BubbleChartSpec/properties/bubbleBorderColor dict
schemas/BubbleChartSpec/properties/bubbleBorderColor/$ref str Color
schemas/BubbleChartSpec/properties/bubbleBorderColor/description str The bubble border color.
schemas/BubbleChartSpec/properties/bubbleLabels dict
schemas/BubbleChartSpec/properties/bubbleLabels/$ref str ChartData
schemas/BubbleChartSpec/properties/bubbleLabels/description str The data containing the bubble labels.  These do not need to be unique.
schemas/BubbleChartSpec/properties/bubbleMaxRadiusSize dict
schemas/BubbleChartSpec/properties/bubbleMaxRadiusSize/description str The max radius size of the bubbles, in pixels.
If specified, the field must be a positive value.
schemas/BubbleChartSpec/properties/bubbleMaxRadiusSize/format str int32
schemas/BubbleChartSpec/properties/bubbleMaxRadiusSize/type str integer
schemas/BubbleChartSpec/properties/bubbleMinRadiusSize dict
schemas/BubbleChartSpec/properties/bubbleMinRadiusSize/description str The minimum radius size of the bubbles, in pixels.
If specific, the field must be a positive value.
schemas/BubbleChartSpec/properties/bubbleMinRadiusSize/format str int32
schemas/BubbleChartSpec/properties/bubbleMinRadiusSize/type str integer
schemas/BubbleChartSpec/properties/bubbleOpacity dict
schemas/BubbleChartSpec/properties/bubbleOpacity/description str The opacity of the bubbles between 0 and 1.0.
0 is fully transparent and 1 is fully opaque.
schemas/BubbleChartSpec/properties/bubbleOpacity/format str float
schemas/BubbleChartSpec/properties/bubbleOpacity/type str number
schemas/BubbleChartSpec/properties/bubbleSizes dict
schemas/BubbleChartSpec/properties/bubbleSizes/$ref str ChartData
schemas/BubbleChartSpec/properties/bubbleSizes/description str The data contianing the bubble sizes.  Bubble sizes are used to draw
the bubbles at different sizes relative to each other.
If specified, group_ids must also be specified.  This field is
optional.
schemas/BubbleChartSpec/properties/bubbleTextStyle dict
schemas/BubbleChartSpec/properties/bubbleTextStyle/$ref str TextFormat
schemas/BubbleChartSpec/properties/bubbleTextStyle/description str The format of the text inside the bubbles.
Underline and Strikethrough are not supported.
schemas/BubbleChartSpec/properties/domain dict
schemas/BubbleChartSpec/properties/domain/$ref str ChartData
schemas/BubbleChartSpec/properties/domain/description str The data containing the bubble x-values.  These values locate the bubbles
in the chart horizontally.
schemas/BubbleChartSpec/properties/groupIds dict
schemas/BubbleChartSpec/properties/groupIds/$ref str ChartData
schemas/BubbleChartSpec/properties/groupIds/description str The data containing the bubble group IDs. All bubbles with the same group
ID are drawn in the same color. If bubble_sizes is specified then
this field must also be specified but may contain blank values.
This field is optional.
schemas/BubbleChartSpec/properties/legendPosition dict
schemas/BubbleChartSpec/properties/legendPosition/description str Where the legend of the chart should be drawn.
schemas/BubbleChartSpec/properties/legendPosition/enum list
schemas/BubbleChartSpec/properties/legendPosition/enum/[] str BUBBLE_CHART_LEGEND_POSITION_UNSPECIFIED
schemas/BubbleChartSpec/properties/legendPosition/enumDescriptions list
schemas/BubbleChartSpec/properties/legendPosition/enumDescriptions/[] str Default value, do not use.
schemas/BubbleChartSpec/properties/legendPosition/type str string
schemas/BubbleChartSpec/properties/series dict
schemas/BubbleChartSpec/properties/series/$ref str ChartData
schemas/BubbleChartSpec/properties/series/description str The data contianing the bubble y-values.  These values locate the bubbles
in the chart vertically.
schemas/BubbleChartSpec/type str object
schemas/CandlestickChartSpec dict
schemas/CandlestickChartSpec/description str A <a href="/chart/interactive/docs/gallery/candlestickchart">candlestick chart</a>.
schemas/CandlestickChartSpec/id str CandlestickChartSpec
schemas/CandlestickChartSpec/properties dict
schemas/CandlestickChartSpec/properties/data dict
schemas/CandlestickChartSpec/properties/data/description str The Candlestick chart data.
Only one CandlestickData is supported.
schemas/CandlestickChartSpec/properties/data/items dict
schemas/CandlestickChartSpec/properties/data/items/$ref str CandlestickData
schemas/CandlestickChartSpec/properties/data/type str array
schemas/CandlestickChartSpec/properties/domain dict
schemas/CandlestickChartSpec/properties/domain/$ref str CandlestickDomain
schemas/CandlestickChartSpec/properties/domain/description str The domain data (horizontal axis) for the candlestick chart.  String data
will be treated as discrete labels, other data will be treated as
continuous values.
schemas/CandlestickChartSpec/type str object
schemas/CandlestickData dict
schemas/CandlestickData/description str The Candlestick chart data, each containing the low, open, close, and high
values for a series.
schemas/CandlestickData/id str CandlestickData
schemas/CandlestickData/properties dict
schemas/CandlestickData/properties/closeSeries dict
schemas/CandlestickData/properties/closeSeries/$ref str CandlestickSeries
schemas/CandlestickData/properties/closeSeries/description str The range data (vertical axis) for the close/final value for each candle.
This is the top of the candle body.  If greater than the open value the
candle will be filled.  Otherwise the candle will be hollow.
schemas/CandlestickData/properties/highSeries dict
schemas/CandlestickData/properties/highSeries/$ref str CandlestickSeries
schemas/CandlestickData/properties/highSeries/description str The range data (vertical axis) for the high/maximum value for each
candle. This is the top of the candle's center line.
schemas/CandlestickData/properties/lowSeries dict
schemas/CandlestickData/properties/lowSeries/$ref str CandlestickSeries
schemas/CandlestickData/properties/lowSeries/description str The range data (vertical axis) for the low/minimum value for each candle.
This is the bottom of the candle's center line.
schemas/CandlestickData/properties/openSeries dict
schemas/CandlestickData/properties/openSeries/$ref str CandlestickSeries
schemas/CandlestickData/properties/openSeries/description str The range data (vertical axis) for the open/initial value for each
candle. This is the bottom of the candle body.  If less than the close
value the candle will be filled.  Otherwise the candle will be hollow.
schemas/CandlestickData/type str object
schemas/CandlestickDomain dict
schemas/CandlestickDomain/description str The domain of a CandlestickChart.
schemas/CandlestickDomain/id str CandlestickDomain
schemas/CandlestickDomain/properties dict
schemas/CandlestickDomain/properties/data dict
schemas/CandlestickDomain/properties/data/$ref str ChartData
schemas/CandlestickDomain/properties/data/description str The data of the CandlestickDomain.
schemas/CandlestickDomain/properties/reversed dict
schemas/CandlestickDomain/properties/reversed/description str True to reverse the order of the domain values (horizontal axis).
schemas/CandlestickDomain/properties/reversed/type str boolean
schemas/CandlestickDomain/type str object
schemas/CandlestickSeries dict
schemas/CandlestickSeries/description str The series of a CandlestickData.
schemas/CandlestickSeries/id str CandlestickSeries
schemas/CandlestickSeries/properties dict
schemas/CandlestickSeries/properties/data dict
schemas/CandlestickSeries/properties/data/$ref str ChartData
schemas/CandlestickSeries/properties/data/description str The data of the CandlestickSeries.
schemas/CandlestickSeries/type str object
schemas/CellData dict
schemas/CellData/description str Data about a specific cell.
schemas/CellData/id str CellData
schemas/CellData/properties dict
schemas/CellData/properties/dataValidation dict
schemas/CellData/properties/dataValidation/$ref str DataValidationRule
schemas/CellData/properties/dataValidation/description str A data validation rule on the cell, if any.

When writing, the new data validation rule will overwrite any prior rule.
schemas/CellData/properties/effectiveFormat dict
schemas/CellData/properties/effectiveFormat/$ref str CellFormat
schemas/CellData/properties/effectiveFormat/description str The effective format being used by the cell.
This includes the results of applying any conditional formatting and,
if the cell contains a formula, the computed number format.
If the effective format is the default format, effective format will
not be written.
This field is read-only.
schemas/CellData/properties/effectiveValue dict
schemas/CellData/properties/effectiveValue/$ref str ExtendedValue
schemas/CellData/properties/effectiveValue/description str The effective value of the cell. For cells with formulas, this is
the calculated value.  For cells with literals, this is
the same as the user_entered_value.
This field is read-only.
schemas/CellData/properties/formattedValue dict
schemas/CellData/properties/formattedValue/description str The formatted value of the cell.
This is the value as it's shown to the user.
This field is read-only.
schemas/CellData/properties/formattedValue/type str string
schemas/CellData/properties/hyperlink dict
schemas/CellData/properties/hyperlink/description str A hyperlink this cell points to, if any.
This field is read-only.  (To set it, use a `=HYPERLINK` formula
in the userEnteredValue.formulaValue
field.)
schemas/CellData/properties/hyperlink/type str string
schemas/CellData/properties/note dict
schemas/CellData/properties/note/description str Any note on the cell.
schemas/CellData/properties/note/type str string
schemas/CellData/properties/pivotTable dict
schemas/CellData/properties/pivotTable/$ref str PivotTable
schemas/CellData/properties/pivotTable/description str A pivot table anchored at this cell. The size of pivot table itself
is computed dynamically based on its data, grouping, filters, values,
etc. Only the top-left cell of the pivot table contains the pivot table
definition. The other cells will contain the calculated values of the
results of the pivot in their effective_value fields.
schemas/CellData/properties/textFormatRuns dict
schemas/CellData/properties/textFormatRuns/description str Runs of rich text applied to subsections of the cell.  Runs are only valid
on user entered strings, not formulas, bools, or numbers.
Runs start at specific indexes in the text and continue until the next
run. Properties of a run will continue unless explicitly changed
in a subsequent run (and properties of the first run will continue
the properties of the cell unless explicitly changed).

When writing, the new runs will overwrite any prior runs.  When writing a
new user_entered_value, previous runs are erased.
schemas/CellData/properties/textFormatRuns/items dict
schemas/CellData/properties/textFormatRuns/items/$ref str TextFormatRun
schemas/CellData/properties/textFormatRuns/type str array
schemas/CellData/properties/userEnteredFormat dict
schemas/CellData/properties/userEnteredFormat/$ref str CellFormat
schemas/CellData/properties/userEnteredFormat/description str The format the user entered for the cell.

When writing, the new format will be merged with the existing format.
schemas/CellData/properties/userEnteredValue dict
schemas/CellData/properties/userEnteredValue/$ref str ExtendedValue
schemas/CellData/properties/userEnteredValue/description str The value the user entered in the cell. e.g, `1234`, `'Hello'`, or `=NOW()`
Note: Dates, Times and DateTimes are represented as doubles in
serial number format.
schemas/CellData/type str object
schemas/CellFormat dict
schemas/CellFormat/description str The format of a cell.
schemas/CellFormat/id str CellFormat
schemas/CellFormat/properties dict
schemas/CellFormat/properties/backgroundColor dict
schemas/CellFormat/properties/backgroundColor/$ref str Color
schemas/CellFormat/properties/backgroundColor/description str The background color of the cell.
schemas/CellFormat/properties/borders dict
schemas/CellFormat/properties/borders/$ref str Borders
schemas/CellFormat/properties/borders/description str The borders of the cell.
schemas/CellFormat/properties/horizontalAlignment dict
schemas/CellFormat/properties/horizontalAlignment/description str The horizontal alignment of the value in the cell.
schemas/CellFormat/properties/horizontalAlignment/enum list
schemas/CellFormat/properties/horizontalAlignment/enum/[] str HORIZONTAL_ALIGN_UNSPECIFIED
schemas/CellFormat/properties/horizontalAlignment/enumDescriptions list
schemas/CellFormat/properties/horizontalAlignment/enumDescriptions/[] str The horizontal alignment is not specified. Do not use this.
schemas/CellFormat/properties/horizontalAlignment/type str string
schemas/CellFormat/properties/hyperlinkDisplayType dict
schemas/CellFormat/properties/hyperlinkDisplayType/description str How a hyperlink, if it exists, should be displayed in the cell.
schemas/CellFormat/properties/hyperlinkDisplayType/enum list
schemas/CellFormat/properties/hyperlinkDisplayType/enum/[] str HYPERLINK_DISPLAY_TYPE_UNSPECIFIED
schemas/CellFormat/properties/hyperlinkDisplayType/enumDescriptions list
schemas/CellFormat/properties/hyperlinkDisplayType/enumDescriptions/[] str The default value: the hyperlink is rendered. Do not use this.
schemas/CellFormat/properties/hyperlinkDisplayType/type str string
schemas/CellFormat/properties/numberFormat dict
schemas/CellFormat/properties/numberFormat/$ref str NumberFormat
schemas/CellFormat/properties/numberFormat/description str A format describing how number values should be represented to the user.
schemas/CellFormat/properties/padding dict
schemas/CellFormat/properties/padding/$ref str Padding
schemas/CellFormat/properties/padding/description str The padding of the cell.
schemas/CellFormat/properties/textDirection dict
schemas/CellFormat/properties/textDirection/description str The direction of the text in the cell.
schemas/CellFormat/properties/textDirection/enum list
schemas/CellFormat/properties/textDirection/enum/[] str TEXT_DIRECTION_UNSPECIFIED
schemas/CellFormat/properties/textDirection/enumDescriptions list
schemas/CellFormat/properties/textDirection/enumDescriptions/[] str The text direction is not specified. Do not use this.
schemas/CellFormat/properties/textDirection/type str string
schemas/CellFormat/properties/textFormat dict
schemas/CellFormat/properties/textFormat/$ref str TextFormat
schemas/CellFormat/properties/textFormat/description str The format of the text in the cell (unless overridden by a format run).
schemas/CellFormat/properties/textRotation dict
schemas/CellFormat/properties/textRotation/$ref str TextRotation
schemas/CellFormat/properties/textRotation/description str The rotation applied to text in a cell
schemas/CellFormat/properties/verticalAlignment dict
schemas/CellFormat/properties/verticalAlignment/description str The vertical alignment of the value in the cell.
schemas/CellFormat/properties/verticalAlignment/enum list
schemas/CellFormat/properties/verticalAlignment/enum/[] str VERTICAL_ALIGN_UNSPECIFIED
schemas/CellFormat/properties/verticalAlignment/enumDescriptions list
schemas/CellFormat/properties/verticalAlignment/enumDescriptions/[] str The vertical alignment is not specified.  Do not use this.
schemas/CellFormat/properties/verticalAlignment/type str string
schemas/CellFormat/properties/wrapStrategy dict
schemas/CellFormat/properties/wrapStrategy/description str The wrap strategy for the value in the cell.
schemas/CellFormat/properties/wrapStrategy/enum list
schemas/CellFormat/properties/wrapStrategy/enum/[] str WRAP_STRATEGY_UNSPECIFIED
schemas/CellFormat/properties/wrapStrategy/enumDescriptions list
schemas/CellFormat/properties/wrapStrategy/enumDescriptions/[] str The default value, do not use.
schemas/CellFormat/properties/wrapStrategy/type str string
schemas/CellFormat/type str object
schemas/ChartData dict
schemas/ChartData/description str The data included in a domain or series.
schemas/ChartData/id str ChartData
schemas/ChartData/properties dict
schemas/ChartData/properties/sourceRange dict
schemas/ChartData/properties/sourceRange/$ref str ChartSourceRange
schemas/ChartData/properties/sourceRange/description str The source ranges of the data.
schemas/ChartData/type str object
schemas/ChartSourceRange dict
schemas/ChartSourceRange/description str Source ranges for a chart.
schemas/ChartSourceRange/id str ChartSourceRange
schemas/ChartSourceRange/properties dict
schemas/ChartSourceRange/properties/sources dict
schemas/ChartSourceRange/properties/sources/description str The ranges of data for a series or domain.
Exactly one dimension must have a length of 1,
and all sources in the list must have the same dimension
with length 1.
The domain (if it exists) & all series must have the same number
of source ranges. If using more than one source range, then the source
range at a given offset must be in order and contiguous across the domain
and series.

For example, these are valid configurations:

    domain sources: A1:A5
    series1 sources: B1:B5
    series2 sources: D6:D10

    domain sources: A1:A5, C10:C12
    series1 sources: B1:B5, D10:D12
    series2 sources: C1:C5, E10:E12
schemas/ChartSourceRange/properties/sources/items dict
schemas/ChartSourceRange/properties/sources/items/$ref str GridRange
schemas/ChartSourceRange/properties/sources/type str array
schemas/ChartSourceRange/type str object
schemas/ChartSpec dict
schemas/ChartSpec/description str The specifications of a chart.
schemas/ChartSpec/id str ChartSpec
schemas/ChartSpec/properties dict
schemas/ChartSpec/properties/altText dict
schemas/ChartSpec/properties/altText/description str The alternative text that describes the chart.  This is often used
for accessibility.
schemas/ChartSpec/properties/altText/type str string
schemas/ChartSpec/properties/backgroundColor dict
schemas/ChartSpec/properties/backgroundColor/$ref str Color
schemas/ChartSpec/properties/backgroundColor/description str The background color of the entire chart.
Not applicable to Org charts.
schemas/ChartSpec/properties/basicChart dict
schemas/ChartSpec/properties/basicChart/$ref str BasicChartSpec
schemas/ChartSpec/properties/basicChart/description str A basic chart specification, can be one of many kinds of charts.
See BasicChartType for the list of all
charts this supports.
schemas/ChartSpec/properties/bubbleChart dict
schemas/ChartSpec/properties/bubbleChart/$ref str BubbleChartSpec
schemas/ChartSpec/properties/bubbleChart/description str A bubble chart specification.
schemas/ChartSpec/properties/candlestickChart dict
schemas/ChartSpec/properties/candlestickChart/$ref str CandlestickChartSpec
schemas/ChartSpec/properties/candlestickChart/description str A candlestick chart specification.
schemas/ChartSpec/properties/fontName dict
schemas/ChartSpec/properties/fontName/description str The name of the font to use by default for all chart text (e.g. title,
axis labels, legend).  If a font is specified for a specific part of the
chart it will override this font name.
schemas/ChartSpec/properties/fontName/type str string
schemas/ChartSpec/properties/hiddenDimensionStrategy dict
schemas/ChartSpec/properties/hiddenDimensionStrategy/description str Determines how the charts will use hidden rows or columns.
schemas/ChartSpec/properties/hiddenDimensionStrategy/enum list
schemas/ChartSpec/properties/hiddenDimensionStrategy/enum/[] str CHART_HIDDEN_DIMENSION_STRATEGY_UNSPECIFIED
schemas/ChartSpec/properties/hiddenDimensionStrategy/enumDescriptions list
schemas/ChartSpec/properties/hiddenDimensionStrategy/enumDescriptions/[] str Default value, do not use.
schemas/ChartSpec/properties/hiddenDimensionStrategy/type str string
schemas/ChartSpec/properties/histogramChart dict
schemas/ChartSpec/properties/histogramChart/$ref str HistogramChartSpec
schemas/ChartSpec/properties/histogramChart/description str A histogram chart specification.
schemas/ChartSpec/properties/maximized dict
schemas/ChartSpec/properties/maximized/description str True to make a chart fill the entire space in which it's rendered with
minimum padding.  False to use the default padding.
(Not applicable to Geo and Org charts.)
schemas/ChartSpec/properties/maximized/type str boolean
schemas/ChartSpec/properties/orgChart dict
schemas/ChartSpec/properties/orgChart/$ref str OrgChartSpec
schemas/ChartSpec/properties/orgChart/description str An org chart specification.
schemas/ChartSpec/properties/pieChart dict
schemas/ChartSpec/properties/pieChart/$ref str PieChartSpec
schemas/ChartSpec/properties/pieChart/description str A pie chart specification.
schemas/ChartSpec/properties/subtitle dict
schemas/ChartSpec/properties/subtitle/description str The subtitle of the chart.
schemas/ChartSpec/properties/subtitle/type str string
schemas/ChartSpec/properties/subtitleTextFormat dict
schemas/ChartSpec/properties/subtitleTextFormat/$ref str TextFormat
schemas/ChartSpec/properties/subtitleTextFormat/description str The subtitle text format.
Strikethrough and underline are not supported.
schemas/ChartSpec/properties/subtitleTextPosition dict
schemas/ChartSpec/properties/subtitleTextPosition/$ref str TextPosition
schemas/ChartSpec/properties/subtitleTextPosition/description str The subtitle text position.
This field is optional.
schemas/ChartSpec/properties/title dict
schemas/ChartSpec/properties/title/description str The title of the chart.
schemas/ChartSpec/properties/title/type str string
schemas/ChartSpec/properties/titleTextFormat dict
schemas/ChartSpec/properties/titleTextFormat/$ref str TextFormat
schemas/ChartSpec/properties/titleTextFormat/description str The title text format.
Strikethrough and underline are not supported.
schemas/ChartSpec/properties/titleTextPosition dict
schemas/ChartSpec/properties/titleTextPosition/$ref str TextPosition
schemas/ChartSpec/properties/titleTextPosition/description str The title text position.
This field is optional.
schemas/ChartSpec/properties/treemapChart dict
schemas/ChartSpec/properties/treemapChart/$ref str TreemapChartSpec
schemas/ChartSpec/properties/treemapChart/description str A treemap chart specification.
schemas/ChartSpec/properties/waterfallChart dict
schemas/ChartSpec/properties/waterfallChart/$ref str WaterfallChartSpec
schemas/ChartSpec/properties/waterfallChart/description str A waterfall chart specification.
schemas/ChartSpec/type str object
schemas/ClearBasicFilterRequest dict
schemas/ClearBasicFilterRequest/description str Clears the basic filter, if any exists on the sheet.
schemas/ClearBasicFilterRequest/id str ClearBasicFilterRequest
schemas/ClearBasicFilterRequest/properties dict
schemas/ClearBasicFilterRequest/properties/sheetId dict
schemas/ClearBasicFilterRequest/properties/sheetId/description str The sheet ID on which the basic filter should be cleared.
schemas/ClearBasicFilterRequest/properties/sheetId/format str int32
schemas/ClearBasicFilterRequest/properties/sheetId/type str integer
schemas/ClearBasicFilterRequest/type str object
schemas/ClearValuesRequest dict
schemas/ClearValuesRequest/description str The request for clearing a range of values in a spreadsheet.
schemas/ClearValuesRequest/id str ClearValuesRequest
schemas/ClearValuesRequest/properties dict
schemas/ClearValuesRequest/type str object
schemas/ClearValuesResponse dict
schemas/ClearValuesResponse/description str The response when clearing a range of values in a spreadsheet.
schemas/ClearValuesResponse/id str ClearValuesResponse
schemas/ClearValuesResponse/properties dict
schemas/ClearValuesResponse/properties/clearedRange dict
schemas/ClearValuesResponse/properties/clearedRange/description str The range (in A1 notation) that was cleared.
(If the request was for an unbounded range or a ranger larger
 than the bounds of the sheet, this will be the actual range
 that was cleared, bounded to the sheet's limits.)
schemas/ClearValuesResponse/properties/clearedRange/type str string
schemas/ClearValuesResponse/properties/spreadsheetId dict
schemas/ClearValuesResponse/properties/spreadsheetId/description str The spreadsheet the updates were applied to.
schemas/ClearValuesResponse/properties/spreadsheetId/type str string
schemas/ClearValuesResponse/type str object
schemas/Color dict
schemas/Color/description str Represents a color in the RGBA color space. This representation is designed
for simplicity of conversion to/from color representations in various
languages over compactness; for example, the fields of this representation
can be trivially provided to the constructor of "java.awt.Color" in Java; it
can also be trivially provided to UIColor's "+colorWithRed:green:blue:alpha"
method in iOS; and, with just a little work, it can be easily formatted into
a CSS "rgba()" string in JavaScript, as well. Here are some examples:

Example (Java):

     import com.google.type.Color;

     // ...
     public static java.awt.Color fromProto(Color protocolor) {
       float alpha = protocolor.hasAlpha()
           ? protocolor.getAlpha().getValue()
           : 1.0;

       return new java.awt.Color(
           protocolor.getRed(),
           protocolor.getGreen(),
           protocolor.getBlue(),
           alpha);
     }

     public static Color toProto(java.awt.Color color) {
       float red = (float) color.getRed();
       float green = (float) color.getGreen();
       float blue = (float) color.getBlue();
       float denominator = 255.0;
       Color.Builder resultBuilder =
           Color
               .newBuilder()
               .setRed(red / denominator)
               .setGreen(green / denominator)
               .setBlue(blue / denominator);
       int alpha = color.getAlpha();
       if (alpha != 255) {
         result.setAlpha(
             FloatValue
                 .newBuilder()
                 .setValue(((float) alpha) / denominator)
                 .build());
       }
       return resultBuilder.build();
     }
     // ...

Example (iOS / Obj-C):

     // ...
     static UIColor* fromProto(Color* protocolor) {
        float red = [protocolor red];
        float green = [protocolor green];
        float blue = [protocolor blue];
        FloatValue* alpha_wrapper = [protocolor alpha];
        float alpha = 1.0;
        if (alpha_wrapper != nil) {
          alpha = [alpha_wrapper value];
        }
        return [UIColor colorWithRed:red green:green blue:blue alpha:alpha];
     }

     static Color* toProto(UIColor* color) {
         CGFloat red, green, blue, alpha;
         if (![color getRed:&red green:&green blue:&blue alpha:&alpha]) {
           return nil;
         }
         Color* result = [[Color alloc] init];
         [result setRed:red];
         [result setGreen:green];
         [result setBlue:blue];
         if (alpha <= 0.9999) {
           [result setAlpha:floatWrapperWithValue(alpha)];
         }
         [result autorelease];
         return result;
    }
    // ...

 Example (JavaScript):

    // ...

    var protoToCssColor = function(rgb_color) {
       var redFrac = rgb_color.red || 0.0;
       var greenFrac = rgb_color.green || 0.0;
       var blueFrac = rgb_color.blue || 0.0;
       var red = Math.floor(redFrac * 255);
       var green = Math.floor(greenFrac * 255);
       var blue = Math.floor(blueFrac * 255);

       if (!('alpha' in rgb_color)) {
          return rgbToCssColor_(red, green, blue);
       }

       var alphaFrac = rgb_color.alpha.value || 0.0;
       var rgbParams = [red, green, blue].join(',');
       return ['rgba(', rgbParams, ',', alphaFrac, ')'].join('');
    };

    var rgbToCssColor_ = function(red, green, blue) {
      var rgbNumber = new Number((red << 16) | (green << 8) | blue);
      var hexString = rgbNumber.toString(16);
      var missingZeros = 6 - hexString.length;
      var resultBuilder = ['#'];
      for (var i = 0; i < missingZeros; i++) {
         resultBuilder.push('0');
      }
      resultBuilder.push(hexString);
      return resultBuilder.join('');
    };

    // ...
schemas/Color/id str Color
schemas/Color/properties dict
schemas/Color/properties/alpha dict
schemas/Color/properties/alpha/description str The fraction of this color that should be applied to the pixel. That is,
the final pixel color is defined by the equation:

  pixel color = alpha * (this color) + (1.0 - alpha) * (background color)

This means that a value of 1.0 corresponds to a solid color, whereas
a value of 0.0 corresponds to a completely transparent color. This
uses a wrapper message rather than a simple float scalar so that it is
possible to distinguish between a default value and the value being unset.
If omitted, this color object is to be rendered as a solid color
(as if the alpha value had been explicitly given with a value of 1.0).
schemas/Color/properties/alpha/format str float
schemas/Color/properties/alpha/type str number
schemas/Color/properties/blue dict
schemas/Color/properties/blue/description str The amount of blue in the color as a value in the interval [0, 1].
schemas/Color/properties/blue/format str float
schemas/Color/properties/blue/type str number
schemas/Color/properties/green dict
schemas/Color/properties/green/description str The amount of green in the color as a value in the interval [0, 1].
schemas/Color/properties/green/format str float
schemas/Color/properties/green/type str number
schemas/Color/properties/red dict
schemas/Color/properties/red/description str The amount of red in the color as a value in the interval [0, 1].
schemas/Color/properties/red/format str float
schemas/Color/properties/red/type str number
schemas/Color/type str object
schemas/ConditionValue dict
schemas/ConditionValue/description str The value of the condition.
schemas/ConditionValue/id str ConditionValue
schemas/ConditionValue/properties dict
schemas/ConditionValue/properties/relativeDate dict
schemas/ConditionValue/properties/relativeDate/description str A relative date (based on the current date).
Valid only if the type is
DATE_BEFORE,
DATE_AFTER,
DATE_ON_OR_BEFORE or
DATE_ON_OR_AFTER.

Relative dates are not supported in data validation.
They are supported only in conditional formatting and
conditional filters.
schemas/ConditionValue/properties/relativeDate/enum list
schemas/ConditionValue/properties/relativeDate/enum/[] str RELATIVE_DATE_UNSPECIFIED
schemas/ConditionValue/properties/relativeDate/enumDescriptions list
schemas/ConditionValue/properties/relativeDate/enumDescriptions/[] str Default value, do not use.
schemas/ConditionValue/properties/relativeDate/type str string
schemas/ConditionValue/properties/userEnteredValue dict
schemas/ConditionValue/properties/userEnteredValue/description str A value the condition is based on.
The value is parsed as if the user typed into a cell.
Formulas are supported (and must begin with an `=` or a '+').
schemas/ConditionValue/properties/userEnteredValue/type str string
schemas/ConditionValue/type str object
schemas/ConditionalFormatRule dict
schemas/ConditionalFormatRule/description str A rule describing a conditional format.
schemas/ConditionalFormatRule/id str ConditionalFormatRule
schemas/ConditionalFormatRule/properties dict
schemas/ConditionalFormatRule/properties/booleanRule dict
schemas/ConditionalFormatRule/properties/booleanRule/$ref str BooleanRule
schemas/ConditionalFormatRule/properties/booleanRule/description str The formatting is either "on" or "off" according to the rule.
schemas/ConditionalFormatRule/properties/gradientRule dict
schemas/ConditionalFormatRule/properties/gradientRule/$ref str GradientRule
schemas/ConditionalFormatRule/properties/gradientRule/description str The formatting will vary based on the gradients in the rule.
schemas/ConditionalFormatRule/properties/ranges dict
schemas/ConditionalFormatRule/properties/ranges/description str The ranges that are formatted if the condition is true.
All the ranges must be on the same grid.
schemas/ConditionalFormatRule/properties/ranges/items dict
schemas/ConditionalFormatRule/properties/ranges/items/$ref str GridRange
schemas/ConditionalFormatRule/properties/ranges/type str array
schemas/ConditionalFormatRule/type str object
schemas/CopyPasteRequest dict
schemas/CopyPasteRequest/description str Copies data from the source to the destination.
schemas/CopyPasteRequest/id str CopyPasteRequest
schemas/CopyPasteRequest/properties dict
schemas/CopyPasteRequest/properties/destination dict
schemas/CopyPasteRequest/properties/destination/$ref str GridRange
schemas/CopyPasteRequest/properties/destination/description str The location to paste to. If the range covers a span that's
a multiple of the source's height or width, then the
data will be repeated to fill in the destination range.
If the range is smaller than the source range, the entire
source data will still be copied (beyond the end of the destination range).
schemas/CopyPasteRequest/properties/pasteOrientation dict
schemas/CopyPasteRequest/properties/pasteOrientation/description str How that data should be oriented when pasting.
schemas/CopyPasteRequest/properties/pasteOrientation/enum list
schemas/CopyPasteRequest/properties/pasteOrientation/enum/[] str NORMAL
schemas/CopyPasteRequest/properties/pasteOrientation/enumDescriptions list
schemas/CopyPasteRequest/properties/pasteOrientation/enumDescriptions/[] str Paste normally.
schemas/CopyPasteRequest/properties/pasteOrientation/type str string
schemas/CopyPasteRequest/properties/pasteType dict
schemas/CopyPasteRequest/properties/pasteType/description str What kind of data to paste.
schemas/CopyPasteRequest/properties/pasteType/enum list
schemas/CopyPasteRequest/properties/pasteType/enum/[] str PASTE_NORMAL
schemas/CopyPasteRequest/properties/pasteType/enumDescriptions list
schemas/CopyPasteRequest/properties/pasteType/enumDescriptions/[] str Paste values, formulas, formats, and merges.
schemas/CopyPasteRequest/properties/pasteType/type str string
schemas/CopyPasteRequest/properties/source dict
schemas/CopyPasteRequest/properties/source/$ref str GridRange
schemas/CopyPasteRequest/properties/source/description str The source range to copy.
schemas/CopyPasteRequest/type str object
schemas/CopySheetToAnotherSpreadsheetRequest dict
schemas/CopySheetToAnotherSpreadsheetRequest/description str The request to copy a sheet across spreadsheets.
schemas/CopySheetToAnotherSpreadsheetRequest/id str CopySheetToAnotherSpreadsheetRequest
schemas/CopySheetToAnotherSpreadsheetRequest/properties dict
schemas/CopySheetToAnotherSpreadsheetRequest/properties/destinationSpreadsheetId dict
schemas/CopySheetToAnotherSpreadsheetRequest/properties/destinationSpreadsheetId/description str The ID of the spreadsheet to copy the sheet to.
schemas/CopySheetToAnotherSpreadsheetRequest/properties/destinationSpreadsheetId/type str string
schemas/CopySheetToAnotherSpreadsheetRequest/type str object
schemas/CreateDeveloperMetadataRequest dict
schemas/CreateDeveloperMetadataRequest/description str A request to create developer metadata.
schemas/CreateDeveloperMetadataRequest/id str CreateDeveloperMetadataRequest
schemas/CreateDeveloperMetadataRequest/properties dict
schemas/CreateDeveloperMetadataRequest/properties/developerMetadata dict
schemas/CreateDeveloperMetadataRequest/properties/developerMetadata/$ref str DeveloperMetadata
schemas/CreateDeveloperMetadataRequest/properties/developerMetadata/description str The developer metadata to create.
schemas/CreateDeveloperMetadataRequest/type str object
schemas/CreateDeveloperMetadataResponse dict
schemas/CreateDeveloperMetadataResponse/description str The response from creating developer metadata.
schemas/CreateDeveloperMetadataResponse/id str CreateDeveloperMetadataResponse
schemas/CreateDeveloperMetadataResponse/properties dict
schemas/CreateDeveloperMetadataResponse/properties/developerMetadata dict
schemas/CreateDeveloperMetadataResponse/properties/developerMetadata/$ref str DeveloperMetadata
schemas/CreateDeveloperMetadataResponse/properties/developerMetadata/description str The developer metadata that was created.
schemas/CreateDeveloperMetadataResponse/type str object
schemas/CutPasteRequest dict
schemas/CutPasteRequest/description str Moves data from the source to the destination.
schemas/CutPasteRequest/id str CutPasteRequest
schemas/CutPasteRequest/properties dict
schemas/CutPasteRequest/properties/destination dict
schemas/CutPasteRequest/properties/destination/$ref str GridCoordinate
schemas/CutPasteRequest/properties/destination/description str The top-left coordinate where the data should be pasted.
schemas/CutPasteRequest/properties/pasteType dict
schemas/CutPasteRequest/properties/pasteType/description str What kind of data to paste.  All the source data will be cut, regardless
of what is pasted.
schemas/CutPasteRequest/properties/pasteType/enum list
schemas/CutPasteRequest/properties/pasteType/enum/[] str PASTE_NORMAL
schemas/CutPasteRequest/properties/pasteType/enumDescriptions list
schemas/CutPasteRequest/properties/pasteType/enumDescriptions/[] str Paste values, formulas, formats, and merges.
schemas/CutPasteRequest/properties/pasteType/type str string
schemas/CutPasteRequest/properties/source dict
schemas/CutPasteRequest/properties/source/$ref str GridRange
schemas/CutPasteRequest/properties/source/description str The source data to cut.
schemas/CutPasteRequest/type str object
schemas/DataFilter dict
schemas/DataFilter/description str Filter that describes what data should be selected or returned from a
request.
schemas/DataFilter/id str DataFilter
schemas/DataFilter/properties dict
schemas/DataFilter/properties/a1Range dict
schemas/DataFilter/properties/a1Range/description str Selects data that matches the specified A1 range.
schemas/DataFilter/properties/a1Range/type str string
schemas/DataFilter/properties/developerMetadataLookup dict
schemas/DataFilter/properties/developerMetadataLookup/$ref str DeveloperMetadataLookup
schemas/DataFilter/properties/developerMetadataLookup/description str Selects data associated with the developer metadata matching the criteria
described by this DeveloperMetadataLookup.
schemas/DataFilter/properties/gridRange dict
schemas/DataFilter/properties/gridRange/$ref str GridRange
schemas/DataFilter/properties/gridRange/description str Selects data that matches the range described by the GridRange.
schemas/DataFilter/type str object
schemas/DataFilterValueRange dict
schemas/DataFilterValueRange/description str A range of values whose location is specified by a DataFilter.
schemas/DataFilterValueRange/id str DataFilterValueRange
schemas/DataFilterValueRange/properties dict
schemas/DataFilterValueRange/properties/dataFilter dict
schemas/DataFilterValueRange/properties/dataFilter/$ref str DataFilter
schemas/DataFilterValueRange/properties/dataFilter/description str The data filter describing the location of the values in the spreadsheet.
schemas/DataFilterValueRange/properties/majorDimension dict
schemas/DataFilterValueRange/properties/majorDimension/description str The major dimension of the values.
schemas/DataFilterValueRange/properties/majorDimension/enum list
schemas/DataFilterValueRange/properties/majorDimension/enum/[] str DIMENSION_UNSPECIFIED
schemas/DataFilterValueRange/properties/majorDimension/enumDescriptions list
schemas/DataFilterValueRange/properties/majorDimension/enumDescriptions/[] str The default value, do not use.
schemas/DataFilterValueRange/properties/majorDimension/type str string
schemas/DataFilterValueRange/properties/values dict
schemas/DataFilterValueRange/properties/values/description str The data to be written.  If the provided values exceed any of the ranges
matched by the data filter then the request will fail.  If the provided
values are less than the matched ranges only the specified values will be
written, existing values in the matched ranges will remain unaffected.
schemas/DataFilterValueRange/properties/values/items dict
schemas/DataFilterValueRange/properties/values/items/items dict
schemas/DataFilterValueRange/properties/values/items/items/type str any
schemas/DataFilterValueRange/properties/values/items/type str array
schemas/DataFilterValueRange/properties/values/type str array
schemas/DataFilterValueRange/type str object
schemas/DataValidationRule dict
schemas/DataValidationRule/description str A data validation rule.
schemas/DataValidationRule/id str DataValidationRule
schemas/DataValidationRule/properties dict
schemas/DataValidationRule/properties/condition dict
schemas/DataValidationRule/properties/condition/$ref str BooleanCondition
schemas/DataValidationRule/properties/condition/description str The condition that data in the cell must match.
schemas/DataValidationRule/properties/inputMessage dict
schemas/DataValidationRule/properties/inputMessage/description str A message to show the user when adding data to the cell.
schemas/DataValidationRule/properties/inputMessage/type str string
schemas/DataValidationRule/properties/showCustomUi dict
schemas/DataValidationRule/properties/showCustomUi/description str True if the UI should be customized based on the kind of condition.
If true, "List" conditions will show a dropdown.
schemas/DataValidationRule/properties/showCustomUi/type str boolean
schemas/DataValidationRule/properties/strict dict
schemas/DataValidationRule/properties/strict/description str True if invalid data should be rejected.
schemas/DataValidationRule/properties/strict/type str boolean
schemas/DataValidationRule/type str object
schemas/DateTimeRule dict
schemas/DateTimeRule/description str Allows you to organize the date-time values in a source data column into
buckets based on selected parts of their date or time values. For example,
consider a pivot table showing sales transactions by date:

    +----------+--------------+
    | Date     | SUM of Sales |
    +----------+--------------+
    | 1/1/2017 |      $621.14 |
    | 2/3/2017 |      $708.84 |
    | 5/8/2017 |      $326.84 |
    ...
    +----------+--------------+
Applying a date-time group rule with a DateTimeRuleType of YEAR_MONTH
results in the following pivot table.

    +--------------+--------------+
    | Grouped Date | SUM of Sales |
    +--------------+--------------+
    | 2017-Jan     |   $53,731.78 |
    | 2017-Feb     |   $83,475.32 |
    | 2017-Mar     |   $94,385.05 |
    ...
    +--------------+--------------+
schemas/DateTimeRule/id str DateTimeRule
schemas/DateTimeRule/properties dict
schemas/DateTimeRule/properties/type dict
schemas/DateTimeRule/properties/type/description str The type of date-time grouping to apply.
schemas/DateTimeRule/properties/type/enum list
schemas/DateTimeRule/properties/type/enum/[] str DATE_TIME_RULE_TYPE_UNSPECIFIED
schemas/DateTimeRule/properties/type/enumDescriptions list
schemas/DateTimeRule/properties/type/enumDescriptions/[] str The default type, do not use.
schemas/DateTimeRule/properties/type/type str string
schemas/DateTimeRule/type str object
schemas/DeleteBandingRequest dict
schemas/DeleteBandingRequest/description str Removes the banded range with the given ID from the spreadsheet.
schemas/DeleteBandingRequest/id str DeleteBandingRequest
schemas/DeleteBandingRequest/properties dict
schemas/DeleteBandingRequest/properties/bandedRangeId dict
schemas/DeleteBandingRequest/properties/bandedRangeId/description str The ID of the banded range to delete.
schemas/DeleteBandingRequest/properties/bandedRangeId/format str int32
schemas/DeleteBandingRequest/properties/bandedRangeId/type str integer
schemas/DeleteBandingRequest/type str object
schemas/DeleteConditionalFormatRuleRequest dict
schemas/DeleteConditionalFormatRuleRequest/description str Deletes a conditional format rule at the given index.
All subsequent rules' indexes are decremented.
schemas/DeleteConditionalFormatRuleRequest/id str DeleteConditionalFormatRuleRequest
schemas/DeleteConditionalFormatRuleRequest/properties dict
schemas/DeleteConditionalFormatRuleRequest/properties/index dict
schemas/DeleteConditionalFormatRuleRequest/properties/index/description str The zero-based index of the rule to be deleted.
schemas/DeleteConditionalFormatRuleRequest/properties/index/format str int32
schemas/DeleteConditionalFormatRuleRequest/properties/index/type str integer
schemas/DeleteConditionalFormatRuleRequest/properties/sheetId dict
schemas/DeleteConditionalFormatRuleRequest/properties/sheetId/description str The sheet the rule is being deleted from.
schemas/DeleteConditionalFormatRuleRequest/properties/sheetId/format str int32
schemas/DeleteConditionalFormatRuleRequest/properties/sheetId/type str integer
schemas/DeleteConditionalFormatRuleRequest/type str object
schemas/DeleteConditionalFormatRuleResponse dict
schemas/DeleteConditionalFormatRuleResponse/description str The result of deleting a conditional format rule.
schemas/DeleteConditionalFormatRuleResponse/id str DeleteConditionalFormatRuleResponse
schemas/DeleteConditionalFormatRuleResponse/properties dict
schemas/DeleteConditionalFormatRuleResponse/properties/rule dict
schemas/DeleteConditionalFormatRuleResponse/properties/rule/$ref str ConditionalFormatRule
schemas/DeleteConditionalFormatRuleResponse/properties/rule/description str The rule that was deleted.
schemas/DeleteConditionalFormatRuleResponse/type str object
schemas/DeleteDeveloperMetadataRequest dict
schemas/DeleteDeveloperMetadataRequest/description str A request to delete developer metadata.
schemas/DeleteDeveloperMetadataRequest/id str DeleteDeveloperMetadataRequest
schemas/DeleteDeveloperMetadataRequest/properties dict
schemas/DeleteDeveloperMetadataRequest/properties/dataFilter dict
schemas/DeleteDeveloperMetadataRequest/properties/dataFilter/$ref str DataFilter
schemas/DeleteDeveloperMetadataRequest/properties/dataFilter/description str The data filter describing the criteria used to select which developer
metadata entry to delete.
schemas/DeleteDeveloperMetadataRequest/type str object
schemas/DeleteDeveloperMetadataResponse dict
schemas/DeleteDeveloperMetadataResponse/description str The response from deleting developer metadata.
schemas/DeleteDeveloperMetadataResponse/id str DeleteDeveloperMetadataResponse
schemas/DeleteDeveloperMetadataResponse/properties dict
schemas/DeleteDeveloperMetadataResponse/properties/deletedDeveloperMetadata dict
schemas/DeleteDeveloperMetadataResponse/properties/deletedDeveloperMetadata/description str The metadata that was deleted.
schemas/DeleteDeveloperMetadataResponse/properties/deletedDeveloperMetadata/items dict
schemas/DeleteDeveloperMetadataResponse/properties/deletedDeveloperMetadata/items/$ref str DeveloperMetadata
schemas/DeleteDeveloperMetadataResponse/properties/deletedDeveloperMetadata/type str array
schemas/DeleteDeveloperMetadataResponse/type str object
schemas/DeleteDimensionGroupRequest dict
schemas/DeleteDimensionGroupRequest/description str Deletes a group over the specified range by decrementing the depth of the
dimensions in the range.

For example, assume the sheet has a depth-1 group over B:E and a depth-2
group over C:D. Deleting a group over D:E leaves the sheet with a
depth-1 group over B:D and a depth-2 group over C:C.
schemas/DeleteDimensionGroupRequest/id str DeleteDimensionGroupRequest
schemas/DeleteDimensionGroupRequest/properties dict
schemas/DeleteDimensionGroupRequest/properties/range dict
schemas/DeleteDimensionGroupRequest/properties/range/$ref str DimensionRange
schemas/DeleteDimensionGroupRequest/properties/range/description str The range of the group to be deleted.
schemas/DeleteDimensionGroupRequest/type str object
schemas/DeleteDimensionGroupResponse dict
schemas/DeleteDimensionGroupResponse/description str The result of deleting a group.
schemas/DeleteDimensionGroupResponse/id str DeleteDimensionGroupResponse
schemas/DeleteDimensionGroupResponse/properties dict
schemas/DeleteDimensionGroupResponse/properties/dimensionGroups dict
schemas/DeleteDimensionGroupResponse/properties/dimensionGroups/description str All groups of a dimension after deleting a group from that dimension.
schemas/DeleteDimensionGroupResponse/properties/dimensionGroups/items dict
schemas/DeleteDimensionGroupResponse/properties/dimensionGroups/items/$ref str DimensionGroup
schemas/DeleteDimensionGroupResponse/properties/dimensionGroups/type str array
schemas/DeleteDimensionGroupResponse/type str object
schemas/DeleteDimensionRequest dict
schemas/DeleteDimensionRequest/description str Deletes the dimensions from the sheet.
schemas/DeleteDimensionRequest/id str DeleteDimensionRequest
schemas/DeleteDimensionRequest/properties dict
schemas/DeleteDimensionRequest/properties/range dict
schemas/DeleteDimensionRequest/properties/range/$ref str DimensionRange
schemas/DeleteDimensionRequest/properties/range/description str The dimensions to delete from the sheet.
schemas/DeleteDimensionRequest/type str object
schemas/DeleteEmbeddedObjectRequest dict
schemas/DeleteEmbeddedObjectRequest/description str Deletes the embedded object with the given ID.
schemas/DeleteEmbeddedObjectRequest/id str DeleteEmbeddedObjectRequest
schemas/DeleteEmbeddedObjectRequest/properties dict
schemas/DeleteEmbeddedObjectRequest/properties/objectId dict
schemas/DeleteEmbeddedObjectRequest/properties/objectId/description str The ID of the embedded object to delete.
schemas/DeleteEmbeddedObjectRequest/properties/objectId/format str int32
schemas/DeleteEmbeddedObjectRequest/properties/objectId/type str integer
schemas/DeleteEmbeddedObjectRequest/type str object
schemas/DeleteFilterViewRequest dict
schemas/DeleteFilterViewRequest/description str Deletes a particular filter view.
schemas/DeleteFilterViewRequest/id str DeleteFilterViewRequest
schemas/DeleteFilterViewRequest/properties dict
schemas/DeleteFilterViewRequest/properties/filterId dict
schemas/DeleteFilterViewRequest/properties/filterId/description str The ID of the filter to delete.
schemas/DeleteFilterViewRequest/properties/filterId/format str int32
schemas/DeleteFilterViewRequest/properties/filterId/type str integer
schemas/DeleteFilterViewRequest/type str object
schemas/DeleteNamedRangeRequest dict
schemas/DeleteNamedRangeRequest/description str Removes the named range with the given ID from the spreadsheet.
schemas/DeleteNamedRangeRequest/id str DeleteNamedRangeRequest
schemas/DeleteNamedRangeRequest/properties dict
schemas/DeleteNamedRangeRequest/properties/namedRangeId dict
schemas/DeleteNamedRangeRequest/properties/namedRangeId/description str The ID of the named range to delete.
schemas/DeleteNamedRangeRequest/properties/namedRangeId/type str string
schemas/DeleteNamedRangeRequest/type str object
schemas/DeleteProtectedRangeRequest dict
schemas/DeleteProtectedRangeRequest/description str Deletes the protected range with the given ID.
schemas/DeleteProtectedRangeRequest/id str DeleteProtectedRangeRequest
schemas/DeleteProtectedRangeRequest/properties dict
schemas/DeleteProtectedRangeRequest/properties/protectedRangeId dict
schemas/DeleteProtectedRangeRequest/properties/protectedRangeId/description str The ID of the protected range to delete.
schemas/DeleteProtectedRangeRequest/properties/protectedRangeId/format str int32
schemas/DeleteProtectedRangeRequest/properties/protectedRangeId/type str integer
schemas/DeleteProtectedRangeRequest/type str object
schemas/DeleteRangeRequest dict
schemas/DeleteRangeRequest/description str Deletes a range of cells, shifting other cells into the deleted area.
schemas/DeleteRangeRequest/id str DeleteRangeRequest
schemas/DeleteRangeRequest/properties dict
schemas/DeleteRangeRequest/properties/range dict
schemas/DeleteRangeRequest/properties/range/$ref str GridRange
schemas/DeleteRangeRequest/properties/range/description str The range of cells to delete.
schemas/DeleteRangeRequest/properties/shiftDimension dict
schemas/DeleteRangeRequest/properties/shiftDimension/description str The dimension from which deleted cells will be replaced with.
If ROWS, existing cells will be shifted upward to
replace the deleted cells. If COLUMNS, existing cells
will be shifted left to replace the deleted cells.
schemas/DeleteRangeRequest/properties/shiftDimension/enum list
schemas/DeleteRangeRequest/properties/shiftDimension/enum/[] str DIMENSION_UNSPECIFIED
schemas/DeleteRangeRequest/properties/shiftDimension/enumDescriptions list
schemas/DeleteRangeRequest/properties/shiftDimension/enumDescriptions/[] str The default value, do not use.
schemas/DeleteRangeRequest/properties/shiftDimension/type str string
schemas/DeleteRangeRequest/type str object
schemas/DeleteSheetRequest dict
schemas/DeleteSheetRequest/description str Deletes the requested sheet.
schemas/DeleteSheetRequest/id str DeleteSheetRequest
schemas/DeleteSheetRequest/properties dict
schemas/DeleteSheetRequest/properties/sheetId dict
schemas/DeleteSheetRequest/properties/sheetId/description str The ID of the sheet to delete.
schemas/DeleteSheetRequest/properties/sheetId/format str int32
schemas/DeleteSheetRequest/properties/sheetId/type str integer
schemas/DeleteSheetRequest/type str object
schemas/DeveloperMetadata dict
schemas/DeveloperMetadata/description str Developer metadata associated with a location or object in a spreadsheet.
Developer metadata may be used to associate arbitrary data with various
parts of a spreadsheet and will remain associated at those locations as they
move around and the spreadsheet is edited.  For example, if developer
metadata is associated with row 5 and another row is then subsequently
inserted above row 5, that original metadata will still be associated with
the row it was first associated with (what is now row 6). If the associated
object is deleted its metadata is deleted too.
schemas/DeveloperMetadata/id str DeveloperMetadata
schemas/DeveloperMetadata/properties dict
schemas/DeveloperMetadata/properties/location dict
schemas/DeveloperMetadata/properties/location/$ref str DeveloperMetadataLocation
schemas/DeveloperMetadata/properties/location/description str The location where the metadata is associated.
schemas/DeveloperMetadata/properties/metadataId dict
schemas/DeveloperMetadata/properties/metadataId/description str The spreadsheet-scoped unique ID that identifies the metadata. IDs may be
specified when metadata is created, otherwise one will be randomly
generated and assigned. Must be positive.
schemas/DeveloperMetadata/properties/metadataId/format str int32
schemas/DeveloperMetadata/properties/metadataId/type str integer
schemas/DeveloperMetadata/properties/metadataKey dict
schemas/DeveloperMetadata/properties/metadataKey/description str The metadata key. There may be multiple metadata in a spreadsheet with the
same key.  Developer metadata must always have a key specified.
schemas/DeveloperMetadata/properties/metadataKey/type str string
schemas/DeveloperMetadata/properties/metadataValue dict
schemas/DeveloperMetadata/properties/metadataValue/description str Data associated with the metadata's key.
schemas/DeveloperMetadata/properties/metadataValue/type str string
schemas/DeveloperMetadata/properties/visibility dict
schemas/DeveloperMetadata/properties/visibility/description str The metadata visibility.  Developer metadata must always have a visibility
specified.
schemas/DeveloperMetadata/properties/visibility/enum list
schemas/DeveloperMetadata/properties/visibility/enum/[] str DEVELOPER_METADATA_VISIBILITY_UNSPECIFIED
schemas/DeveloperMetadata/properties/visibility/enumDescriptions list
schemas/DeveloperMetadata/properties/visibility/enumDescriptions/[] str Default value.
schemas/DeveloperMetadata/properties/visibility/type str string
schemas/DeveloperMetadata/type str object
schemas/DeveloperMetadataLocation dict
schemas/DeveloperMetadataLocation/description str A location where metadata may be associated in a spreadsheet.
schemas/DeveloperMetadataLocation/id str DeveloperMetadataLocation
schemas/DeveloperMetadataLocation/properties dict
schemas/DeveloperMetadataLocation/properties/dimensionRange dict
schemas/DeveloperMetadataLocation/properties/dimensionRange/$ref str DimensionRange
schemas/DeveloperMetadataLocation/properties/dimensionRange/description str Represents the row or column when metadata is associated with
a dimension. The specified DimensionRange must represent a single row
or column; it cannot be unbounded or span multiple rows or columns.
schemas/DeveloperMetadataLocation/properties/locationType dict
schemas/DeveloperMetadataLocation/properties/locationType/description str The type of location this object represents.  This field is read-only.
schemas/DeveloperMetadataLocation/properties/locationType/enum list
schemas/DeveloperMetadataLocation/properties/locationType/enum/[] str DEVELOPER_METADATA_LOCATION_TYPE_UNSPECIFIED
schemas/DeveloperMetadataLocation/properties/locationType/enumDescriptions list
schemas/DeveloperMetadataLocation/properties/locationType/enumDescriptions/[] str Default value.
schemas/DeveloperMetadataLocation/properties/locationType/type str string
schemas/DeveloperMetadataLocation/properties/sheetId dict
schemas/DeveloperMetadataLocation/properties/sheetId/description str The ID of the sheet when metadata is associated with an entire sheet.
schemas/DeveloperMetadataLocation/properties/sheetId/format str int32
schemas/DeveloperMetadataLocation/properties/sheetId/type str integer
schemas/DeveloperMetadataLocation/properties/spreadsheet dict
schemas/DeveloperMetadataLocation/properties/spreadsheet/description str True when metadata is associated with an entire spreadsheet.
schemas/DeveloperMetadataLocation/properties/spreadsheet/type str boolean
schemas/DeveloperMetadataLocation/type str object
schemas/DeveloperMetadataLookup dict
schemas/DeveloperMetadataLookup/description str Selects DeveloperMetadata that matches all of the specified fields.  For
example, if only a metadata ID is specified this considers the
DeveloperMetadata with that particular unique ID. If a metadata key is
specified, this considers all developer metadata with that key.  If a
key, visibility, and location type are all specified, this considers all
developer metadata with that key and visibility that are associated with a
location of that type.  In general, this
selects all DeveloperMetadata that matches the intersection of all the
specified fields; any field or combination of fields may be specified.
schemas/DeveloperMetadataLookup/id str DeveloperMetadataLookup
schemas/DeveloperMetadataLookup/properties dict
schemas/DeveloperMetadataLookup/properties/locationMatchingStrategy dict
schemas/DeveloperMetadataLookup/properties/locationMatchingStrategy/description str Determines how this lookup matches the location.  If this field is
specified as EXACT, only developer metadata associated on the exact
location specified is matched.  If this field is specified to INTERSECTING,
developer metadata associated on intersecting locations is also
matched.  If left unspecified, this field assumes a default value of
INTERSECTING.
If this field is specified, a metadataLocation
must also be specified.
schemas/DeveloperMetadataLookup/properties/locationMatchingStrategy/enum list
schemas/DeveloperMetadataLookup/properties/locationMatchingStrategy/enum/[] str DEVELOPER_METADATA_LOCATION_MATCHING_STRATEGY_UNSPECIFIED
schemas/DeveloperMetadataLookup/properties/locationMatchingStrategy/enumDescriptions list
schemas/DeveloperMetadataLookup/properties/locationMatchingStrategy/enumDescriptions/[] str Default value. This value must not be used.
schemas/DeveloperMetadataLookup/properties/locationMatchingStrategy/type str string
schemas/DeveloperMetadataLookup/properties/locationType dict
schemas/DeveloperMetadataLookup/properties/locationType/description str Limits the selected developer metadata to those entries which are
associated with locations of the specified type.  For example, when this
field is specified as ROW this lookup
only considers developer metadata associated on rows.  If the field is left
unspecified, all location types are considered.  This field cannot be
specified as SPREADSHEET when
the locationMatchingStrategy
is specified as INTERSECTING or when the
metadataLocation is specified as a
non-spreadsheet location: spreadsheet metadata cannot intersect any other
developer metadata location.  This field also must be left unspecified when
the locationMatchingStrategy
is specified as EXACT.
schemas/DeveloperMetadataLookup/properties/locationType/enum list
schemas/DeveloperMetadataLookup/properties/locationType/enum/[] str DEVELOPER_METADATA_LOCATION_TYPE_UNSPECIFIED
schemas/DeveloperMetadataLookup/properties/locationType/enumDescriptions list
schemas/DeveloperMetadataLookup/properties/locationType/enumDescriptions/[] str Default value.
schemas/DeveloperMetadataLookup/properties/locationType/type str string
schemas/DeveloperMetadataLookup/properties/metadataId dict
schemas/DeveloperMetadataLookup/properties/metadataId/description str Limits the selected developer metadata to that which has a matching
DeveloperMetadata.metadata_id.
schemas/DeveloperMetadataLookup/properties/metadataId/format str int32
schemas/DeveloperMetadataLookup/properties/metadataId/type str integer
schemas/DeveloperMetadataLookup/properties/metadataKey dict
schemas/DeveloperMetadataLookup/properties/metadataKey/description str Limits the selected developer metadata to that which has a matching
DeveloperMetadata.metadata_key.
schemas/DeveloperMetadataLookup/properties/metadataKey/type str string
schemas/DeveloperMetadataLookup/properties/metadataLocation dict
schemas/DeveloperMetadataLookup/properties/metadataLocation/$ref str DeveloperMetadataLocation
schemas/DeveloperMetadataLookup/properties/metadataLocation/description str Limits the selected developer metadata to those entries associated with
the specified location.  This field either matches exact locations or all
intersecting locations according the specified
locationMatchingStrategy.
schemas/DeveloperMetadataLookup/properties/metadataValue dict
schemas/DeveloperMetadataLookup/properties/metadataValue/description str Limits the selected developer metadata to that which has a matching
DeveloperMetadata.metadata_value.
schemas/DeveloperMetadataLookup/properties/metadataValue/type str string
schemas/DeveloperMetadataLookup/properties/visibility dict
schemas/DeveloperMetadataLookup/properties/visibility/description str Limits the selected developer metadata to that which has a matching
DeveloperMetadata.visibility.  If left unspecified, all developer
metadata visibile to the requesting project is considered.
schemas/DeveloperMetadataLookup/properties/visibility/enum list
schemas/DeveloperMetadataLookup/properties/visibility/enum/[] str DEVELOPER_METADATA_VISIBILITY_UNSPECIFIED
schemas/DeveloperMetadataLookup/properties/visibility/enumDescriptions list
schemas/DeveloperMetadataLookup/properties/visibility/enumDescriptions/[] str Default value.
schemas/DeveloperMetadataLookup/properties/visibility/type str string
schemas/DeveloperMetadataLookup/type str object
schemas/DimensionGroup dict
schemas/DimensionGroup/description str A group over an interval of rows or columns on a sheet, which can contain or
be contained within other groups. A group can be collapsed or expanded as a
unit on the sheet.
schemas/DimensionGroup/id str DimensionGroup
schemas/DimensionGroup/properties dict
schemas/DimensionGroup/properties/collapsed dict
schemas/DimensionGroup/properties/collapsed/description str This field is true if this group is collapsed. A collapsed group remains
collapsed if an overlapping group at a shallower depth is expanded.

A true value does not imply that all dimensions within the group are
hidden, since a dimension's visibility can change independently from this
group property. However, when this property is updated, all dimensions
within it are set to hidden if this field is true, or set to visible if
this field is false.
schemas/DimensionGroup/properties/collapsed/type str boolean
schemas/DimensionGroup/properties/depth dict
schemas/DimensionGroup/properties/depth/description str The depth of the group, representing how many groups have a range that
wholly contains the range of this group.
schemas/DimensionGroup/properties/depth/format str int32
schemas/DimensionGroup/properties/depth/type str integer
schemas/DimensionGroup/properties/range dict
schemas/DimensionGroup/properties/range/$ref str DimensionRange
schemas/DimensionGroup/properties/range/description str The range over which this group exists.
schemas/DimensionGroup/type str object
schemas/DimensionProperties dict
schemas/DimensionProperties/description str Properties about a dimension.
schemas/DimensionProperties/id str DimensionProperties
schemas/DimensionProperties/properties dict
schemas/DimensionProperties/properties/developerMetadata dict
schemas/DimensionProperties/properties/developerMetadata/description str The developer metadata associated with a single row or column.
schemas/DimensionProperties/properties/developerMetadata/items dict
schemas/DimensionProperties/properties/developerMetadata/items/$ref str DeveloperMetadata
schemas/DimensionProperties/properties/developerMetadata/type str array
schemas/DimensionProperties/properties/hiddenByFilter dict
schemas/DimensionProperties/properties/hiddenByFilter/description str True if this dimension is being filtered.
This field is read-only.
schemas/DimensionProperties/properties/hiddenByFilter/type str boolean
schemas/DimensionProperties/properties/hiddenByUser dict
schemas/DimensionProperties/properties/hiddenByUser/description str True if this dimension is explicitly hidden.
schemas/DimensionProperties/properties/hiddenByUser/type str boolean
schemas/DimensionProperties/properties/pixelSize dict
schemas/DimensionProperties/properties/pixelSize/description str The height (if a row) or width (if a column) of the dimension in pixels.
schemas/DimensionProperties/properties/pixelSize/format str int32
schemas/DimensionProperties/properties/pixelSize/type str integer
schemas/DimensionProperties/type str object
schemas/DimensionRange dict
schemas/DimensionRange/description str A range along a single dimension on a sheet.
All indexes are zero-based.
Indexes are half open: the start index is inclusive
and the end index is exclusive.
Missing indexes indicate the range is unbounded on that side.
schemas/DimensionRange/id str DimensionRange
schemas/DimensionRange/properties dict
schemas/DimensionRange/properties/dimension dict
schemas/DimensionRange/properties/dimension/description str The dimension of the span.
schemas/DimensionRange/properties/dimension/enum list
schemas/DimensionRange/properties/dimension/enum/[] str DIMENSION_UNSPECIFIED
schemas/DimensionRange/properties/dimension/enumDescriptions list
schemas/DimensionRange/properties/dimension/enumDescriptions/[] str The default value, do not use.
schemas/DimensionRange/properties/dimension/type str string
schemas/DimensionRange/properties/endIndex dict
schemas/DimensionRange/properties/endIndex/description str The end (exclusive) of the span, or not set if unbounded.
schemas/DimensionRange/properties/endIndex/format str int32
schemas/DimensionRange/properties/endIndex/type str integer
schemas/DimensionRange/properties/sheetId dict
schemas/DimensionRange/properties/sheetId/description str The sheet this span is on.
schemas/DimensionRange/properties/sheetId/format str int32
schemas/DimensionRange/properties/sheetId/type str integer
schemas/DimensionRange/properties/startIndex dict
schemas/DimensionRange/properties/startIndex/description str The start (inclusive) of the span, or not set if unbounded.
schemas/DimensionRange/properties/startIndex/format str int32
schemas/DimensionRange/properties/startIndex/type str integer
schemas/DimensionRange/type str object
schemas/DuplicateFilterViewRequest dict
schemas/DuplicateFilterViewRequest/description str Duplicates a particular filter view.
schemas/DuplicateFilterViewRequest/id str DuplicateFilterViewRequest
schemas/DuplicateFilterViewRequest/properties dict
schemas/DuplicateFilterViewRequest/properties/filterId dict
schemas/DuplicateFilterViewRequest/properties/filterId/description str The ID of the filter being duplicated.
schemas/DuplicateFilterViewRequest/properties/filterId/format str int32
schemas/DuplicateFilterViewRequest/properties/filterId/type str integer
schemas/DuplicateFilterViewRequest/type str object
schemas/DuplicateFilterViewResponse dict
schemas/DuplicateFilterViewResponse/description str The result of a filter view being duplicated.
schemas/DuplicateFilterViewResponse/id str DuplicateFilterViewResponse
schemas/DuplicateFilterViewResponse/properties dict
schemas/DuplicateFilterViewResponse/properties/filter dict
schemas/DuplicateFilterViewResponse/properties/filter/$ref str FilterView
schemas/DuplicateFilterViewResponse/properties/filter/description str The newly created filter.
schemas/DuplicateFilterViewResponse/type str object
schemas/DuplicateSheetRequest dict
schemas/DuplicateSheetRequest/description str Duplicates the contents of a sheet.
schemas/DuplicateSheetRequest/id str DuplicateSheetRequest
schemas/DuplicateSheetRequest/properties dict
schemas/DuplicateSheetRequest/properties/insertSheetIndex dict
schemas/DuplicateSheetRequest/properties/insertSheetIndex/description str The zero-based index where the new sheet should be inserted.
The index of all sheets after this are incremented.
schemas/DuplicateSheetRequest/properties/insertSheetIndex/format str int32
schemas/DuplicateSheetRequest/properties/insertSheetIndex/type str integer
schemas/DuplicateSheetRequest/properties/newSheetId dict
schemas/DuplicateSheetRequest/properties/newSheetId/description str If set, the ID of the new sheet. If not set, an ID is chosen.
If set, the ID must not conflict with any existing sheet ID.
If set, it must be non-negative.
schemas/DuplicateSheetRequest/properties/newSheetId/format str int32
schemas/DuplicateSheetRequest/properties/newSheetId/type str integer
schemas/DuplicateSheetRequest/properties/newSheetName dict
schemas/DuplicateSheetRequest/properties/newSheetName/description str The name of the new sheet.  If empty, a new name is chosen for you.
schemas/DuplicateSheetRequest/properties/newSheetName/type str string
schemas/DuplicateSheetRequest/properties/sourceSheetId dict
schemas/DuplicateSheetRequest/properties/sourceSheetId/description str The sheet to duplicate.
schemas/DuplicateSheetRequest/properties/sourceSheetId/format str int32
schemas/DuplicateSheetRequest/properties/sourceSheetId/type str integer
schemas/DuplicateSheetRequest/type str object
schemas/DuplicateSheetResponse dict
schemas/DuplicateSheetResponse/description str The result of duplicating a sheet.
schemas/DuplicateSheetResponse/id str DuplicateSheetResponse
schemas/DuplicateSheetResponse/properties dict
schemas/DuplicateSheetResponse/properties/properties dict
schemas/DuplicateSheetResponse/properties/properties/$ref str SheetProperties
schemas/DuplicateSheetResponse/properties/properties/description str The properties of the duplicate sheet.
schemas/DuplicateSheetResponse/type str object
schemas/Editors dict
schemas/Editors/description str The editors of a protected range.
schemas/Editors/id str Editors
schemas/Editors/properties dict
schemas/Editors/properties/domainUsersCanEdit dict
schemas/Editors/properties/domainUsersCanEdit/description str True if anyone in the document's domain has edit access to the protected
range.  Domain protection is only supported on documents within a domain.
schemas/Editors/properties/domainUsersCanEdit/type str boolean
schemas/Editors/properties/groups dict
schemas/Editors/properties/groups/description str The email addresses of groups with edit access to the protected range.
schemas/Editors/properties/groups/items dict
schemas/Editors/properties/groups/items/type str string
schemas/Editors/properties/groups/type str array
schemas/Editors/properties/users dict
schemas/Editors/properties/users/description str The email addresses of users with edit access to the protected range.
schemas/Editors/properties/users/items dict
schemas/Editors/properties/users/items/type str string
schemas/Editors/properties/users/type str array
schemas/Editors/type str object
schemas/EmbeddedChart dict
schemas/EmbeddedChart/description str A chart embedded in a sheet.
schemas/EmbeddedChart/id str EmbeddedChart
schemas/EmbeddedChart/properties dict
schemas/EmbeddedChart/properties/chartId dict
schemas/EmbeddedChart/properties/chartId/description str The ID of the chart.
schemas/EmbeddedChart/properties/chartId/format str int32
schemas/EmbeddedChart/properties/chartId/type str integer
schemas/EmbeddedChart/properties/position dict
schemas/EmbeddedChart/properties/position/$ref str EmbeddedObjectPosition
schemas/EmbeddedChart/properties/position/description str The position of the chart.
schemas/EmbeddedChart/properties/spec dict
schemas/EmbeddedChart/properties/spec/$ref str ChartSpec
schemas/EmbeddedChart/properties/spec/description str The specification of the chart.
schemas/EmbeddedChart/type str object
schemas/EmbeddedObjectPosition dict
schemas/EmbeddedObjectPosition/description str The position of an embedded object such as a chart.
schemas/EmbeddedObjectPosition/id str EmbeddedObjectPosition
schemas/EmbeddedObjectPosition/properties dict
schemas/EmbeddedObjectPosition/properties/newSheet dict
schemas/EmbeddedObjectPosition/properties/newSheet/description str If true, the embedded object is put on a new sheet whose ID
is chosen for you. Used only when writing.
schemas/EmbeddedObjectPosition/properties/newSheet/type str boolean
schemas/EmbeddedObjectPosition/properties/overlayPosition dict
schemas/EmbeddedObjectPosition/properties/overlayPosition/$ref str OverlayPosition
schemas/EmbeddedObjectPosition/properties/overlayPosition/description str The position at which the object is overlaid on top of a grid.
schemas/EmbeddedObjectPosition/properties/sheetId dict
schemas/EmbeddedObjectPosition/properties/sheetId/description str The sheet this is on. Set only if the embedded object
is on its own sheet. Must be non-negative.
schemas/EmbeddedObjectPosition/properties/sheetId/format str int32
schemas/EmbeddedObjectPosition/properties/sheetId/type str integer
schemas/EmbeddedObjectPosition/type str object
schemas/ErrorValue dict
schemas/ErrorValue/description str An error in a cell.
schemas/ErrorValue/id str ErrorValue
schemas/ErrorValue/properties dict
schemas/ErrorValue/properties/message dict
schemas/ErrorValue/properties/message/description str A message with more information about the error
(in the spreadsheet's locale).
schemas/ErrorValue/properties/message/type str string
schemas/ErrorValue/properties/type dict
schemas/ErrorValue/properties/type/description str The type of error.
schemas/ErrorValue/properties/type/enum list
schemas/ErrorValue/properties/type/enum/[] str ERROR_TYPE_UNSPECIFIED
schemas/ErrorValue/properties/type/enumDescriptions list
schemas/ErrorValue/properties/type/enumDescriptions/[] str The default error type, do not use this.
schemas/ErrorValue/properties/type/type str string
schemas/ErrorValue/type str object
schemas/ExtendedValue dict
schemas/ExtendedValue/description str The kinds of value that a cell in a spreadsheet can have.
schemas/ExtendedValue/id str ExtendedValue
schemas/ExtendedValue/properties dict
schemas/ExtendedValue/properties/boolValue dict
schemas/ExtendedValue/properties/boolValue/description str Represents a boolean value.
schemas/ExtendedValue/properties/boolValue/type str boolean
schemas/ExtendedValue/properties/errorValue dict
schemas/ExtendedValue/properties/errorValue/$ref str ErrorValue
schemas/ExtendedValue/properties/errorValue/description str Represents an error.
This field is read-only.
schemas/ExtendedValue/properties/formulaValue dict
schemas/ExtendedValue/properties/formulaValue/description str Represents a formula.
schemas/ExtendedValue/properties/formulaValue/type str string
schemas/ExtendedValue/properties/numberValue dict
schemas/ExtendedValue/properties/numberValue/description str Represents a double value.
Note: Dates, Times and DateTimes are represented as doubles in
"serial number" format.
schemas/ExtendedValue/properties/numberValue/format str double
schemas/ExtendedValue/properties/numberValue/type str number
schemas/ExtendedValue/properties/stringValue dict
schemas/ExtendedValue/properties/stringValue/description str Represents a string value.
Leading single quotes are not included. For example, if the user typed
`'123` into the UI, this would be represented as a `stringValue` of
`"123"`.
schemas/ExtendedValue/properties/stringValue/type str string
schemas/ExtendedValue/type str object
schemas/FilterCriteria dict
schemas/FilterCriteria/description str Criteria for showing/hiding rows in a filter or filter view.
schemas/FilterCriteria/id str FilterCriteria
schemas/FilterCriteria/properties dict
schemas/FilterCriteria/properties/condition dict
schemas/FilterCriteria/properties/condition/$ref str BooleanCondition
schemas/FilterCriteria/properties/condition/description str A condition that must be true for values to be shown.
(This does not override hiddenValues -- if a value is listed there,
 it will still be hidden.)
schemas/FilterCriteria/properties/hiddenValues dict
schemas/FilterCriteria/properties/hiddenValues/description str Values that should be hidden.
schemas/FilterCriteria/properties/hiddenValues/items dict
schemas/FilterCriteria/properties/hiddenValues/items/type str string
schemas/FilterCriteria/properties/hiddenValues/type str array
schemas/FilterCriteria/type str object
schemas/FilterView dict
schemas/FilterView/description str A filter view.
schemas/FilterView/id str FilterView
schemas/FilterView/properties dict
schemas/FilterView/properties/criteria dict
schemas/FilterView/properties/criteria/additionalProperties dict
schemas/FilterView/properties/criteria/additionalProperties/$ref str FilterCriteria
schemas/FilterView/properties/criteria/description str The criteria for showing/hiding values per column.
The map's key is the column index, and the value is the criteria for
that column.
schemas/FilterView/properties/criteria/type str object
schemas/FilterView/properties/filterViewId dict
schemas/FilterView/properties/filterViewId/description str The ID of the filter view.
schemas/FilterView/properties/filterViewId/format str int32
schemas/FilterView/properties/filterViewId/type str integer
schemas/FilterView/properties/namedRangeId dict
schemas/FilterView/properties/namedRangeId/description str The named range this filter view is backed by, if any.

When writing, only one of range or named_range_id
may be set.
schemas/FilterView/properties/namedRangeId/type str string
schemas/FilterView/properties/range dict
schemas/FilterView/properties/range/$ref str GridRange
schemas/FilterView/properties/range/description str The range this filter view covers.

When writing, only one of range or named_range_id
may be set.
schemas/FilterView/properties/sortSpecs dict
schemas/FilterView/properties/sortSpecs/description str The sort order per column. Later specifications are used when values
are equal in the earlier specifications.
schemas/FilterView/properties/sortSpecs/items dict
schemas/FilterView/properties/sortSpecs/items/$ref str SortSpec
schemas/FilterView/properties/sortSpecs/type str array
schemas/FilterView/properties/title dict
schemas/FilterView/properties/title/description str The name of the filter view.
schemas/FilterView/properties/title/type str string
schemas/FilterView/type str object
schemas/FindReplaceRequest dict
schemas/FindReplaceRequest/description str Finds and replaces data in cells over a range, sheet, or all sheets.
schemas/FindReplaceRequest/id str FindReplaceRequest
schemas/FindReplaceRequest/properties dict
schemas/FindReplaceRequest/properties/allSheets dict
schemas/FindReplaceRequest/properties/allSheets/description str True to find/replace over all sheets.
schemas/FindReplaceRequest/properties/allSheets/type str boolean
schemas/FindReplaceRequest/properties/find dict
schemas/FindReplaceRequest/properties/find/description str The value to search.
schemas/FindReplaceRequest/properties/find/type str string
schemas/FindReplaceRequest/properties/includeFormulas dict
schemas/FindReplaceRequest/properties/includeFormulas/description str True if the search should include cells with formulas.
False to skip cells with formulas.
schemas/FindReplaceRequest/properties/includeFormulas/type str boolean
schemas/FindReplaceRequest/properties/matchCase dict
schemas/FindReplaceRequest/properties/matchCase/description str True if the search is case sensitive.
schemas/FindReplaceRequest/properties/matchCase/type str boolean
schemas/FindReplaceRequest/properties/matchEntireCell dict
schemas/FindReplaceRequest/properties/matchEntireCell/description str True if the find value should match the entire cell.
schemas/FindReplaceRequest/properties/matchEntireCell/type str boolean
schemas/FindReplaceRequest/properties/range dict
schemas/FindReplaceRequest/properties/range/$ref str GridRange
schemas/FindReplaceRequest/properties/range/description str The range to find/replace over.
schemas/FindReplaceRequest/properties/replacement dict
schemas/FindReplaceRequest/properties/replacement/description str The value to use as the replacement.
schemas/FindReplaceRequest/properties/replacement/type str string
schemas/FindReplaceRequest/properties/searchByRegex dict
schemas/FindReplaceRequest/properties/searchByRegex/description str True if the find value is a regex.
The regular expression and replacement should follow Java regex rules
at https://docs.oracle.com/javase/8/docs/api/java/util/regex/Pattern.html.
The replacement string is allowed to refer to capturing groups.
For example, if one cell has the contents `"Google Sheets"` and another
has `"Google Docs"`, then searching for `"o.* (.*)"` with a replacement of
`"$1 Rocks"` would change the contents of the cells to
`"GSheets Rocks"` and `"GDocs Rocks"` respectively.
schemas/FindReplaceRequest/properties/searchByRegex/type str boolean
schemas/FindReplaceRequest/properties/sheetId dict
schemas/FindReplaceRequest/properties/sheetId/description str The sheet to find/replace over.
schemas/FindReplaceRequest/properties/sheetId/format str int32
schemas/FindReplaceRequest/properties/sheetId/type str integer
schemas/FindReplaceRequest/type str object
schemas/FindReplaceResponse dict
schemas/FindReplaceResponse/description str The result of the find/replace.
schemas/FindReplaceResponse/id str FindReplaceResponse
schemas/FindReplaceResponse/properties dict
schemas/FindReplaceResponse/properties/formulasChanged dict
schemas/FindReplaceResponse/properties/formulasChanged/description str The number of formula cells changed.
schemas/FindReplaceResponse/properties/formulasChanged/format str int32
schemas/FindReplaceResponse/properties/formulasChanged/type str integer
schemas/FindReplaceResponse/properties/occurrencesChanged dict
schemas/FindReplaceResponse/properties/occurrencesChanged/description str The number of occurrences (possibly multiple within a cell) changed.
For example, if replacing `"e"` with `"o"` in `"Google Sheets"`, this would
be `"3"` because `"Google Sheets"` -> `"Googlo Shoots"`.
schemas/FindReplaceResponse/properties/occurrencesChanged/format str int32
schemas/FindReplaceResponse/properties/occurrencesChanged/type str integer
schemas/FindReplaceResponse/properties/rowsChanged dict
schemas/FindReplaceResponse/properties/rowsChanged/description str The number of rows changed.
schemas/FindReplaceResponse/properties/rowsChanged/format str int32
schemas/FindReplaceResponse/properties/rowsChanged/type str integer
schemas/FindReplaceResponse/properties/sheetsChanged dict
schemas/FindReplaceResponse/properties/sheetsChanged/description str The number of sheets changed.
schemas/FindReplaceResponse/properties/sheetsChanged/format str int32
schemas/FindReplaceResponse/properties/sheetsChanged/type str integer
schemas/FindReplaceResponse/properties/valuesChanged dict
schemas/FindReplaceResponse/properties/valuesChanged/description str The number of non-formula cells changed.
schemas/FindReplaceResponse/properties/valuesChanged/format str int32
schemas/FindReplaceResponse/properties/valuesChanged/type str integer
schemas/FindReplaceResponse/type str object
schemas/GetSpreadsheetByDataFilterRequest dict
schemas/GetSpreadsheetByDataFilterRequest/description str The request for retrieving a Spreadsheet.
schemas/GetSpreadsheetByDataFilterRequest/id str GetSpreadsheetByDataFilterRequest
schemas/GetSpreadsheetByDataFilterRequest/properties dict
schemas/GetSpreadsheetByDataFilterRequest/properties/dataFilters dict
schemas/GetSpreadsheetByDataFilterRequest/properties/dataFilters/description str The DataFilters used to select which ranges to retrieve from
the spreadsheet.
schemas/GetSpreadsheetByDataFilterRequest/properties/dataFilters/items dict
schemas/GetSpreadsheetByDataFilterRequest/properties/dataFilters/items/$ref str DataFilter
schemas/GetSpreadsheetByDataFilterRequest/properties/dataFilters/type str array
schemas/GetSpreadsheetByDataFilterRequest/properties/includeGridData dict
schemas/GetSpreadsheetByDataFilterRequest/properties/includeGridData/description str True if grid data should be returned.
This parameter is ignored if a field mask was set in the request.
schemas/GetSpreadsheetByDataFilterRequest/properties/includeGridData/type str boolean
schemas/GetSpreadsheetByDataFilterRequest/type str object
schemas/GradientRule dict
schemas/GradientRule/description str A rule that applies a gradient color scale format, based on
the interpolation points listed. The format of a cell will vary
based on its contents as compared to the values of the interpolation
points.
schemas/GradientRule/id str GradientRule
schemas/GradientRule/properties dict
schemas/GradientRule/properties/maxpoint dict
schemas/GradientRule/properties/maxpoint/$ref str InterpolationPoint
schemas/GradientRule/properties/maxpoint/description str The final interpolation point.
schemas/GradientRule/properties/midpoint dict
schemas/GradientRule/properties/midpoint/$ref str InterpolationPoint
schemas/GradientRule/properties/midpoint/description str An optional midway interpolation point.
schemas/GradientRule/properties/minpoint dict
schemas/GradientRule/properties/minpoint/$ref str InterpolationPoint
schemas/GradientRule/properties/minpoint/description str The starting interpolation point.
schemas/GradientRule/type str object
schemas/GridCoordinate dict
schemas/GridCoordinate/description str A coordinate in a sheet.
All indexes are zero-based.
schemas/GridCoordinate/id str GridCoordinate
schemas/GridCoordinate/properties dict
schemas/GridCoordinate/properties/columnIndex dict
schemas/GridCoordinate/properties/columnIndex/description str The column index of the coordinate.
schemas/GridCoordinate/properties/columnIndex/format str int32
schemas/GridCoordinate/properties/columnIndex/type str integer
schemas/GridCoordinate/properties/rowIndex dict
schemas/GridCoordinate/properties/rowIndex/description str The row index of the coordinate.
schemas/GridCoordinate/properties/rowIndex/format str int32
schemas/GridCoordinate/properties/rowIndex/type str integer
schemas/GridCoordinate/properties/sheetId dict
schemas/GridCoordinate/properties/sheetId/description str The sheet this coordinate is on.
schemas/GridCoordinate/properties/sheetId/format str int32
schemas/GridCoordinate/properties/sheetId/type str integer
schemas/GridCoordinate/type str object
schemas/GridData dict
schemas/GridData/description str Data in the grid, as well as metadata about the dimensions.
schemas/GridData/id str GridData
schemas/GridData/properties dict
schemas/GridData/properties/columnMetadata dict
schemas/GridData/properties/columnMetadata/description str Metadata about the requested columns in the grid, starting with the column
in start_column.
schemas/GridData/properties/columnMetadata/items dict
schemas/GridData/properties/columnMetadata/items/$ref str DimensionProperties
schemas/GridData/properties/columnMetadata/type str array
schemas/GridData/properties/rowData dict
schemas/GridData/properties/rowData/description str The data in the grid, one entry per row,
starting with the row in startRow.
The values in RowData will correspond to columns starting
at start_column.
schemas/GridData/properties/rowData/items dict
schemas/GridData/properties/rowData/items/$ref str RowData
schemas/GridData/properties/rowData/type str array
schemas/GridData/properties/rowMetadata dict
schemas/GridData/properties/rowMetadata/description str Metadata about the requested rows in the grid, starting with the row
in start_row.
schemas/GridData/properties/rowMetadata/items dict
schemas/GridData/properties/rowMetadata/items/$ref str DimensionProperties
schemas/GridData/properties/rowMetadata/type str array
schemas/GridData/properties/startColumn dict
schemas/GridData/properties/startColumn/description str The first column this GridData refers to, zero-based.
schemas/GridData/properties/startColumn/format str int32
schemas/GridData/properties/startColumn/type str integer
schemas/GridData/properties/startRow dict
schemas/GridData/properties/startRow/description str The first row this GridData refers to, zero-based.
schemas/GridData/properties/startRow/format str int32
schemas/GridData/properties/startRow/type str integer
schemas/GridData/type str object
schemas/GridProperties dict
schemas/GridProperties/description str Properties of a grid.
schemas/GridProperties/id str GridProperties
schemas/GridProperties/properties dict
schemas/GridProperties/properties/columnCount dict
schemas/GridProperties/properties/columnCount/description str The number of columns in the grid.
schemas/GridProperties/properties/columnCount/format str int32
schemas/GridProperties/properties/columnCount/type str integer
schemas/GridProperties/properties/columnGroupControlAfter dict
schemas/GridProperties/properties/columnGroupControlAfter/description str True if the column grouping control toggle is shown after the group.
schemas/GridProperties/properties/columnGroupControlAfter/type str boolean
schemas/GridProperties/properties/frozenColumnCount dict
schemas/GridProperties/properties/frozenColumnCount/description str The number of columns that are frozen in the grid.
schemas/GridProperties/properties/frozenColumnCount/format str int32
schemas/GridProperties/properties/frozenColumnCount/type str integer
schemas/GridProperties/properties/frozenRowCount dict
schemas/GridProperties/properties/frozenRowCount/description str The number of rows that are frozen in the grid.
schemas/GridProperties/properties/frozenRowCount/format str int32
schemas/GridProperties/properties/frozenRowCount/type str integer
schemas/GridProperties/properties/hideGridlines dict
schemas/GridProperties/properties/hideGridlines/description str True if the grid isn't showing gridlines in the UI.
schemas/GridProperties/properties/hideGridlines/type str boolean
schemas/GridProperties/properties/rowCount dict
schemas/GridProperties/properties/rowCount/description str The number of rows in the grid.
schemas/GridProperties/properties/rowCount/format str int32
schemas/GridProperties/properties/rowCount/type str integer
schemas/GridProperties/properties/rowGroupControlAfter dict
schemas/GridProperties/properties/rowGroupControlAfter/description str True if the row grouping control toggle is shown after the group.
schemas/GridProperties/properties/rowGroupControlAfter/type str boolean
schemas/GridProperties/type str object
schemas/GridRange dict
schemas/GridRange/description str A range on a sheet.
All indexes are zero-based.
Indexes are half open, e.g the start index is inclusive
and the end index is exclusive -- [start_index, end_index).
Missing indexes indicate the range is unbounded on that side.

For example, if `"Sheet1"` is sheet ID 0, then:

  `Sheet1!A1:A1 == sheet_id: 0,
                  start_row_index: 0, end_row_index: 1,
                  start_column_index: 0, end_column_index: 1`

  `Sheet1!A3:B4 == sheet_id: 0,
                  start_row_index: 2, end_row_index: 4,
                  start_column_index: 0, end_column_index: 2`

  `Sheet1!A:B == sheet_id: 0,
                start_column_index: 0, end_column_index: 2`

  `Sheet1!A5:B == sheet_id: 0,
                 start_row_index: 4,
                 start_column_index: 0, end_column_index: 2`

  `Sheet1 == sheet_id:0`

The start index must always be less than or equal to the end index.
If the start index equals the end index, then the range is empty.
Empty ranges are typically not meaningful and are usually rendered in the
UI as `#REF!`.
schemas/GridRange/id str GridRange
schemas/GridRange/properties dict
schemas/GridRange/properties/endColumnIndex dict
schemas/GridRange/properties/endColumnIndex/description str The end column (exclusive) of the range, or not set if unbounded.
schemas/GridRange/properties/endColumnIndex/format str int32
schemas/GridRange/properties/endColumnIndex/type str integer
schemas/GridRange/properties/endRowIndex dict
schemas/GridRange/properties/endRowIndex/description str The end row (exclusive) of the range, or not set if unbounded.
schemas/GridRange/properties/endRowIndex/format str int32
schemas/GridRange/properties/endRowIndex/type str integer
schemas/GridRange/properties/sheetId dict
schemas/GridRange/properties/sheetId/description str The sheet this range is on.
schemas/GridRange/properties/sheetId/format str int32
schemas/GridRange/properties/sheetId/type str integer
schemas/GridRange/properties/startColumnIndex dict
schemas/GridRange/properties/startColumnIndex/description str The start column (inclusive) of the range, or not set if unbounded.
schemas/GridRange/properties/startColumnIndex/format str int32
schemas/GridRange/properties/startColumnIndex/type str integer
schemas/GridRange/properties/startRowIndex dict
schemas/GridRange/properties/startRowIndex/description str The start row (inclusive) of the range, or not set if unbounded.
schemas/GridRange/properties/startRowIndex/format str int32
schemas/GridRange/properties/startRowIndex/type str integer
schemas/GridRange/type str object
schemas/HistogramChartSpec dict
schemas/HistogramChartSpec/description str A <a href="/chart/interactive/docs/gallery/histogram">histogram chart</a>.
A histogram chart groups data items into bins, displaying each bin as a
column of stacked items.  Histograms are used to display the distribution
of a dataset.  Each column of items represents a range into which those
items fall.  The number of bins can be chosen automatically or specified
explicitly.
schemas/HistogramChartSpec/id str HistogramChartSpec
schemas/HistogramChartSpec/properties dict
schemas/HistogramChartSpec/properties/bucketSize dict
schemas/HistogramChartSpec/properties/bucketSize/description str By default the bucket size (the range of values stacked in a single
column) is chosen automatically, but it may be overridden here.
E.g., A bucket size of 1.5 results in buckets from 0 - 1.5, 1.5 - 3.0, etc.
Cannot be negative.
This field is optional.
schemas/HistogramChartSpec/properties/bucketSize/format str double
schemas/HistogramChartSpec/properties/bucketSize/type str number
schemas/HistogramChartSpec/properties/legendPosition dict
schemas/HistogramChartSpec/properties/legendPosition/description str The position of the chart legend.
schemas/HistogramChartSpec/properties/legendPosition/enum list
schemas/HistogramChartSpec/properties/legendPosition/enum/[] str HISTOGRAM_CHART_LEGEND_POSITION_UNSPECIFIED
schemas/HistogramChartSpec/properties/legendPosition/enumDescriptions list
schemas/HistogramChartSpec/properties/legendPosition/enumDescriptions/[] str Default value, do not use.
schemas/HistogramChartSpec/properties/legendPosition/type str string
schemas/HistogramChartSpec/properties/outlierPercentile dict
schemas/HistogramChartSpec/properties/outlierPercentile/description str The outlier percentile is used to ensure that outliers do not adversely
affect the calculation of bucket sizes.  For example, setting an outlier
percentile of 0.05 indicates that the top and bottom 5% of values when
calculating buckets.  The values are still included in the chart, they will
be added to the first or last buckets instead of their own buckets.
Must be between 0.0 and 0.5.
schemas/HistogramChartSpec/properties/outlierPercentile/format str double
schemas/HistogramChartSpec/properties/outlierPercentile/type str number
schemas/HistogramChartSpec/properties/series dict
schemas/HistogramChartSpec/properties/series/description str The series for a histogram may be either a single series of values to be
bucketed or multiple series, each of the same length, containing the name
of the series followed by the values to be bucketed for that series.
schemas/HistogramChartSpec/properties/series/items dict
schemas/HistogramChartSpec/properties/series/items/$ref str HistogramSeries
schemas/HistogramChartSpec/properties/series/type str array
schemas/HistogramChartSpec/properties/showItemDividers dict
schemas/HistogramChartSpec/properties/showItemDividers/description str Whether horizontal divider lines should be displayed between items in each
column.
schemas/HistogramChartSpec/properties/showItemDividers/type str boolean
schemas/HistogramChartSpec/type str object
schemas/HistogramRule dict
schemas/HistogramRule/description str Allows you to organize the numeric values in a source data column into
buckets of a constant size. All values from HistogramRule.start to
HistogramRule.end are placed into groups of size
HistogramRule.interval. In addition, all values below
HistogramRule.start are placed in one group, and all values above
HistogramRule.end are placed in another. Only
HistogramRule.interval is required, though if HistogramRule.start
and HistogramRule.end are both provided, HistogramRule.start must
be less than HistogramRule.end. For example, a pivot table showing
average purchase amount by age that has 50+ rows:

    +-----+-------------------+
    | Age | AVERAGE of Amount |
    +-----+-------------------+
    | 16  |            $27.13 |
    | 17  |             $5.24 |
    | 18  |            $20.15 |
    ...
    +-----+-------------------+
could be turned into a pivot table that looks like the one below by
applying a histogram group rule with a HistogramRule.start of 25,
an HistogramRule.interval of 20, and an HistogramRule.end
of 65.

    +-------------+-------------------+
    | Grouped Age | AVERAGE of Amount |
    +-------------+-------------------+
    | < 25        |            $19.34 |
    | 25-45       |            $31.43 |
    | 45-65       |            $35.87 |
    | > 65        |            $27.55 |
    +-------------+-------------------+
    | Grand Total |            $29.12 |
    +-------------+-------------------+
schemas/HistogramRule/id str HistogramRule
schemas/HistogramRule/properties dict
schemas/HistogramRule/properties/end dict
schemas/HistogramRule/properties/end/description str The maximum value at which items are placed into buckets
of constant size. Values above end are lumped into a single bucket.
This field is optional.
schemas/HistogramRule/properties/end/format str double
schemas/HistogramRule/properties/end/type str number
schemas/HistogramRule/properties/interval dict
schemas/HistogramRule/properties/interval/description str The size of the buckets that are created. Must be positive.
schemas/HistogramRule/properties/interval/format str double
schemas/HistogramRule/properties/interval/type str number
schemas/HistogramRule/properties/start dict
schemas/HistogramRule/properties/start/description str The minimum value at which items are placed into buckets
of constant size. Values below start are lumped into a single bucket.
This field is optional.
schemas/HistogramRule/properties/start/format str double
schemas/HistogramRule/properties/start/type str number
schemas/HistogramRule/type str object
schemas/HistogramSeries dict
schemas/HistogramSeries/description str A histogram series containing the series color and data.
schemas/HistogramSeries/id str HistogramSeries
schemas/HistogramSeries/properties dict
schemas/HistogramSeries/properties/barColor dict
schemas/HistogramSeries/properties/barColor/$ref str Color
schemas/HistogramSeries/properties/barColor/description str The color of the column representing this series in each bucket.
This field is optional.
schemas/HistogramSeries/properties/data dict
schemas/HistogramSeries/properties/data/$ref str ChartData
schemas/HistogramSeries/properties/data/description str The data for this histogram series.
schemas/HistogramSeries/type str object
schemas/InsertDimensionRequest dict
schemas/InsertDimensionRequest/description str Inserts rows or columns in a sheet at a particular index.
schemas/InsertDimensionRequest/id str InsertDimensionRequest
schemas/InsertDimensionRequest/properties dict
schemas/InsertDimensionRequest/properties/inheritFromBefore dict
schemas/InsertDimensionRequest/properties/inheritFromBefore/description str Whether dimension properties should be extended from the dimensions
before or after the newly inserted dimensions.
True to inherit from the dimensions before (in which case the start
index must be greater than 0), and false to inherit from the dimensions
after.

For example, if row index 0 has red background and row index 1
has a green background, then inserting 2 rows at index 1 can inherit
either the green or red background.  If `inheritFromBefore` is true,
the two new rows will be red (because the row before the insertion point
was red), whereas if `inheritFromBefore` is false, the two new rows will
be green (because the row after the insertion point was green).
schemas/InsertDimensionRequest/properties/inheritFromBefore/type str boolean
schemas/InsertDimensionRequest/properties/range dict
schemas/InsertDimensionRequest/properties/range/$ref str DimensionRange
schemas/InsertDimensionRequest/properties/range/description str The dimensions to insert.  Both the start and end indexes must be bounded.
schemas/InsertDimensionRequest/type str object
schemas/InsertRangeRequest dict
schemas/InsertRangeRequest/description str Inserts cells into a range, shifting the existing cells over or down.
schemas/InsertRangeRequest/id str InsertRangeRequest
schemas/InsertRangeRequest/properties dict
schemas/InsertRangeRequest/properties/range dict
schemas/InsertRangeRequest/properties/range/$ref str GridRange
schemas/InsertRangeRequest/properties/range/description str The range to insert new cells into.
schemas/InsertRangeRequest/properties/shiftDimension dict
schemas/InsertRangeRequest/properties/shiftDimension/description str The dimension which will be shifted when inserting cells.
If ROWS, existing cells will be shifted down.
If COLUMNS, existing cells will be shifted right.
schemas/InsertRangeRequest/properties/shiftDimension/enum list
schemas/InsertRangeRequest/properties/shiftDimension/enum/[] str DIMENSION_UNSPECIFIED
schemas/InsertRangeRequest/properties/shiftDimension/enumDescriptions list
schemas/InsertRangeRequest/properties/shiftDimension/enumDescriptions/[] str The default value, do not use.
schemas/InsertRangeRequest/properties/shiftDimension/type str string
schemas/InsertRangeRequest/type str object
schemas/InterpolationPoint dict
schemas/InterpolationPoint/description str A single interpolation point on a gradient conditional format.
These pin the gradient color scale according to the color,
type and value chosen.
schemas/InterpolationPoint/id str InterpolationPoint
schemas/InterpolationPoint/properties dict
schemas/InterpolationPoint/properties/color dict
schemas/InterpolationPoint/properties/color/$ref str Color
schemas/InterpolationPoint/properties/color/description str The color this interpolation point should use.
schemas/InterpolationPoint/properties/type dict
schemas/InterpolationPoint/properties/type/description str How the value should be interpreted.
schemas/InterpolationPoint/properties/type/enum list
schemas/InterpolationPoint/properties/type/enum/[] str INTERPOLATION_POINT_TYPE_UNSPECIFIED
schemas/InterpolationPoint/properties/type/enumDescriptions list
schemas/InterpolationPoint/properties/type/enumDescriptions/[] str The default value, do not use.
schemas/InterpolationPoint/properties/type/type str string
schemas/InterpolationPoint/properties/value dict
schemas/InterpolationPoint/properties/value/description str The value this interpolation point uses.  May be a formula.
Unused if type is MIN or
MAX.
schemas/InterpolationPoint/properties/value/type str string
schemas/InterpolationPoint/type str object
schemas/IterativeCalculationSettings dict
schemas/IterativeCalculationSettings/description str Settings to control how circular dependencies are resolved with iterative
calculation.
schemas/IterativeCalculationSettings/id str IterativeCalculationSettings
schemas/IterativeCalculationSettings/properties dict
schemas/IterativeCalculationSettings/properties/convergenceThreshold dict
schemas/IterativeCalculationSettings/properties/convergenceThreshold/description str When iterative calculation is enabled and successive results differ by
less than this threshold value, the calculation rounds stop.
schemas/IterativeCalculationSettings/properties/convergenceThreshold/format str double
schemas/IterativeCalculationSettings/properties/convergenceThreshold/type str number
schemas/IterativeCalculationSettings/properties/maxIterations dict
schemas/IterativeCalculationSettings/properties/maxIterations/description str When iterative calculation is enabled, the maximum number of calculation
rounds to perform.
schemas/IterativeCalculationSettings/properties/maxIterations/format str int32
schemas/IterativeCalculationSettings/properties/maxIterations/type str integer
schemas/IterativeCalculationSettings/type str object
schemas/LineStyle dict
schemas/LineStyle/description str Properties that describe the style of a line.
schemas/LineStyle/id str LineStyle
schemas/LineStyle/properties dict
schemas/LineStyle/properties/type dict
schemas/LineStyle/properties/type/description str The dash type of the line.
schemas/LineStyle/properties/type/enum list
schemas/LineStyle/properties/type/enum/[] str LINE_DASH_TYPE_UNSPECIFIED
schemas/LineStyle/properties/type/enumDescriptions list
schemas/LineStyle/properties/type/enumDescriptions/[] str Default value, do not use.
schemas/LineStyle/properties/type/type str string
schemas/LineStyle/properties/width dict
schemas/LineStyle/properties/width/description str The thickness of the line, in px.
schemas/LineStyle/properties/width/format str int32
schemas/LineStyle/properties/width/type str integer
schemas/LineStyle/type str object
schemas/ManualRule dict
schemas/ManualRule/description str Allows you to manually organize the values in a source data column into
buckets with names of your choosing. For example, a pivot table that
aggregates population by state:

    +-------+-------------------+
    | State | SUM of Population |
    +-------+-------------------+
    | AK    |               0.7 |
    | AL    |               4.8 |
    | AR    |               2.9 |
    ...
    +-------+-------------------+
could be turned into a pivot table that aggregates population by time zone
by providing a list of groups (for example, groupName = 'Central',
items = ['AL', 'AR', 'IA', ...]) to a manual group rule.
Note that a similar effect could be achieved by adding a time zone column
to the source data and adjusting the pivot table.

    +-----------+-------------------+
    | Time Zone | SUM of Population |
    +-----------+-------------------+
    | Central   |             106.3 |
    | Eastern   |             151.9 |
    | Mountain  |              17.4 |
    ...
    +-----------+-------------------+
schemas/ManualRule/id str ManualRule
schemas/ManualRule/properties dict
schemas/ManualRule/properties/groups dict
schemas/ManualRule/properties/groups/description str The list of group names and the corresponding items from the source data
that map to each group name.
schemas/ManualRule/properties/groups/items dict
schemas/ManualRule/properties/groups/items/$ref str ManualRuleGroup
schemas/ManualRule/properties/groups/type str array
schemas/ManualRule/type str object
schemas/ManualRuleGroup dict
schemas/ManualRuleGroup/description str A group name and a list of items from the source data that should be placed
in the group with this name.
schemas/ManualRuleGroup/id str ManualRuleGroup
schemas/ManualRuleGroup/properties dict
schemas/ManualRuleGroup/properties/groupName dict
schemas/ManualRuleGroup/properties/groupName/$ref str ExtendedValue
schemas/ManualRuleGroup/properties/groupName/description str The group name, which must be a string. Each group in a given
ManualRule must have a unique group name.
schemas/ManualRuleGroup/properties/items dict
schemas/ManualRuleGroup/properties/items/description str The items in the source data that should be placed into this group. Each
item may be a string, number, or boolean. Items may appear in at most one
group within a given ManualRule. Items that do not appear in any
group will appear on their own.
schemas/ManualRuleGroup/properties/items/items dict
schemas/ManualRuleGroup/properties/items/items/$ref str ExtendedValue
schemas/ManualRuleGroup/properties/items/type str array
schemas/ManualRuleGroup/type str object
schemas/MatchedDeveloperMetadata dict
schemas/MatchedDeveloperMetadata/description str A developer metadata entry and the data filters specified in the original
request that matched it.
schemas/MatchedDeveloperMetadata/id str MatchedDeveloperMetadata
schemas/MatchedDeveloperMetadata/properties dict
schemas/MatchedDeveloperMetadata/properties/dataFilters dict
schemas/MatchedDeveloperMetadata/properties/dataFilters/description str All filters matching the returned developer metadata.
schemas/MatchedDeveloperMetadata/properties/dataFilters/items dict
schemas/MatchedDeveloperMetadata/properties/dataFilters/items/$ref str DataFilter
schemas/MatchedDeveloperMetadata/properties/dataFilters/type str array
schemas/MatchedDeveloperMetadata/properties/developerMetadata dict
schemas/MatchedDeveloperMetadata/properties/developerMetadata/$ref str DeveloperMetadata
schemas/MatchedDeveloperMetadata/properties/developerMetadata/description str The developer metadata matching the specified filters.
schemas/MatchedDeveloperMetadata/type str object
schemas/MatchedValueRange dict
schemas/MatchedValueRange/description str A value range that was matched by one or more data filers.
schemas/MatchedValueRange/id str MatchedValueRange
schemas/MatchedValueRange/properties dict
schemas/MatchedValueRange/properties/dataFilters dict
schemas/MatchedValueRange/properties/dataFilters/description str The DataFilters from the request that matched the range of
values.
schemas/MatchedValueRange/properties/dataFilters/items dict
schemas/MatchedValueRange/properties/dataFilters/items/$ref str DataFilter
schemas/MatchedValueRange/properties/dataFilters/type str array
schemas/MatchedValueRange/properties/valueRange dict
schemas/MatchedValueRange/properties/valueRange/$ref str ValueRange
schemas/MatchedValueRange/properties/valueRange/description str The values matched by the DataFilter.
schemas/MatchedValueRange/type str object
schemas/MergeCellsRequest dict
schemas/MergeCellsRequest/description str Merges all cells in the range.
schemas/MergeCellsRequest/id str MergeCellsRequest
schemas/MergeCellsRequest/properties dict
schemas/MergeCellsRequest/properties/mergeType dict
schemas/MergeCellsRequest/properties/mergeType/description str How the cells should be merged.
schemas/MergeCellsRequest/properties/mergeType/enum list
schemas/MergeCellsRequest/properties/mergeType/enum/[] str MERGE_ALL
schemas/MergeCellsRequest/properties/mergeType/enumDescriptions list
schemas/MergeCellsRequest/properties/mergeType/enumDescriptions/[] str Create a single merge from the range
schemas/MergeCellsRequest/properties/mergeType/type str string
schemas/MergeCellsRequest/properties/range dict
schemas/MergeCellsRequest/properties/range/$ref str GridRange
schemas/MergeCellsRequest/properties/range/description str The range of cells to merge.
schemas/MergeCellsRequest/type str object
schemas/MoveDimensionRequest dict
schemas/MoveDimensionRequest/description str Moves one or more rows or columns.
schemas/MoveDimensionRequest/id str MoveDimensionRequest
schemas/MoveDimensionRequest/properties dict
schemas/MoveDimensionRequest/properties/destinationIndex dict
schemas/MoveDimensionRequest/properties/destinationIndex/description str The zero-based start index of where to move the source data to,
based on the coordinates *before* the source data is removed
from the grid.  Existing data will be shifted down or right
(depending on the dimension) to make room for the moved dimensions.
The source dimensions are removed from the grid, so the
the data may end up in a different index than specified.

For example, given `A1..A5` of `0, 1, 2, 3, 4` and wanting to move
`"1"` and `"2"` to between `"3"` and `"4"`, the source would be
`ROWS [1..3)`,and the destination index would be `"4"`
(the zero-based index of row 5).
The end result would be `A1..A5` of `0, 3, 1, 2, 4`.
schemas/MoveDimensionRequest/properties/destinationIndex/format str int32
schemas/MoveDimensionRequest/properties/destinationIndex/type str integer
schemas/MoveDimensionRequest/properties/source dict
schemas/MoveDimensionRequest/properties/source/$ref str DimensionRange
schemas/MoveDimensionRequest/properties/source/description str The source dimensions to move.
schemas/MoveDimensionRequest/type str object
schemas/NamedRange dict
schemas/NamedRange/description str A named range.
schemas/NamedRange/id str NamedRange
schemas/NamedRange/properties dict
schemas/NamedRange/properties/name dict
schemas/NamedRange/properties/name/description str The name of the named range.
schemas/NamedRange/properties/name/type str string
schemas/NamedRange/properties/namedRangeId dict
schemas/NamedRange/properties/namedRangeId/description str The ID of the named range.
schemas/NamedRange/properties/namedRangeId/type str string
schemas/NamedRange/properties/range dict
schemas/NamedRange/properties/range/$ref str GridRange
schemas/NamedRange/properties/range/description str The range this represents.
schemas/NamedRange/type str object
schemas/NumberFormat dict
schemas/NumberFormat/description str The number format of a cell.
schemas/NumberFormat/id str NumberFormat
schemas/NumberFormat/properties dict
schemas/NumberFormat/properties/pattern dict
schemas/NumberFormat/properties/pattern/description str Pattern string used for formatting.  If not set, a default pattern based on
the user's locale will be used if necessary for the given type.
See the [Date and Number Formats guide](/sheets/api/guides/formats) for more
information about the supported patterns.
schemas/NumberFormat/properties/pattern/type str string
schemas/NumberFormat/properties/type dict
schemas/NumberFormat/properties/type/description str The type of the number format.
When writing, this field must be set.
schemas/NumberFormat/properties/type/enum list
schemas/NumberFormat/properties/type/enum/[] str NUMBER_FORMAT_TYPE_UNSPECIFIED
schemas/NumberFormat/properties/type/enumDescriptions list
schemas/NumberFormat/properties/type/enumDescriptions/[] str The number format is not specified
and is based on the contents of the cell.
Do not explicitly use this.
schemas/NumberFormat/properties/type/type str string
schemas/NumberFormat/type str object
schemas/OrgChartSpec dict
schemas/OrgChartSpec/description str An <a href="/chart/interactive/docs/gallery/orgchart">org chart</a>.
Org charts require a unique set of labels in labels and may
optionally include parent_labels and tooltips.
parent_labels contain, for each node, the label identifying the parent
node.  tooltips contain, for each node, an optional tooltip.

For example, to describe an OrgChart with Alice as the CEO, Bob as the
President (reporting to Alice) and Cathy as VP of Sales (also reporting to
Alice), have labels contain "Alice", "Bob", "Cathy",
parent_labels contain "", "Alice", "Alice" and tooltips contain
"CEO", "President", "VP Sales".
schemas/OrgChartSpec/id str OrgChartSpec
schemas/OrgChartSpec/properties dict
schemas/OrgChartSpec/properties/labels dict
schemas/OrgChartSpec/properties/labels/$ref str ChartData
schemas/OrgChartSpec/properties/labels/description str The data containing the labels for all the nodes in the chart.  Labels
must be unique.
schemas/OrgChartSpec/properties/nodeColor dict
schemas/OrgChartSpec/properties/nodeColor/$ref str Color
schemas/OrgChartSpec/properties/nodeColor/description str The color of the org chart nodes.
schemas/OrgChartSpec/properties/nodeSize dict
schemas/OrgChartSpec/properties/nodeSize/description str The size of the org chart nodes.
schemas/OrgChartSpec/properties/nodeSize/enum list
schemas/OrgChartSpec/properties/nodeSize/enum/[] str ORG_CHART_LABEL_SIZE_UNSPECIFIED
schemas/OrgChartSpec/properties/nodeSize/enumDescriptions list
schemas/OrgChartSpec/properties/nodeSize/enumDescriptions/[] str Default value, do not use.
schemas/OrgChartSpec/properties/nodeSize/type str string
schemas/OrgChartSpec/properties/parentLabels dict
schemas/OrgChartSpec/properties/parentLabels/$ref str ChartData
schemas/OrgChartSpec/properties/parentLabels/description str The data containing the label of the parent for the corresponding node.
A blank value indicates that the node has no parent and is a top-level
node.
This field is optional.
schemas/OrgChartSpec/properties/selectedNodeColor dict
schemas/OrgChartSpec/properties/selectedNodeColor/$ref str Color
schemas/OrgChartSpec/properties/selectedNodeColor/description str The color of the selected org chart nodes.
schemas/OrgChartSpec/properties/tooltips dict
schemas/OrgChartSpec/properties/tooltips/$ref str ChartData
schemas/OrgChartSpec/properties/tooltips/description str The data containing the tooltip for the corresponding node.  A blank value
results in no tooltip being displayed for the node.
This field is optional.
schemas/OrgChartSpec/type str object
schemas/OverlayPosition dict
schemas/OverlayPosition/description str The location an object is overlaid on top of a grid.
schemas/OverlayPosition/id str OverlayPosition
schemas/OverlayPosition/properties dict
schemas/OverlayPosition/properties/anchorCell dict
schemas/OverlayPosition/properties/anchorCell/$ref str GridCoordinate
schemas/OverlayPosition/properties/anchorCell/description str The cell the object is anchored to.
schemas/OverlayPosition/properties/heightPixels dict
schemas/OverlayPosition/properties/heightPixels/description str The height of the object, in pixels. Defaults to 371.
schemas/OverlayPosition/properties/heightPixels/format str int32
schemas/OverlayPosition/properties/heightPixels/type str integer
schemas/OverlayPosition/properties/offsetXPixels dict
schemas/OverlayPosition/properties/offsetXPixels/description str The horizontal offset, in pixels, that the object is offset
from the anchor cell.
schemas/OverlayPosition/properties/offsetXPixels/format str int32
schemas/OverlayPosition/properties/offsetXPixels/type str integer
schemas/OverlayPosition/properties/offsetYPixels dict
schemas/OverlayPosition/properties/offsetYPixels/description str The vertical offset, in pixels, that the object is offset
from the anchor cell.
schemas/OverlayPosition/properties/offsetYPixels/format str int32
schemas/OverlayPosition/properties/offsetYPixels/type str integer
schemas/OverlayPosition/properties/widthPixels dict
schemas/OverlayPosition/properties/widthPixels/description str The width of the object, in pixels. Defaults to 600.
schemas/OverlayPosition/properties/widthPixels/format str int32
schemas/OverlayPosition/properties/widthPixels/type str integer
schemas/OverlayPosition/type str object
schemas/Padding dict
schemas/Padding/description str The amount of padding around the cell, in pixels.
When updating padding, every field must be specified.
schemas/Padding/id str Padding
schemas/Padding/properties dict
schemas/Padding/properties/bottom dict
schemas/Padding/properties/bottom/description str The bottom padding of the cell.
schemas/Padding/properties/bottom/format str int32
schemas/Padding/properties/bottom/type str integer
schemas/Padding/properties/left dict
schemas/Padding/properties/left/description str The left padding of the cell.
schemas/Padding/properties/left/format str int32
schemas/Padding/properties/left/type str integer
schemas/Padding/properties/right dict
schemas/Padding/properties/right/description str The right padding of the cell.
schemas/Padding/properties/right/format str int32
schemas/Padding/properties/right/type str integer
schemas/Padding/properties/top dict
schemas/Padding/properties/top/description str The top padding of the cell.
schemas/Padding/properties/top/format str int32
schemas/Padding/properties/top/type str integer
schemas/Padding/type str object
schemas/PasteDataRequest dict
schemas/PasteDataRequest/description str Inserts data into the spreadsheet starting at the specified coordinate.
schemas/PasteDataRequest/id str PasteDataRequest
schemas/PasteDataRequest/properties dict
schemas/PasteDataRequest/properties/coordinate dict
schemas/PasteDataRequest/properties/coordinate/$ref str GridCoordinate
schemas/PasteDataRequest/properties/coordinate/description str The coordinate at which the data should start being inserted.
schemas/PasteDataRequest/properties/data dict
schemas/PasteDataRequest/properties/data/description str The data to insert.
schemas/PasteDataRequest/properties/data/type str string
schemas/PasteDataRequest/properties/delimiter dict
schemas/PasteDataRequest/properties/delimiter/description str The delimiter in the data.
schemas/PasteDataRequest/properties/delimiter/type str string
schemas/PasteDataRequest/properties/html dict
schemas/PasteDataRequest/properties/html/description str True if the data is HTML.
schemas/PasteDataRequest/properties/html/type str boolean
schemas/PasteDataRequest/properties/type dict
schemas/PasteDataRequest/properties/type/description str How the data should be pasted.
schemas/PasteDataRequest/properties/type/enum list
schemas/PasteDataRequest/properties/type/enum/[] str PASTE_NORMAL
schemas/PasteDataRequest/properties/type/enumDescriptions list
schemas/PasteDataRequest/properties/type/enumDescriptions/[] str Paste values, formulas, formats, and merges.
schemas/PasteDataRequest/properties/type/type str string
schemas/PasteDataRequest/type str object
schemas/PieChartSpec dict
schemas/PieChartSpec/description str A <a href="/chart/interactive/docs/gallery/piechart">pie chart</a>.
schemas/PieChartSpec/id str PieChartSpec
schemas/PieChartSpec/properties dict
schemas/PieChartSpec/properties/domain dict
schemas/PieChartSpec/properties/domain/$ref str ChartData
schemas/PieChartSpec/properties/domain/description str The data that covers the domain of the pie chart.
schemas/PieChartSpec/properties/legendPosition dict
schemas/PieChartSpec/properties/legendPosition/description str Where the legend of the pie chart should be drawn.
schemas/PieChartSpec/properties/legendPosition/enum list
schemas/PieChartSpec/properties/legendPosition/enum/[] str PIE_CHART_LEGEND_POSITION_UNSPECIFIED
schemas/PieChartSpec/properties/legendPosition/enumDescriptions list
schemas/PieChartSpec/properties/legendPosition/enumDescriptions/[] str Default value, do not use.
schemas/PieChartSpec/properties/legendPosition/type str string
schemas/PieChartSpec/properties/pieHole dict
schemas/PieChartSpec/properties/pieHole/description str The size of the hole in the pie chart.
schemas/PieChartSpec/properties/pieHole/format str double
schemas/PieChartSpec/properties/pieHole/type str number
schemas/PieChartSpec/properties/series dict
schemas/PieChartSpec/properties/series/$ref str ChartData
schemas/PieChartSpec/properties/series/description str The data that covers the one and only series of the pie chart.
schemas/PieChartSpec/properties/threeDimensional dict
schemas/PieChartSpec/properties/threeDimensional/description str True if the pie is three dimensional.
schemas/PieChartSpec/properties/threeDimensional/type str boolean
schemas/PieChartSpec/type str object
schemas/PivotFilterCriteria dict
schemas/PivotFilterCriteria/description str Criteria for showing/hiding rows in a pivot table.
schemas/PivotFilterCriteria/id str PivotFilterCriteria
schemas/PivotFilterCriteria/properties dict
schemas/PivotFilterCriteria/properties/visibleValues dict
schemas/PivotFilterCriteria/properties/visibleValues/description str Values that should be included.  Values not listed here are excluded.
schemas/PivotFilterCriteria/properties/visibleValues/items dict
schemas/PivotFilterCriteria/properties/visibleValues/items/type str string
schemas/PivotFilterCriteria/properties/visibleValues/type str array
schemas/PivotFilterCriteria/type str object
schemas/PivotGroup dict
schemas/PivotGroup/description str A single grouping (either row or column) in a pivot table.
schemas/PivotGroup/id str PivotGroup
schemas/PivotGroup/properties dict
schemas/PivotGroup/properties/groupRule dict
schemas/PivotGroup/properties/groupRule/$ref str PivotGroupRule
schemas/PivotGroup/properties/groupRule/description str The group rule to apply to this row/column group.
schemas/PivotGroup/properties/label dict
schemas/PivotGroup/properties/label/description str The labels to use for the row/column groups which can be customized. For
example, in the following pivot table, the row label is `Region` (which
could be renamed to `State`) and the column label is `Product` (which
could be renamed `Item`). Pivot tables created before December 2017 do
not have header labels. If you'd like to add header labels to an existing
pivot table, please delete the existing pivot table and then create a new
pivot table with same parameters.

    +--------------+---------+-------+
    | SUM of Units | Product |       |
    | Region       | Pen     | Paper |
    +--------------+---------+-------+
    | New York     |     345 |    98 |
    | Oregon       |     234 |   123 |
    | Tennessee    |     531 |   415 |
    +--------------+---------+-------+
    | Grand Total  |    1110 |   636 |
    +--------------+---------+-------+
schemas/PivotGroup/properties/label/type str string
schemas/PivotGroup/properties/repeatHeadings dict
schemas/PivotGroup/properties/repeatHeadings/description str True if the headings in this pivot group should be repeated.
This is only valid for row groupings and is ignored by columns.

By default, we minimize repitition of headings by not showing higher
level headings where they are the same. For example, even though the
third row below corresponds to "Q1 Mar", "Q1" is not shown because
it is redundant with previous rows. Setting repeat_headings to true
would cause "Q1" to be repeated for "Feb" and "Mar".

    +--------------+
    | Q1     | Jan |
    |        | Feb |
    |        | Mar |
    +--------+-----+
    | Q1 Total     |
    +--------------+
schemas/PivotGroup/properties/repeatHeadings/type str boolean
schemas/PivotGroup/properties/showTotals dict
schemas/PivotGroup/properties/showTotals/description str True if the pivot table should include the totals for this grouping.
schemas/PivotGroup/properties/showTotals/type str boolean
schemas/PivotGroup/properties/sortOrder dict
schemas/PivotGroup/properties/sortOrder/description str The order the values in this group should be sorted.
schemas/PivotGroup/properties/sortOrder/enum list
schemas/PivotGroup/properties/sortOrder/enum/[] str SORT_ORDER_UNSPECIFIED
schemas/PivotGroup/properties/sortOrder/enumDescriptions list
schemas/PivotGroup/properties/sortOrder/enumDescriptions/[] str Default value, do not use this.
schemas/PivotGroup/properties/sortOrder/type str string
schemas/PivotGroup/properties/sourceColumnOffset dict
schemas/PivotGroup/properties/sourceColumnOffset/description str The column offset of the source range that this grouping is based on.

For example, if the source was `C10:E15`, a `sourceColumnOffset` of `0`
means this group refers to column `C`, whereas the offset `1` would refer
to column `D`.
schemas/PivotGroup/properties/sourceColumnOffset/format str int32
schemas/PivotGroup/properties/sourceColumnOffset/type str integer
schemas/PivotGroup/properties/valueBucket dict
schemas/PivotGroup/properties/valueBucket/$ref str PivotGroupSortValueBucket
schemas/PivotGroup/properties/valueBucket/description str The bucket of the opposite pivot group to sort by.
If not specified, sorting is alphabetical by this group's values.
schemas/PivotGroup/properties/valueMetadata dict
schemas/PivotGroup/properties/valueMetadata/description str Metadata about values in the grouping.
schemas/PivotGroup/properties/valueMetadata/items dict
schemas/PivotGroup/properties/valueMetadata/items/$ref str PivotGroupValueMetadata
schemas/PivotGroup/properties/valueMetadata/type str array
schemas/PivotGroup/type str object
schemas/PivotGroupRule dict
schemas/PivotGroupRule/description str An optional setting on a PivotGroup that defines buckets for the values
in the source data column rather than breaking out each individual value.
Only one PivotGroup with a group rule may be added for each column in
the source data, though on any given column you may add both a
PivotGroup that has a rule and a PivotGroup that does not.
schemas/PivotGroupRule/id str PivotGroupRule
schemas/PivotGroupRule/properties dict
schemas/PivotGroupRule/properties/dateTimeRule dict
schemas/PivotGroupRule/properties/dateTimeRule/$ref str DateTimeRule
schemas/PivotGroupRule/properties/dateTimeRule/description str A DateTimeRule.
schemas/PivotGroupRule/properties/histogramRule dict
schemas/PivotGroupRule/properties/histogramRule/$ref str HistogramRule
schemas/PivotGroupRule/properties/histogramRule/description str A HistogramRule.
schemas/PivotGroupRule/properties/manualRule dict
schemas/PivotGroupRule/properties/manualRule/$ref str ManualRule
schemas/PivotGroupRule/properties/manualRule/description str A ManualRule.
schemas/PivotGroupRule/type str object
schemas/PivotGroupSortValueBucket dict
schemas/PivotGroupSortValueBucket/description str Information about which values in a pivot group should be used for sorting.
schemas/PivotGroupSortValueBucket/id str PivotGroupSortValueBucket
schemas/PivotGroupSortValueBucket/properties dict
schemas/PivotGroupSortValueBucket/properties/buckets dict
schemas/PivotGroupSortValueBucket/properties/buckets/description str Determines the bucket from which values are chosen to sort.

For example, in a pivot table with one row group & two column groups,
the row group can list up to two values. The first value corresponds
to a value within the first column group, and the second value
corresponds to a value in the second column group.  If no values
are listed, this would indicate that the row should be sorted according
to the "Grand Total" over the column groups. If a single value is listed,
this would correspond to using the "Total" of that bucket.
schemas/PivotGroupSortValueBucket/properties/buckets/items dict
schemas/PivotGroupSortValueBucket/properties/buckets/items/$ref str ExtendedValue
schemas/PivotGroupSortValueBucket/properties/buckets/type str array
schemas/PivotGroupSortValueBucket/properties/valuesIndex dict
schemas/PivotGroupSortValueBucket/properties/valuesIndex/description str The offset in the PivotTable.values list which the values in this
grouping should be sorted by.
schemas/PivotGroupSortValueBucket/properties/valuesIndex/format str int32
schemas/PivotGroupSortValueBucket/properties/valuesIndex/type str integer
schemas/PivotGroupSortValueBucket/type str object
schemas/PivotGroupValueMetadata dict
schemas/PivotGroupValueMetadata/description str Metadata about a value in a pivot grouping.
schemas/PivotGroupValueMetadata/id str PivotGroupValueMetadata
schemas/PivotGroupValueMetadata/properties dict
schemas/PivotGroupValueMetadata/properties/collapsed dict
schemas/PivotGroupValueMetadata/properties/collapsed/description str True if the data corresponding to the value is collapsed.
schemas/PivotGroupValueMetadata/properties/collapsed/type str boolean
schemas/PivotGroupValueMetadata/properties/value dict
schemas/PivotGroupValueMetadata/properties/value/$ref str ExtendedValue
schemas/PivotGroupValueMetadata/properties/value/description str The calculated value the metadata corresponds to.
(Note that formulaValue is not valid,
 because the values will be calculated.)
schemas/PivotGroupValueMetadata/type str object
schemas/PivotTable dict
schemas/PivotTable/description str A pivot table.
schemas/PivotTable/id str PivotTable
schemas/PivotTable/properties dict
schemas/PivotTable/properties/columns dict
schemas/PivotTable/properties/columns/description str Each column grouping in the pivot table.
schemas/PivotTable/properties/columns/items dict
schemas/PivotTable/properties/columns/items/$ref str PivotGroup
schemas/PivotTable/properties/columns/type str array
schemas/PivotTable/properties/criteria dict
schemas/PivotTable/properties/criteria/additionalProperties dict
schemas/PivotTable/properties/criteria/additionalProperties/$ref str PivotFilterCriteria
schemas/PivotTable/properties/criteria/description str An optional mapping of filters per source column offset.

The filters are applied before aggregating data into the pivot table.
The map's key is the column offset of the source range that you want to
filter, and the value is the criteria for that column.

For example, if the source was `C10:E15`, a key of `0` will have the filter
for column `C`, whereas the key `1` is for column `D`.
schemas/PivotTable/properties/criteria/type str object
schemas/PivotTable/properties/rows dict
schemas/PivotTable/properties/rows/description str Each row grouping in the pivot table.
schemas/PivotTable/properties/rows/items dict
schemas/PivotTable/properties/rows/items/$ref str PivotGroup
schemas/PivotTable/properties/rows/type str array
schemas/PivotTable/properties/source dict
schemas/PivotTable/properties/source/$ref str GridRange
schemas/PivotTable/properties/source/description str The range the pivot table is reading data from.
schemas/PivotTable/properties/valueLayout dict
schemas/PivotTable/properties/valueLayout/description str Whether values should be listed horizontally (as columns)
or vertically (as rows).
schemas/PivotTable/properties/valueLayout/enum list
schemas/PivotTable/properties/valueLayout/enum/[] str HORIZONTAL
schemas/PivotTable/properties/valueLayout/enumDescriptions list
schemas/PivotTable/properties/valueLayout/enumDescriptions/[] str Values are laid out horizontally (as columns).
schemas/PivotTable/properties/valueLayout/type str string
schemas/PivotTable/properties/values dict
schemas/PivotTable/properties/values/description str A list of values to include in the pivot table.
schemas/PivotTable/properties/values/items dict
schemas/PivotTable/properties/values/items/$ref str PivotValue
schemas/PivotTable/properties/values/type str array
schemas/PivotTable/type str object
schemas/PivotValue dict
schemas/PivotValue/description str The definition of how a value in a pivot table should be calculated.
schemas/PivotValue/id str PivotValue
schemas/PivotValue/properties dict
schemas/PivotValue/properties/calculatedDisplayType dict
schemas/PivotValue/properties/calculatedDisplayType/description str If specified, indicates that pivot values should be displayed as
the result of a calculation with another pivot value. For example, if
calculated_display_type is specified as PERCENT_OF_GRAND_TOTAL, all the
pivot values are displayed as the percentage of the grand total. In
the Sheets UI, this is referred to as "Show As" in the value section of a
pivot table.
schemas/PivotValue/properties/calculatedDisplayType/enum list
schemas/PivotValue/properties/calculatedDisplayType/enum/[] str PIVOT_VALUE_CALCULATED_DISPLAY_TYPE_UNSPECIFIED
schemas/PivotValue/properties/calculatedDisplayType/enumDescriptions list
schemas/PivotValue/properties/calculatedDisplayType/enumDescriptions/[] str Default value, do not use.
schemas/PivotValue/properties/calculatedDisplayType/type str string
schemas/PivotValue/properties/formula dict
schemas/PivotValue/properties/formula/description str A custom formula to calculate the value.  The formula must start
with an `=` character.
schemas/PivotValue/properties/formula/type str string
schemas/PivotValue/properties/name dict
schemas/PivotValue/properties/name/description str A name to use for the value.
schemas/PivotValue/properties/name/type str string
schemas/PivotValue/properties/sourceColumnOffset dict
schemas/PivotValue/properties/sourceColumnOffset/description str The column offset of the source range that this value reads from.

For example, if the source was `C10:E15`, a `sourceColumnOffset` of `0`
means this value refers to column `C`, whereas the offset `1` would
refer to column `D`.
schemas/PivotValue/properties/sourceColumnOffset/format str int32
schemas/PivotValue/properties/sourceColumnOffset/type str integer
schemas/PivotValue/properties/summarizeFunction dict
schemas/PivotValue/properties/summarizeFunction/description str A function to summarize the value.
If formula is set, the only supported values are
SUM and
CUSTOM.
If sourceColumnOffset is set, then `CUSTOM`
is not supported.
schemas/PivotValue/properties/summarizeFunction/enum list
schemas/PivotValue/properties/summarizeFunction/enum/[] str PIVOT_STANDARD_VALUE_FUNCTION_UNSPECIFIED
schemas/PivotValue/properties/summarizeFunction/enumDescriptions list
schemas/PivotValue/properties/summarizeFunction/enumDescriptions/[] str The default, do not use.
schemas/PivotValue/properties/summarizeFunction/type str string
schemas/PivotValue/type str object
schemas/ProtectedRange dict
schemas/ProtectedRange/description str A protected range.
schemas/ProtectedRange/id str ProtectedRange
schemas/ProtectedRange/properties dict
schemas/ProtectedRange/properties/description dict
schemas/ProtectedRange/properties/description/description str The description of this protected range.
schemas/ProtectedRange/properties/description/type str string
schemas/ProtectedRange/properties/editors dict
schemas/ProtectedRange/properties/editors/$ref str Editors
schemas/ProtectedRange/properties/editors/description str The users and groups with edit access to the protected range.
This field is only visible to users with edit access to the protected
range and the document.
Editors are not supported with warning_only protection.
schemas/ProtectedRange/properties/namedRangeId dict
schemas/ProtectedRange/properties/namedRangeId/description str The named range this protected range is backed by, if any.

When writing, only one of range or named_range_id
may be set.
schemas/ProtectedRange/properties/namedRangeId/type str string
schemas/ProtectedRange/properties/protectedRangeId dict
schemas/ProtectedRange/properties/protectedRangeId/description str The ID of the protected range.
This field is read-only.
schemas/ProtectedRange/properties/protectedRangeId/format str int32
schemas/ProtectedRange/properties/protectedRangeId/type str integer
schemas/ProtectedRange/properties/range dict
schemas/ProtectedRange/properties/range/$ref str GridRange
schemas/ProtectedRange/properties/range/description str The range that is being protected.
The range may be fully unbounded, in which case this is considered
a protected sheet.

When writing, only one of range or named_range_id
may be set.
schemas/ProtectedRange/properties/requestingUserCanEdit dict
schemas/ProtectedRange/properties/requestingUserCanEdit/description str True if the user who requested this protected range can edit the
protected area.
This field is read-only.
schemas/ProtectedRange/properties/requestingUserCanEdit/type str boolean
schemas/ProtectedRange/properties/unprotectedRanges dict
schemas/ProtectedRange/properties/unprotectedRanges/description str The list of unprotected ranges within a protected sheet.
Unprotected ranges are only supported on protected sheets.
schemas/ProtectedRange/properties/unprotectedRanges/items dict
schemas/ProtectedRange/properties/unprotectedRanges/items/$ref str GridRange
schemas/ProtectedRange/properties/unprotectedRanges/type str array
schemas/ProtectedRange/properties/warningOnly dict
schemas/ProtectedRange/properties/warningOnly/description str True if this protected range will show a warning when editing.
Warning-based protection means that every user can edit data in the
protected range, except editing will prompt a warning asking the user
to confirm the edit.

When writing: if this field is true, then editors is ignored.
Additionally, if this field is changed from true to false and the
`editors` field is not set (nor included in the field mask), then
the editors will be set to all the editors in the document.
schemas/ProtectedRange/properties/warningOnly/type str boolean
schemas/ProtectedRange/type str object
schemas/RandomizeRangeRequest dict
schemas/RandomizeRangeRequest/description str Randomizes the order of the rows in a range.
schemas/RandomizeRangeRequest/id str RandomizeRangeRequest
schemas/RandomizeRangeRequest/properties dict
schemas/RandomizeRangeRequest/properties/range dict
schemas/RandomizeRangeRequest/properties/range/$ref str GridRange
schemas/RandomizeRangeRequest/properties/range/description str The range to randomize.
schemas/RandomizeRangeRequest/type str object
schemas/RepeatCellRequest dict
schemas/RepeatCellRequest/description str Updates all cells in the range to the values in the given Cell object.
Only the fields listed in the fields field are updated; others are
unchanged.

If writing a cell with a formula, the formula's ranges will automatically
increment for each field in the range.
For example, if writing a cell with formula `=A1` into range B2:C4,
B2 would be `=A1`, B3 would be `=A2`, B4 would be `=A3`,
C2 would be `=B1`, C3 would be `=B2`, C4 would be `=B3`.

To keep the formula's ranges static, use the `$` indicator.
For example, use the formula `=$A$1` to prevent both the row and the
column from incrementing.
schemas/RepeatCellRequest/id str RepeatCellRequest
schemas/RepeatCellRequest/properties dict
schemas/RepeatCellRequest/properties/cell dict
schemas/RepeatCellRequest/properties/cell/$ref str CellData
schemas/RepeatCellRequest/properties/cell/description str The data to write.
schemas/RepeatCellRequest/properties/fields dict
schemas/RepeatCellRequest/properties/fields/description str The fields that should be updated.  At least one field must be specified.
The root `cell` is implied and should not be specified.
A single `"*"` can be used as short-hand for listing every field.
schemas/RepeatCellRequest/properties/fields/format str google-fieldmask
schemas/RepeatCellRequest/properties/fields/type str string
schemas/RepeatCellRequest/properties/range dict
schemas/RepeatCellRequest/properties/range/$ref str GridRange
schemas/RepeatCellRequest/properties/range/description str The range to repeat the cell in.
schemas/RepeatCellRequest/type str object
schemas/Request dict
schemas/Request/description str A single kind of update to apply to a spreadsheet.
schemas/Request/id str Request
schemas/Request/properties dict
schemas/Request/properties/addBanding dict
schemas/Request/properties/addBanding/$ref str AddBandingRequest
schemas/Request/properties/addBanding/description str Adds a new banded range
schemas/Request/properties/addChart dict
schemas/Request/properties/addChart/$ref str AddChartRequest
schemas/Request/properties/addChart/description str Adds a chart.
schemas/Request/properties/addConditionalFormatRule dict
schemas/Request/properties/addConditionalFormatRule/$ref str AddConditionalFormatRuleRequest
schemas/Request/properties/addConditionalFormatRule/description str Adds a new conditional format rule.
schemas/Request/properties/addDimensionGroup dict
schemas/Request/properties/addDimensionGroup/$ref str AddDimensionGroupRequest
schemas/Request/properties/addDimensionGroup/description str Creates a group over the specified range.
schemas/Request/properties/addFilterView dict
schemas/Request/properties/addFilterView/$ref str AddFilterViewRequest
schemas/Request/properties/addFilterView/description str Adds a filter view.
schemas/Request/properties/addNamedRange dict
schemas/Request/properties/addNamedRange/$ref str AddNamedRangeRequest
schemas/Request/properties/addNamedRange/description str Adds a named range.
schemas/Request/properties/addProtectedRange dict
schemas/Request/properties/addProtectedRange/$ref str AddProtectedRangeRequest
schemas/Request/properties/addProtectedRange/description str Adds a protected range.
schemas/Request/properties/addSheet dict
schemas/Request/properties/addSheet/$ref str AddSheetRequest
schemas/Request/properties/addSheet/description str Adds a sheet.
schemas/Request/properties/appendCells dict
schemas/Request/properties/appendCells/$ref str AppendCellsRequest
schemas/Request/properties/appendCells/description str Appends cells after the last row with data in a sheet.
schemas/Request/properties/appendDimension dict
schemas/Request/properties/appendDimension/$ref str AppendDimensionRequest
schemas/Request/properties/appendDimension/description str Appends dimensions to the end of a sheet.
schemas/Request/properties/autoFill dict
schemas/Request/properties/autoFill/$ref str AutoFillRequest
schemas/Request/properties/autoFill/description str Automatically fills in more data based on existing data.
schemas/Request/properties/autoResizeDimensions dict
schemas/Request/properties/autoResizeDimensions/$ref str AutoResizeDimensionsRequest
schemas/Request/properties/autoResizeDimensions/description str Automatically resizes one or more dimensions based on the contents
of the cells in that dimension.
schemas/Request/properties/clearBasicFilter dict
schemas/Request/properties/clearBasicFilter/$ref str ClearBasicFilterRequest
schemas/Request/properties/clearBasicFilter/description str Clears the basic filter on a sheet.
schemas/Request/properties/copyPaste dict
schemas/Request/properties/copyPaste/$ref str CopyPasteRequest
schemas/Request/properties/copyPaste/description str Copies data from one area and pastes it to another.
schemas/Request/properties/createDeveloperMetadata dict
schemas/Request/properties/createDeveloperMetadata/$ref str CreateDeveloperMetadataRequest
schemas/Request/properties/createDeveloperMetadata/description str Creates new developer metadata
schemas/Request/properties/cutPaste dict
schemas/Request/properties/cutPaste/$ref str CutPasteRequest
schemas/Request/properties/cutPaste/description str Cuts data from one area and pastes it to another.
schemas/Request/properties/deleteBanding dict
schemas/Request/properties/deleteBanding/$ref str DeleteBandingRequest
schemas/Request/properties/deleteBanding/description str Removes a banded range
schemas/Request/properties/deleteConditionalFormatRule dict
schemas/Request/properties/deleteConditionalFormatRule/$ref str DeleteConditionalFormatRuleRequest
schemas/Request/properties/deleteConditionalFormatRule/description str Deletes an existing conditional format rule.
schemas/Request/properties/deleteDeveloperMetadata dict
schemas/Request/properties/deleteDeveloperMetadata/$ref str DeleteDeveloperMetadataRequest
schemas/Request/properties/deleteDeveloperMetadata/description str Deletes developer metadata
schemas/Request/properties/deleteDimension dict
schemas/Request/properties/deleteDimension/$ref str DeleteDimensionRequest
schemas/Request/properties/deleteDimension/description str Deletes rows or columns in a sheet.
schemas/Request/properties/deleteDimensionGroup dict
schemas/Request/properties/deleteDimensionGroup/$ref str DeleteDimensionGroupRequest
schemas/Request/properties/deleteDimensionGroup/description str Deletes a group over the specified range.
schemas/Request/properties/deleteEmbeddedObject dict
schemas/Request/properties/deleteEmbeddedObject/$ref str DeleteEmbeddedObjectRequest
schemas/Request/properties/deleteEmbeddedObject/description str Deletes an embedded object (e.g, chart, image) in a sheet.
schemas/Request/properties/deleteFilterView dict
schemas/Request/properties/deleteFilterView/$ref str DeleteFilterViewRequest
schemas/Request/properties/deleteFilterView/description str Deletes a filter view from a sheet.
schemas/Request/properties/deleteNamedRange dict
schemas/Request/properties/deleteNamedRange/$ref str DeleteNamedRangeRequest
schemas/Request/properties/deleteNamedRange/description str Deletes a named range.
schemas/Request/properties/deleteProtectedRange dict
schemas/Request/properties/deleteProtectedRange/$ref str DeleteProtectedRangeRequest
schemas/Request/properties/deleteProtectedRange/description str Deletes a protected range.
schemas/Request/properties/deleteRange dict
schemas/Request/properties/deleteRange/$ref str DeleteRangeRequest
schemas/Request/properties/deleteRange/description str Deletes a range of cells from a sheet, shifting the remaining cells.
schemas/Request/properties/deleteSheet dict
schemas/Request/properties/deleteSheet/$ref str DeleteSheetRequest
schemas/Request/properties/deleteSheet/description str Deletes a sheet.
schemas/Request/properties/duplicateFilterView dict
schemas/Request/properties/duplicateFilterView/$ref str DuplicateFilterViewRequest
schemas/Request/properties/duplicateFilterView/description str Duplicates a filter view.
schemas/Request/properties/duplicateSheet dict
schemas/Request/properties/duplicateSheet/$ref str DuplicateSheetRequest
schemas/Request/properties/duplicateSheet/description str Duplicates a sheet.
schemas/Request/properties/findReplace dict
schemas/Request/properties/findReplace/$ref str FindReplaceRequest
schemas/Request/properties/findReplace/description str Finds and replaces occurrences of some text with other text.
schemas/Request/properties/insertDimension dict
schemas/Request/properties/insertDimension/$ref str InsertDimensionRequest
schemas/Request/properties/insertDimension/description str Inserts new rows or columns in a sheet.
schemas/Request/properties/insertRange dict
schemas/Request/properties/insertRange/$ref str InsertRangeRequest
schemas/Request/properties/insertRange/description str Inserts new cells in a sheet, shifting the existing cells.
schemas/Request/properties/mergeCells dict
schemas/Request/properties/mergeCells/$ref str MergeCellsRequest
schemas/Request/properties/mergeCells/description str Merges cells together.
schemas/Request/properties/moveDimension dict
schemas/Request/properties/moveDimension/$ref str MoveDimensionRequest
schemas/Request/properties/moveDimension/description str Moves rows or columns to another location in a sheet.
schemas/Request/properties/pasteData dict
schemas/Request/properties/pasteData/$ref str PasteDataRequest
schemas/Request/properties/pasteData/description str Pastes data (HTML or delimited) into a sheet.
schemas/Request/properties/randomizeRange dict
schemas/Request/properties/randomizeRange/$ref str RandomizeRangeRequest
schemas/Request/properties/randomizeRange/description str Randomizes the order of the rows in a range.
schemas/Request/properties/repeatCell dict
schemas/Request/properties/repeatCell/$ref str RepeatCellRequest
schemas/Request/properties/repeatCell/description str Repeats a single cell across a range.
schemas/Request/properties/setBasicFilter dict
schemas/Request/properties/setBasicFilter/$ref str SetBasicFilterRequest
schemas/Request/properties/setBasicFilter/description str Sets the basic filter on a sheet.
schemas/Request/properties/setDataValidation dict
schemas/Request/properties/setDataValidation/$ref str SetDataValidationRequest
schemas/Request/properties/setDataValidation/description str Sets data validation for one or more cells.
schemas/Request/properties/sortRange dict
schemas/Request/properties/sortRange/$ref str SortRangeRequest
schemas/Request/properties/sortRange/description str Sorts data in a range.
schemas/Request/properties/textToColumns dict
schemas/Request/properties/textToColumns/$ref str TextToColumnsRequest
schemas/Request/properties/textToColumns/description str Converts a column of text into many columns of text.
schemas/Request/properties/unmergeCells dict
schemas/Request/properties/unmergeCells/$ref str UnmergeCellsRequest
schemas/Request/properties/unmergeCells/description str Unmerges merged cells.
schemas/Request/properties/updateBanding dict
schemas/Request/properties/updateBanding/$ref str UpdateBandingRequest
schemas/Request/properties/updateBanding/description str Updates a banded range
schemas/Request/properties/updateBorders dict
schemas/Request/properties/updateBorders/$ref str UpdateBordersRequest
schemas/Request/properties/updateBorders/description str Updates the borders in a range of cells.
schemas/Request/properties/updateCells dict
schemas/Request/properties/updateCells/$ref str UpdateCellsRequest
schemas/Request/properties/updateCells/description str Updates many cells at once.
schemas/Request/properties/updateChartSpec dict
schemas/Request/properties/updateChartSpec/$ref str UpdateChartSpecRequest
schemas/Request/properties/updateChartSpec/description str Updates a chart's specifications.
schemas/Request/properties/updateConditionalFormatRule dict
schemas/Request/properties/updateConditionalFormatRule/$ref str UpdateConditionalFormatRuleRequest
schemas/Request/properties/updateConditionalFormatRule/description str Updates an existing conditional format rule.
schemas/Request/properties/updateDeveloperMetadata dict
schemas/Request/properties/updateDeveloperMetadata/$ref str UpdateDeveloperMetadataRequest
schemas/Request/properties/updateDeveloperMetadata/description str Updates an existing developer metadata entry
schemas/Request/properties/updateDimensionGroup dict
schemas/Request/properties/updateDimensionGroup/$ref str UpdateDimensionGroupRequest
schemas/Request/properties/updateDimensionGroup/description str Updates the state of the specified group.
schemas/Request/properties/updateDimensionProperties dict
schemas/Request/properties/updateDimensionProperties/$ref str UpdateDimensionPropertiesRequest
schemas/Request/properties/updateDimensionProperties/description str Updates dimensions' properties.
schemas/Request/properties/updateEmbeddedObjectPosition dict
schemas/Request/properties/updateEmbeddedObjectPosition/$ref str UpdateEmbeddedObjectPositionRequest
schemas/Request/properties/updateEmbeddedObjectPosition/description str Updates an embedded object's (e.g. chart, image) position.
schemas/Request/properties/updateFilterView dict
schemas/Request/properties/updateFilterView/$ref str UpdateFilterViewRequest
schemas/Request/properties/updateFilterView/description str Updates the properties of a filter view.
schemas/Request/properties/updateNamedRange dict
schemas/Request/properties/updateNamedRange/$ref str UpdateNamedRangeRequest
schemas/Request/properties/updateNamedRange/description str Updates a named range.
schemas/Request/properties/updateProtectedRange dict
schemas/Request/properties/updateProtectedRange/$ref str UpdateProtectedRangeRequest
schemas/Request/properties/updateProtectedRange/description str Updates a protected range.
schemas/Request/properties/updateSheetProperties dict
schemas/Request/properties/updateSheetProperties/$ref str UpdateSheetPropertiesRequest
schemas/Request/properties/updateSheetProperties/description str Updates a sheet's properties.
schemas/Request/properties/updateSpreadsheetProperties dict
schemas/Request/properties/updateSpreadsheetProperties/$ref str UpdateSpreadsheetPropertiesRequest
schemas/Request/properties/updateSpreadsheetProperties/description str Updates the spreadsheet's properties.
schemas/Request/type str object
schemas/Response dict
schemas/Response/description str A single response from an update.
schemas/Response/id str Response
schemas/Response/properties dict
schemas/Response/properties/addBanding dict
schemas/Response/properties/addBanding/$ref str AddBandingResponse
schemas/Response/properties/addBanding/description str A reply from adding a banded range.
schemas/Response/properties/addChart dict
schemas/Response/properties/addChart/$ref str AddChartResponse
schemas/Response/properties/addChart/description str A reply from adding a chart.
schemas/Response/properties/addDimensionGroup dict
schemas/Response/properties/addDimensionGroup/$ref str AddDimensionGroupResponse
schemas/Response/properties/addDimensionGroup/description str A reply from adding a dimension group.
schemas/Response/properties/addFilterView dict
schemas/Response/properties/addFilterView/$ref str AddFilterViewResponse
schemas/Response/properties/addFilterView/description str A reply from adding a filter view.
schemas/Response/properties/addNamedRange dict
schemas/Response/properties/addNamedRange/$ref str AddNamedRangeResponse
schemas/Response/properties/addNamedRange/description str A reply from adding a named range.
schemas/Response/properties/addProtectedRange dict
schemas/Response/properties/addProtectedRange/$ref str AddProtectedRangeResponse
schemas/Response/properties/addProtectedRange/description str A reply from adding a protected range.
schemas/Response/properties/addSheet dict
schemas/Response/properties/addSheet/$ref str AddSheetResponse
schemas/Response/properties/addSheet/description str A reply from adding a sheet.
schemas/Response/properties/createDeveloperMetadata dict
schemas/Response/properties/createDeveloperMetadata/$ref str CreateDeveloperMetadataResponse
schemas/Response/properties/createDeveloperMetadata/description str A reply from creating a developer metadata entry.
schemas/Response/properties/deleteConditionalFormatRule dict
schemas/Response/properties/deleteConditionalFormatRule/$ref str DeleteConditionalFormatRuleResponse
schemas/Response/properties/deleteConditionalFormatRule/description str A reply from deleting a conditional format rule.
schemas/Response/properties/deleteDeveloperMetadata dict
schemas/Response/properties/deleteDeveloperMetadata/$ref str DeleteDeveloperMetadataResponse
schemas/Response/properties/deleteDeveloperMetadata/description str A reply from deleting a developer metadata entry.
schemas/Response/properties/deleteDimensionGroup dict
schemas/Response/properties/deleteDimensionGroup/$ref str DeleteDimensionGroupResponse
schemas/Response/properties/deleteDimensionGroup/description str A reply from deleting a dimension group.
schemas/Response/properties/duplicateFilterView dict
schemas/Response/properties/duplicateFilterView/$ref str DuplicateFilterViewResponse
schemas/Response/properties/duplicateFilterView/description str A reply from duplicating a filter view.
schemas/Response/properties/duplicateSheet dict
schemas/Response/properties/duplicateSheet/$ref str DuplicateSheetResponse
schemas/Response/properties/duplicateSheet/description str A reply from duplicating a sheet.
schemas/Response/properties/findReplace dict
schemas/Response/properties/findReplace/$ref str FindReplaceResponse
schemas/Response/properties/findReplace/description str A reply from doing a find/replace.
schemas/Response/properties/updateConditionalFormatRule dict
schemas/Response/properties/updateConditionalFormatRule/$ref str UpdateConditionalFormatRuleResponse
schemas/Response/properties/updateConditionalFormatRule/description str A reply from updating a conditional format rule.
schemas/Response/properties/updateDeveloperMetadata dict
schemas/Response/properties/updateDeveloperMetadata/$ref str UpdateDeveloperMetadataResponse
schemas/Response/properties/updateDeveloperMetadata/description str A reply from updating a developer metadata entry.
schemas/Response/properties/updateEmbeddedObjectPosition dict
schemas/Response/properties/updateEmbeddedObjectPosition/$ref str UpdateEmbeddedObjectPositionResponse
schemas/Response/properties/updateEmbeddedObjectPosition/description str A reply from updating an embedded object's position.
schemas/Response/type str object
schemas/RowData dict
schemas/RowData/description str Data about each cell in a row.
schemas/RowData/id str RowData
schemas/RowData/properties dict
schemas/RowData/properties/values dict
schemas/RowData/properties/values/description str The values in the row, one per column.
schemas/RowData/properties/values/items dict
schemas/RowData/properties/values/items/$ref str CellData
schemas/RowData/properties/values/type str array
schemas/RowData/type str object
schemas/SearchDeveloperMetadataRequest dict
schemas/SearchDeveloperMetadataRequest/description str A request to retrieve all developer metadata matching the set of specified
criteria.
schemas/SearchDeveloperMetadataRequest/id str SearchDeveloperMetadataRequest
schemas/SearchDeveloperMetadataRequest/properties dict
schemas/SearchDeveloperMetadataRequest/properties/dataFilters dict
schemas/SearchDeveloperMetadataRequest/properties/dataFilters/description str The data filters describing the criteria used to determine which
DeveloperMetadata entries to return.  DeveloperMetadata matching any of the
specified filters will be included in the response.
schemas/SearchDeveloperMetadataRequest/properties/dataFilters/items dict
schemas/SearchDeveloperMetadataRequest/properties/dataFilters/items/$ref str DataFilter
schemas/SearchDeveloperMetadataRequest/properties/dataFilters/type str array
schemas/SearchDeveloperMetadataRequest/type str object
schemas/SearchDeveloperMetadataResponse dict
schemas/SearchDeveloperMetadataResponse/description str A reply to a developer metadata search request.
schemas/SearchDeveloperMetadataResponse/id str SearchDeveloperMetadataResponse
schemas/SearchDeveloperMetadataResponse/properties dict
schemas/SearchDeveloperMetadataResponse/properties/matchedDeveloperMetadata dict
schemas/SearchDeveloperMetadataResponse/properties/matchedDeveloperMetadata/description str The metadata matching the criteria of the search request.
schemas/SearchDeveloperMetadataResponse/properties/matchedDeveloperMetadata/items dict
schemas/SearchDeveloperMetadataResponse/properties/matchedDeveloperMetadata/items/$ref str MatchedDeveloperMetadata
schemas/SearchDeveloperMetadataResponse/properties/matchedDeveloperMetadata/type str array
schemas/SearchDeveloperMetadataResponse/type str object
schemas/SetBasicFilterRequest dict
schemas/SetBasicFilterRequest/description str Sets the basic filter associated with a sheet.
schemas/SetBasicFilterRequest/id str SetBasicFilterRequest
schemas/SetBasicFilterRequest/properties dict
schemas/SetBasicFilterRequest/properties/filter dict
schemas/SetBasicFilterRequest/properties/filter/$ref str BasicFilter
schemas/SetBasicFilterRequest/properties/filter/description str The filter to set.
schemas/SetBasicFilterRequest/type str object
schemas/SetDataValidationRequest dict
schemas/SetDataValidationRequest/description str Sets a data validation rule to every cell in the range.
To clear validation in a range, call this with no rule specified.
schemas/SetDataValidationRequest/id str SetDataValidationRequest
schemas/SetDataValidationRequest/properties dict
schemas/SetDataValidationRequest/properties/range dict
schemas/SetDataValidationRequest/properties/range/$ref str GridRange
schemas/SetDataValidationRequest/properties/range/description str The range the data validation rule should apply to.
schemas/SetDataValidationRequest/properties/rule dict
schemas/SetDataValidationRequest/properties/rule/$ref str DataValidationRule
schemas/SetDataValidationRequest/properties/rule/description str The data validation rule to set on each cell in the range,
or empty to clear the data validation in the range.
schemas/SetDataValidationRequest/type str object
schemas/Sheet dict
schemas/Sheet/description str A sheet in a spreadsheet.
schemas/Sheet/id str Sheet
schemas/Sheet/properties dict
schemas/Sheet/properties/bandedRanges dict
schemas/Sheet/properties/bandedRanges/description str The banded (alternating colors) ranges on this sheet.
schemas/Sheet/properties/bandedRanges/items dict
schemas/Sheet/properties/bandedRanges/items/$ref str BandedRange
schemas/Sheet/properties/bandedRanges/type str array
schemas/Sheet/properties/basicFilter dict
schemas/Sheet/properties/basicFilter/$ref str BasicFilter
schemas/Sheet/properties/basicFilter/description str The filter on this sheet, if any.
schemas/Sheet/properties/charts dict
schemas/Sheet/properties/charts/description str The specifications of every chart on this sheet.
schemas/Sheet/properties/charts/items dict
schemas/Sheet/properties/charts/items/$ref str EmbeddedChart
schemas/Sheet/properties/charts/type str array
schemas/Sheet/properties/columnGroups dict
schemas/Sheet/properties/columnGroups/description str All column groups on this sheet, ordered by increasing range start index,
then by group depth.
schemas/Sheet/properties/columnGroups/items dict
schemas/Sheet/properties/columnGroups/items/$ref str DimensionGroup
schemas/Sheet/properties/columnGroups/type str array
schemas/Sheet/properties/conditionalFormats dict
schemas/Sheet/properties/conditionalFormats/description str The conditional format rules in this sheet.
schemas/Sheet/properties/conditionalFormats/items dict
schemas/Sheet/properties/conditionalFormats/items/$ref str ConditionalFormatRule
schemas/Sheet/properties/conditionalFormats/type str array
schemas/Sheet/properties/data dict
schemas/Sheet/properties/data/description str Data in the grid, if this is a grid sheet.
The number of GridData objects returned is dependent on the number of
ranges requested on this sheet. For example, if this is representing
`Sheet1`, and the spreadsheet was requested with ranges
`Sheet1!A1:C10` and `Sheet1!D15:E20`, then the first GridData will have a
startRow/startColumn of `0`,
while the second one will have `startRow 14` (zero-based row 15),
and `startColumn 3` (zero-based column D).
schemas/Sheet/properties/data/items dict
schemas/Sheet/properties/data/items/$ref str GridData
schemas/Sheet/properties/data/type str array
schemas/Sheet/properties/developerMetadata dict
schemas/Sheet/properties/developerMetadata/description str The developer metadata associated with a sheet.
schemas/Sheet/properties/developerMetadata/items dict
schemas/Sheet/properties/developerMetadata/items/$ref str DeveloperMetadata
schemas/Sheet/properties/developerMetadata/type str array
schemas/Sheet/properties/filterViews dict
schemas/Sheet/properties/filterViews/description str The filter views in this sheet.
schemas/Sheet/properties/filterViews/items dict
schemas/Sheet/properties/filterViews/items/$ref str FilterView
schemas/Sheet/properties/filterViews/type str array
schemas/Sheet/properties/merges dict
schemas/Sheet/properties/merges/description str The ranges that are merged together.
schemas/Sheet/properties/merges/items dict
schemas/Sheet/properties/merges/items/$ref str GridRange
schemas/Sheet/properties/merges/type str array
schemas/Sheet/properties/properties dict
schemas/Sheet/properties/properties/$ref str SheetProperties
schemas/Sheet/properties/properties/description str The properties of the sheet.
schemas/Sheet/properties/protectedRanges dict
schemas/Sheet/properties/protectedRanges/description str The protected ranges in this sheet.
schemas/Sheet/properties/protectedRanges/items dict
schemas/Sheet/properties/protectedRanges/items/$ref str ProtectedRange
schemas/Sheet/properties/protectedRanges/type str array
schemas/Sheet/properties/rowGroups dict
schemas/Sheet/properties/rowGroups/description str All row groups on this sheet, ordered by increasing range start index, then
by group depth.
schemas/Sheet/properties/rowGroups/items dict
schemas/Sheet/properties/rowGroups/items/$ref str DimensionGroup
schemas/Sheet/properties/rowGroups/type str array
schemas/Sheet/type str object
schemas/SheetProperties dict
schemas/SheetProperties/description str Properties of a sheet.
schemas/SheetProperties/id str SheetProperties
schemas/SheetProperties/properties dict
schemas/SheetProperties/properties/gridProperties dict
schemas/SheetProperties/properties/gridProperties/$ref str GridProperties
schemas/SheetProperties/properties/gridProperties/description str Additional properties of the sheet if this sheet is a grid.
(If the sheet is an object sheet, containing a chart or image, then
this field will be absent.)
When writing it is an error to set any grid properties on non-grid sheets.
schemas/SheetProperties/properties/hidden dict
schemas/SheetProperties/properties/hidden/description str True if the sheet is hidden in the UI, false if it's visible.
schemas/SheetProperties/properties/hidden/type str boolean
schemas/SheetProperties/properties/index dict
schemas/SheetProperties/properties/index/description str The index of the sheet within the spreadsheet.
When adding or updating sheet properties, if this field
is excluded then the sheet is added or moved to the end
of the sheet list. When updating sheet indices or inserting
sheets, movement is considered in "before the move" indexes.
For example, if there were 3 sheets (S1, S2, S3) in order to
move S1 ahead of S2 the index would have to be set to 2. A sheet
index update request is ignored if the requested index is
identical to the sheets current index or if the requested new
index is equal to the current sheet index + 1.
schemas/SheetProperties/properties/index/format str int32
schemas/SheetProperties/properties/index/type str integer
schemas/SheetProperties/properties/rightToLeft dict
schemas/SheetProperties/properties/rightToLeft/description str True if the sheet is an RTL sheet instead of an LTR sheet.
schemas/SheetProperties/properties/rightToLeft/type str boolean
schemas/SheetProperties/properties/sheetId dict
schemas/SheetProperties/properties/sheetId/description str The ID of the sheet. Must be non-negative.
This field cannot be changed once set.
schemas/SheetProperties/properties/sheetId/format str int32
schemas/SheetProperties/properties/sheetId/type str integer
schemas/SheetProperties/properties/sheetType dict
schemas/SheetProperties/properties/sheetType/description str The type of sheet. Defaults to GRID.
This field cannot be changed once set.
schemas/SheetProperties/properties/sheetType/enum list
schemas/SheetProperties/properties/sheetType/enum/[] str SHEET_TYPE_UNSPECIFIED
schemas/SheetProperties/properties/sheetType/enumDescriptions list
schemas/SheetProperties/properties/sheetType/enumDescriptions/[] str Default value, do not use.
schemas/SheetProperties/properties/sheetType/type str string
schemas/SheetProperties/properties/tabColor dict
schemas/SheetProperties/properties/tabColor/$ref str Color
schemas/SheetProperties/properties/tabColor/description str The color of the tab in the UI.
schemas/SheetProperties/properties/title dict
schemas/SheetProperties/properties/title/description str The name of the sheet.
schemas/SheetProperties/properties/title/type str string
schemas/SheetProperties/type str object
schemas/SortRangeRequest dict
schemas/SortRangeRequest/description str Sorts data in rows based on a sort order per column.
schemas/SortRangeRequest/id str SortRangeRequest
schemas/SortRangeRequest/properties dict
schemas/SortRangeRequest/properties/range dict
schemas/SortRangeRequest/properties/range/$ref str GridRange
schemas/SortRangeRequest/properties/range/description str The range to sort.
schemas/SortRangeRequest/properties/sortSpecs dict
schemas/SortRangeRequest/properties/sortSpecs/description str The sort order per column. Later specifications are used when values
are equal in the earlier specifications.
schemas/SortRangeRequest/properties/sortSpecs/items dict
schemas/SortRangeRequest/properties/sortSpecs/items/$ref str SortSpec
schemas/SortRangeRequest/properties/sortSpecs/type str array
schemas/SortRangeRequest/type str object
schemas/SortSpec dict
schemas/SortSpec/description str A sort order associated with a specific column or row.
schemas/SortSpec/id str SortSpec
schemas/SortSpec/properties dict
schemas/SortSpec/properties/dimensionIndex dict
schemas/SortSpec/properties/dimensionIndex/description str The dimension the sort should be applied to.
schemas/SortSpec/properties/dimensionIndex/format str int32
schemas/SortSpec/properties/dimensionIndex/type str integer
schemas/SortSpec/properties/sortOrder dict
schemas/SortSpec/properties/sortOrder/description str The order data should be sorted.
schemas/SortSpec/properties/sortOrder/enum list
schemas/SortSpec/properties/sortOrder/enum/[] str SORT_ORDER_UNSPECIFIED
schemas/SortSpec/properties/sortOrder/enumDescriptions list
schemas/SortSpec/properties/sortOrder/enumDescriptions/[] str Default value, do not use this.
schemas/SortSpec/properties/sortOrder/type str string
schemas/SortSpec/type str object
schemas/SourceAndDestination dict
schemas/SourceAndDestination/description str A combination of a source range and how to extend that source.
schemas/SourceAndDestination/id str SourceAndDestination
schemas/SourceAndDestination/properties dict
schemas/SourceAndDestination/properties/dimension dict
schemas/SourceAndDestination/properties/dimension/description str The dimension that data should be filled into.
schemas/SourceAndDestination/properties/dimension/enum list
schemas/SourceAndDestination/properties/dimension/enum/[] str DIMENSION_UNSPECIFIED
schemas/SourceAndDestination/properties/dimension/enumDescriptions list
schemas/SourceAndDestination/properties/dimension/enumDescriptions/[] str The default value, do not use.
schemas/SourceAndDestination/properties/dimension/type str string
schemas/SourceAndDestination/properties/fillLength dict
schemas/SourceAndDestination/properties/fillLength/description str The number of rows or columns that data should be filled into.
Positive numbers expand beyond the last row or last column
of the source.  Negative numbers expand before the first row
or first column of the source.
schemas/SourceAndDestination/properties/fillLength/format str int32
schemas/SourceAndDestination/properties/fillLength/type str integer
schemas/SourceAndDestination/properties/source dict
schemas/SourceAndDestination/properties/source/$ref str GridRange
schemas/SourceAndDestination/properties/source/description str The location of the data to use as the source of the autofill.
schemas/SourceAndDestination/type str object
schemas/Spreadsheet dict
schemas/Spreadsheet/description str Resource that represents a spreadsheet.
schemas/Spreadsheet/id str Spreadsheet
schemas/Spreadsheet/properties dict
schemas/Spreadsheet/properties/developerMetadata dict
schemas/Spreadsheet/properties/developerMetadata/description str The developer metadata associated with a spreadsheet.
schemas/Spreadsheet/properties/developerMetadata/items dict
schemas/Spreadsheet/properties/developerMetadata/items/$ref str DeveloperMetadata
schemas/Spreadsheet/properties/developerMetadata/type str array
schemas/Spreadsheet/properties/namedRanges dict
schemas/Spreadsheet/properties/namedRanges/description str The named ranges defined in a spreadsheet.
schemas/Spreadsheet/properties/namedRanges/items dict
schemas/Spreadsheet/properties/namedRanges/items/$ref str NamedRange
schemas/Spreadsheet/properties/namedRanges/type str array
schemas/Spreadsheet/properties/properties dict
schemas/Spreadsheet/properties/properties/$ref str SpreadsheetProperties
schemas/Spreadsheet/properties/properties/description str Overall properties of a spreadsheet.
schemas/Spreadsheet/properties/sheets dict
schemas/Spreadsheet/properties/sheets/description str The sheets that are part of a spreadsheet.
schemas/Spreadsheet/properties/sheets/items dict
schemas/Spreadsheet/properties/sheets/items/$ref str Sheet
schemas/Spreadsheet/properties/sheets/type str array
schemas/Spreadsheet/properties/spreadsheetId dict
schemas/Spreadsheet/properties/spreadsheetId/description str The ID of the spreadsheet.
This field is read-only.
schemas/Spreadsheet/properties/spreadsheetId/type str string
schemas/Spreadsheet/properties/spreadsheetUrl dict
schemas/Spreadsheet/properties/spreadsheetUrl/description str The url of the spreadsheet.
This field is read-only.
schemas/Spreadsheet/properties/spreadsheetUrl/type str string
schemas/Spreadsheet/type str object
schemas/SpreadsheetProperties dict
schemas/SpreadsheetProperties/description str Properties of a spreadsheet.
schemas/SpreadsheetProperties/id str SpreadsheetProperties
schemas/SpreadsheetProperties/properties dict
schemas/SpreadsheetProperties/properties/autoRecalc dict
schemas/SpreadsheetProperties/properties/autoRecalc/description str The amount of time to wait before volatile functions are recalculated.
schemas/SpreadsheetProperties/properties/autoRecalc/enum list
schemas/SpreadsheetProperties/properties/autoRecalc/enum/[] str RECALCULATION_INTERVAL_UNSPECIFIED
schemas/SpreadsheetProperties/properties/autoRecalc/enumDescriptions list
schemas/SpreadsheetProperties/properties/autoRecalc/enumDescriptions/[] str Default value. This value must not be used.
schemas/SpreadsheetProperties/properties/autoRecalc/type str string
schemas/SpreadsheetProperties/properties/defaultFormat dict
schemas/SpreadsheetProperties/properties/defaultFormat/$ref str CellFormat
schemas/SpreadsheetProperties/properties/defaultFormat/description str The default format of all cells in the spreadsheet.
CellData.effectiveFormat will not be set if
the cell's format is equal to this default format. This field is read-only.
schemas/SpreadsheetProperties/properties/iterativeCalculationSettings dict
schemas/SpreadsheetProperties/properties/iterativeCalculationSettings/$ref str IterativeCalculationSettings
schemas/SpreadsheetProperties/properties/iterativeCalculationSettings/description str Determines whether and how circular references are resolved with iterative
calculation.  Absence of this field means that circular references will
result in calculation errors.
schemas/SpreadsheetProperties/properties/locale dict
schemas/SpreadsheetProperties/properties/locale/description str The locale of the spreadsheet in one of the following formats:

* an ISO 639-1 language code such as `en`

* an ISO 639-2 language code such as `fil`, if no 639-1 code exists

* a combination of the ISO language code and country code, such as `en_US`

Note: when updating this field, not all locales/languages are supported.
schemas/SpreadsheetProperties/properties/locale/type str string
schemas/SpreadsheetProperties/properties/timeZone dict
schemas/SpreadsheetProperties/properties/timeZone/description str The time zone of the spreadsheet, in CLDR format such as
`America/New_York`. If the time zone isn't recognized, this may
be a custom time zone such as `GMT-07:00`.
schemas/SpreadsheetProperties/properties/timeZone/type str string
schemas/SpreadsheetProperties/properties/title dict
schemas/SpreadsheetProperties/properties/title/description str The title of the spreadsheet.
schemas/SpreadsheetProperties/properties/title/type str string
schemas/SpreadsheetProperties/type str object
schemas/TextFormat dict
schemas/TextFormat/description str The format of a run of text in a cell.
Absent values indicate that the field isn't specified.
schemas/TextFormat/id str TextFormat
schemas/TextFormat/properties dict
schemas/TextFormat/properties/bold dict
schemas/TextFormat/properties/bold/description str True if the text is bold.
schemas/TextFormat/properties/bold/type str boolean
schemas/TextFormat/properties/fontFamily dict
schemas/TextFormat/properties/fontFamily/description str The font family.
schemas/TextFormat/properties/fontFamily/type str string
schemas/TextFormat/properties/fontSize dict
schemas/TextFormat/properties/fontSize/description str The size of the font.
schemas/TextFormat/properties/fontSize/format str int32
schemas/TextFormat/properties/fontSize/type str integer
schemas/TextFormat/properties/foregroundColor dict
schemas/TextFormat/properties/foregroundColor/$ref str Color
schemas/TextFormat/properties/foregroundColor/description str The foreground color of the text.
schemas/TextFormat/properties/italic dict
schemas/TextFormat/properties/italic/description str True if the text is italicized.
schemas/TextFormat/properties/italic/type str boolean
schemas/TextFormat/properties/strikethrough dict
schemas/TextFormat/properties/strikethrough/description str True if the text has a strikethrough.
schemas/TextFormat/properties/strikethrough/type str boolean
schemas/TextFormat/properties/underline dict
schemas/TextFormat/properties/underline/description str True if the text is underlined.
schemas/TextFormat/properties/underline/type str boolean
schemas/TextFormat/type str object
schemas/TextFormatRun dict
schemas/TextFormatRun/description str A run of a text format. The format of this run continues until the start
index of the next run.
When updating, all fields must be set.
schemas/TextFormatRun/id str TextFormatRun
schemas/TextFormatRun/properties dict
schemas/TextFormatRun/properties/format dict
schemas/TextFormatRun/properties/format/$ref str TextFormat
schemas/TextFormatRun/properties/format/description str The format of this run.  Absent values inherit the cell's format.
schemas/TextFormatRun/properties/startIndex dict
schemas/TextFormatRun/properties/startIndex/description str The character index where this run starts.
schemas/TextFormatRun/properties/startIndex/format str int32
schemas/TextFormatRun/properties/startIndex/type str integer
schemas/TextFormatRun/type str object
schemas/TextPosition dict
schemas/TextPosition/description str Position settings for text.
schemas/TextPosition/id str TextPosition
schemas/TextPosition/properties dict
schemas/TextPosition/properties/horizontalAlignment dict
schemas/TextPosition/properties/horizontalAlignment/description str Horizontal alignment setting for the piece of text.
schemas/TextPosition/properties/horizontalAlignment/enum list
schemas/TextPosition/properties/horizontalAlignment/enum/[] str HORIZONTAL_ALIGN_UNSPECIFIED
schemas/TextPosition/properties/horizontalAlignment/enumDescriptions list
schemas/TextPosition/properties/horizontalAlignment/enumDescriptions/[] str The horizontal alignment is not specified. Do not use this.
schemas/TextPosition/properties/horizontalAlignment/type str string
schemas/TextPosition/type str object
schemas/TextRotation dict
schemas/TextRotation/description str The rotation applied to text in a cell.
schemas/TextRotation/id str TextRotation
schemas/TextRotation/properties dict
schemas/TextRotation/properties/angle dict
schemas/TextRotation/properties/angle/description str The angle between the standard orientation and the desired orientation.
Measured in degrees. Valid values are between -90 and 90. Positive
angles are angled upwards, negative are angled downwards.

Note: For LTR text direction positive angles are in the counterclockwise
direction, whereas for RTL they are in the clockwise direction
schemas/TextRotation/properties/angle/format str int32
schemas/TextRotation/properties/angle/type str integer
schemas/TextRotation/properties/vertical dict
schemas/TextRotation/properties/vertical/description str If true, text reads top to bottom, but the orientation of individual
characters is unchanged.
For example:

    | V |
    | e |
    | r |
    | t |
    | i |
    | c |
    | a |
    | l |
schemas/TextRotation/properties/vertical/type str boolean
schemas/TextRotation/type str object
schemas/TextToColumnsRequest dict
schemas/TextToColumnsRequest/description str Splits a column of text into multiple columns,
based on a delimiter in each cell.
schemas/TextToColumnsRequest/id str TextToColumnsRequest
schemas/TextToColumnsRequest/properties dict
schemas/TextToColumnsRequest/properties/delimiter dict
schemas/TextToColumnsRequest/properties/delimiter/description str The delimiter to use. Used only if delimiterType is
CUSTOM.
schemas/TextToColumnsRequest/properties/delimiter/type str string
schemas/TextToColumnsRequest/properties/delimiterType dict
schemas/TextToColumnsRequest/properties/delimiterType/description str The delimiter type to use.
schemas/TextToColumnsRequest/properties/delimiterType/enum list
schemas/TextToColumnsRequest/properties/delimiterType/enum/[] str DELIMITER_TYPE_UNSPECIFIED
schemas/TextToColumnsRequest/properties/delimiterType/enumDescriptions list
schemas/TextToColumnsRequest/properties/delimiterType/enumDescriptions/[] str Default value. This value must not be used.
schemas/TextToColumnsRequest/properties/delimiterType/type str string
schemas/TextToColumnsRequest/properties/source dict
schemas/TextToColumnsRequest/properties/source/$ref str GridRange
schemas/TextToColumnsRequest/properties/source/description str The source data range.  This must span exactly one column.
schemas/TextToColumnsRequest/type str object
schemas/TreemapChartColorScale dict
schemas/TreemapChartColorScale/description str A color scale for a treemap chart.
schemas/TreemapChartColorScale/id str TreemapChartColorScale
schemas/TreemapChartColorScale/properties dict
schemas/TreemapChartColorScale/properties/maxValueColor dict
schemas/TreemapChartColorScale/properties/maxValueColor/$ref str Color
schemas/TreemapChartColorScale/properties/maxValueColor/description str The background color for cells with a color value greater than or equal
to maxValue. Defaults to #109618 if not
specified.
schemas/TreemapChartColorScale/properties/midValueColor dict
schemas/TreemapChartColorScale/properties/midValueColor/$ref str Color
schemas/TreemapChartColorScale/properties/midValueColor/description str The background color for cells with a color value at the midpoint between
minValue and
maxValue. Defaults to #efe6dc if not
specified.
schemas/TreemapChartColorScale/properties/minValueColor dict
schemas/TreemapChartColorScale/properties/minValueColor/$ref str Color
schemas/TreemapChartColorScale/properties/minValueColor/description str The background color for cells with a color value less than or equal to
minValue. Defaults to #dc3912 if not
specified.
schemas/TreemapChartColorScale/properties/noDataColor dict
schemas/TreemapChartColorScale/properties/noDataColor/$ref str Color
schemas/TreemapChartColorScale/properties/noDataColor/description str The background color for cells that have no color data associated with
them. Defaults to #000000 if not specified.
schemas/TreemapChartColorScale/type str object
schemas/TreemapChartSpec dict
schemas/TreemapChartSpec/description str A <a href="/chart/interactive/docs/gallery/treemap">Treemap chart</a>.
schemas/TreemapChartSpec/id str TreemapChartSpec
schemas/TreemapChartSpec/properties dict
schemas/TreemapChartSpec/properties/colorData dict
schemas/TreemapChartSpec/properties/colorData/$ref str ChartData
schemas/TreemapChartSpec/properties/colorData/description str The data that determines the background color of each treemap data cell.
This field is optional. If not specified, size_data is used to
determine background colors. If specified, the data is expected to be
numeric. color_scale will determine how the values in this data map to
data cell background colors.
schemas/TreemapChartSpec/properties/colorScale dict
schemas/TreemapChartSpec/properties/colorScale/$ref str TreemapChartColorScale
schemas/TreemapChartSpec/properties/colorScale/description str The color scale for data cells in the treemap chart. Data cells are
assigned colors based on their color values. These color values come from
color_data, or from size_data if color_data is not specified.
Cells with color values less than or equal to min_value will
have minValueColor as their
background color. Cells with color values greater than or equal to
max_value will have
maxValueColor as their background
color. Cells with color values between min_value and max_value will
have background colors on a gradient between
minValueColor and
maxValueColor, the midpoint of
the gradient being midValueColor.
Cells with missing or non-numeric color values will have
noDataColor as their background
color.
schemas/TreemapChartSpec/properties/headerColor dict
schemas/TreemapChartSpec/properties/headerColor/$ref str Color
schemas/TreemapChartSpec/properties/headerColor/description str The background color for header cells.
schemas/TreemapChartSpec/properties/hideTooltips dict
schemas/TreemapChartSpec/properties/hideTooltips/description str True to hide tooltips.
schemas/TreemapChartSpec/properties/hideTooltips/type str boolean
schemas/TreemapChartSpec/properties/hintedLevels dict
schemas/TreemapChartSpec/properties/hintedLevels/description str The number of additional data levels beyond the labeled levels to be shown
on the treemap chart. These levels are not interactive and are shown
without their labels. Defaults to 0 if not specified.
schemas/TreemapChartSpec/properties/hintedLevels/format str int32
schemas/TreemapChartSpec/properties/hintedLevels/type str integer
schemas/TreemapChartSpec/properties/labels dict
schemas/TreemapChartSpec/properties/labels/$ref str ChartData
schemas/TreemapChartSpec/properties/labels/description str The data that contains the treemap cell labels.
schemas/TreemapChartSpec/properties/levels dict
schemas/TreemapChartSpec/properties/levels/description str The number of data levels to show on the treemap chart. These levels are
interactive and are shown with their labels. Defaults to 2 if not
specified.
schemas/TreemapChartSpec/properties/levels/format str int32
schemas/TreemapChartSpec/properties/levels/type str integer
schemas/TreemapChartSpec/properties/maxValue dict
schemas/TreemapChartSpec/properties/maxValue/description str The maximum possible data value. Cells with values greater than this will
have the same color as cells with this value. If not specified, defaults
to the actual maximum value from color_data, or the maximum value from
size_data if color_data is not specified.
schemas/TreemapChartSpec/properties/maxValue/format str double
schemas/TreemapChartSpec/properties/maxValue/type str number
schemas/TreemapChartSpec/properties/minValue dict
schemas/TreemapChartSpec/properties/minValue/description str The minimum possible data value. Cells with values less than this will
have the same color as cells with this value. If not specified, defaults
to the actual minimum value from color_data, or the minimum value from
size_data if color_data is not specified.
schemas/TreemapChartSpec/properties/minValue/format str double
schemas/TreemapChartSpec/properties/minValue/type str number
schemas/TreemapChartSpec/properties/parentLabels dict
schemas/TreemapChartSpec/properties/parentLabels/$ref str ChartData
schemas/TreemapChartSpec/properties/parentLabels/description str The data the contains the treemap cells' parent labels.
schemas/TreemapChartSpec/properties/sizeData dict
schemas/TreemapChartSpec/properties/sizeData/$ref str ChartData
schemas/TreemapChartSpec/properties/sizeData/description str The data that determines the size of each treemap data cell. This data is
expected to be numeric. The cells corresponding to non-numeric or missing
data will not be rendered. If color_data is not specified, this data
is used to determine data cell background colors as well.
schemas/TreemapChartSpec/properties/textFormat dict
schemas/TreemapChartSpec/properties/textFormat/$ref str TextFormat
schemas/TreemapChartSpec/properties/textFormat/description str The text format for all labels on the chart.
schemas/TreemapChartSpec/type str object
schemas/UnmergeCellsRequest dict
schemas/UnmergeCellsRequest/description str Unmerges cells in the given range.
schemas/UnmergeCellsRequest/id str UnmergeCellsRequest
schemas/UnmergeCellsRequest/properties dict
schemas/UnmergeCellsRequest/properties/range dict
schemas/UnmergeCellsRequest/properties/range/$ref str GridRange
schemas/UnmergeCellsRequest/properties/range/description str The range within which all cells should be unmerged.
If the range spans multiple merges, all will be unmerged.
The range must not partially span any merge.
schemas/UnmergeCellsRequest/type str object
schemas/UpdateBandingRequest dict
schemas/UpdateBandingRequest/description str Updates properties of the supplied banded range.
schemas/UpdateBandingRequest/id str UpdateBandingRequest
schemas/UpdateBandingRequest/properties dict
schemas/UpdateBandingRequest/properties/bandedRange dict
schemas/UpdateBandingRequest/properties/bandedRange/$ref str BandedRange
schemas/UpdateBandingRequest/properties/bandedRange/description str The banded range to update with the new properties.
schemas/UpdateBandingRequest/properties/fields dict
schemas/UpdateBandingRequest/properties/fields/description str The fields that should be updated.  At least one field must be specified.
The root `bandedRange` is implied and should not be specified.
A single `"*"` can be used as short-hand for listing every field.
schemas/UpdateBandingRequest/properties/fields/format str google-fieldmask
schemas/UpdateBandingRequest/properties/fields/type str string
schemas/UpdateBandingRequest/type str object
schemas/UpdateBordersRequest dict
schemas/UpdateBordersRequest/description str Updates the borders of a range.
If a field is not set in the request, that means the border remains as-is.
For example, with two subsequent UpdateBordersRequest:

 1. range: A1:A5 `{ top: RED, bottom: WHITE }`
 2. range: A1:A5 `{ left: BLUE }`

That would result in A1:A5 having a borders of
`{ top: RED, bottom: WHITE, left: BLUE }`.
If you want to clear a border, explicitly set the style to
NONE.
schemas/UpdateBordersRequest/id str UpdateBordersRequest
schemas/UpdateBordersRequest/properties dict
schemas/UpdateBordersRequest/properties/bottom dict
schemas/UpdateBordersRequest/properties/bottom/$ref str Border
schemas/UpdateBordersRequest/properties/bottom/description str The border to put at the bottom of the range.
schemas/UpdateBordersRequest/properties/innerHorizontal dict
schemas/UpdateBordersRequest/properties/innerHorizontal/$ref str Border
schemas/UpdateBordersRequest/properties/innerHorizontal/description str The horizontal border to put within the range.
schemas/UpdateBordersRequest/properties/innerVertical dict
schemas/UpdateBordersRequest/properties/innerVertical/$ref str Border
schemas/UpdateBordersRequest/properties/innerVertical/description str The vertical border to put within the range.
schemas/UpdateBordersRequest/properties/left dict
schemas/UpdateBordersRequest/properties/left/$ref str Border
schemas/UpdateBordersRequest/properties/left/description str The border to put at the left of the range.
schemas/UpdateBordersRequest/properties/range dict
schemas/UpdateBordersRequest/properties/range/$ref str GridRange
schemas/UpdateBordersRequest/properties/range/description str The range whose borders should be updated.
schemas/UpdateBordersRequest/properties/right dict
schemas/UpdateBordersRequest/properties/right/$ref str Border
schemas/UpdateBordersRequest/properties/right/description str The border to put at the right of the range.
schemas/UpdateBordersRequest/properties/top dict
schemas/UpdateBordersRequest/properties/top/$ref str Border
schemas/UpdateBordersRequest/properties/top/description str The border to put at the top of the range.
schemas/UpdateBordersRequest/type str object
schemas/UpdateCellsRequest dict
schemas/UpdateCellsRequest/description str Updates all cells in a range with new data.
schemas/UpdateCellsRequest/id str UpdateCellsRequest
schemas/UpdateCellsRequest/properties dict
schemas/UpdateCellsRequest/properties/fields dict
schemas/UpdateCellsRequest/properties/fields/description str The fields of CellData that should be updated.
At least one field must be specified.
The root is the CellData; 'row.values.' should not be specified.
A single `"*"` can be used as short-hand for listing every field.
schemas/UpdateCellsRequest/properties/fields/format str google-fieldmask
schemas/UpdateCellsRequest/properties/fields/type str string
schemas/UpdateCellsRequest/properties/range dict
schemas/UpdateCellsRequest/properties/range/$ref str GridRange
schemas/UpdateCellsRequest/properties/range/description str The range to write data to.

If the data in rows does not cover the entire requested range,
the fields matching those set in fields will be cleared.
schemas/UpdateCellsRequest/properties/rows dict
schemas/UpdateCellsRequest/properties/rows/description str The data to write.
schemas/UpdateCellsRequest/properties/rows/items dict
schemas/UpdateCellsRequest/properties/rows/items/$ref str RowData
schemas/UpdateCellsRequest/properties/rows/type str array
schemas/UpdateCellsRequest/properties/start dict
schemas/UpdateCellsRequest/properties/start/$ref str GridCoordinate
schemas/UpdateCellsRequest/properties/start/description str The coordinate to start writing data at.
Any number of rows and columns (including a different number of
columns per row) may be written.
schemas/UpdateCellsRequest/type str object
schemas/UpdateChartSpecRequest dict
schemas/UpdateChartSpecRequest/description str Updates a chart's specifications.
(This does not move or resize a chart. To move or resize a chart, use
 UpdateEmbeddedObjectPositionRequest.)
schemas/UpdateChartSpecRequest/id str UpdateChartSpecRequest
schemas/UpdateChartSpecRequest/properties dict
schemas/UpdateChartSpecRequest/properties/chartId dict
schemas/UpdateChartSpecRequest/properties/chartId/description str The ID of the chart to update.
schemas/UpdateChartSpecRequest/properties/chartId/format str int32
schemas/UpdateChartSpecRequest/properties/chartId/type str integer
schemas/UpdateChartSpecRequest/properties/spec dict
schemas/UpdateChartSpecRequest/properties/spec/$ref str ChartSpec
schemas/UpdateChartSpecRequest/properties/spec/description str The specification to apply to the chart.
schemas/UpdateChartSpecRequest/type str object
schemas/UpdateConditionalFormatRuleRequest dict
schemas/UpdateConditionalFormatRuleRequest/description str Updates a conditional format rule at the given index,
or moves a conditional format rule to another index.
schemas/UpdateConditionalFormatRuleRequest/id str UpdateConditionalFormatRuleRequest
schemas/UpdateConditionalFormatRuleRequest/properties dict
schemas/UpdateConditionalFormatRuleRequest/properties/index dict
schemas/UpdateConditionalFormatRuleRequest/properties/index/description str The zero-based index of the rule that should be replaced or moved.
schemas/UpdateConditionalFormatRuleRequest/properties/index/format str int32
schemas/UpdateConditionalFormatRuleRequest/properties/index/type str integer
schemas/UpdateConditionalFormatRuleRequest/properties/newIndex dict
schemas/UpdateConditionalFormatRuleRequest/properties/newIndex/description str The zero-based new index the rule should end up at.
schemas/UpdateConditionalFormatRuleRequest/properties/newIndex/format str int32
schemas/UpdateConditionalFormatRuleRequest/properties/newIndex/type str integer
schemas/UpdateConditionalFormatRuleRequest/properties/rule dict
schemas/UpdateConditionalFormatRuleRequest/properties/rule/$ref str ConditionalFormatRule
schemas/UpdateConditionalFormatRuleRequest/properties/rule/description str The rule that should replace the rule at the given index.
schemas/UpdateConditionalFormatRuleRequest/properties/sheetId dict
schemas/UpdateConditionalFormatRuleRequest/properties/sheetId/description str The sheet of the rule to move.  Required if new_index is set,
unused otherwise.
schemas/UpdateConditionalFormatRuleRequest/properties/sheetId/format str int32
schemas/UpdateConditionalFormatRuleRequest/properties/sheetId/type str integer
schemas/UpdateConditionalFormatRuleRequest/type str object
schemas/UpdateConditionalFormatRuleResponse dict
schemas/UpdateConditionalFormatRuleResponse/description str The result of updating a conditional format rule.
schemas/UpdateConditionalFormatRuleResponse/id str UpdateConditionalFormatRuleResponse
schemas/UpdateConditionalFormatRuleResponse/properties dict
schemas/UpdateConditionalFormatRuleResponse/properties/newIndex dict
schemas/UpdateConditionalFormatRuleResponse/properties/newIndex/description str The index of the new rule.
schemas/UpdateConditionalFormatRuleResponse/properties/newIndex/format str int32
schemas/UpdateConditionalFormatRuleResponse/properties/newIndex/type str integer
schemas/UpdateConditionalFormatRuleResponse/properties/newRule dict
schemas/UpdateConditionalFormatRuleResponse/properties/newRule/$ref str ConditionalFormatRule
schemas/UpdateConditionalFormatRuleResponse/properties/newRule/description str The new rule that replaced the old rule (if replacing),
or the rule that was moved (if moved)
schemas/UpdateConditionalFormatRuleResponse/properties/oldIndex dict
schemas/UpdateConditionalFormatRuleResponse/properties/oldIndex/description str The old index of the rule. Not set if a rule was replaced
(because it is the same as new_index).
schemas/UpdateConditionalFormatRuleResponse/properties/oldIndex/format str int32
schemas/UpdateConditionalFormatRuleResponse/properties/oldIndex/type str integer
schemas/UpdateConditionalFormatRuleResponse/properties/oldRule dict
schemas/UpdateConditionalFormatRuleResponse/properties/oldRule/$ref str ConditionalFormatRule
schemas/UpdateConditionalFormatRuleResponse/properties/oldRule/description str The old (deleted) rule. Not set if a rule was moved
(because it is the same as new_rule).
schemas/UpdateConditionalFormatRuleResponse/type str object
schemas/UpdateDeveloperMetadataRequest dict
schemas/UpdateDeveloperMetadataRequest/description str A request to update properties of developer metadata.
Updates the properties of the developer metadata selected by the filters to
the values provided in the DeveloperMetadata resource.  Callers must
specify the properties they wish to update in the fields parameter, as well
as specify at least one DataFilter matching the metadata they wish to
update.
schemas/UpdateDeveloperMetadataRequest/id str UpdateDeveloperMetadataRequest
schemas/UpdateDeveloperMetadataRequest/properties dict
schemas/UpdateDeveloperMetadataRequest/properties/dataFilters dict
schemas/UpdateDeveloperMetadataRequest/properties/dataFilters/description str The filters matching the developer metadata entries to update.
schemas/UpdateDeveloperMetadataRequest/properties/dataFilters/items dict
schemas/UpdateDeveloperMetadataRequest/properties/dataFilters/items/$ref str DataFilter
schemas/UpdateDeveloperMetadataRequest/properties/dataFilters/type str array
schemas/UpdateDeveloperMetadataRequest/properties/developerMetadata dict
schemas/UpdateDeveloperMetadataRequest/properties/developerMetadata/$ref str DeveloperMetadata
schemas/UpdateDeveloperMetadataRequest/properties/developerMetadata/description str The value that all metadata matched by the data filters will be updated to.
schemas/UpdateDeveloperMetadataRequest/properties/fields dict
schemas/UpdateDeveloperMetadataRequest/properties/fields/description str The fields that should be updated.  At least one field must be specified.
The root `developerMetadata` is implied and should not be specified.
A single `"*"` can be used as short-hand for listing every field.
schemas/UpdateDeveloperMetadataRequest/properties/fields/format str google-fieldmask
schemas/UpdateDeveloperMetadataRequest/properties/fields/type str string
schemas/UpdateDeveloperMetadataRequest/type str object
schemas/UpdateDeveloperMetadataResponse dict
schemas/UpdateDeveloperMetadataResponse/description str The response from updating developer metadata.
schemas/UpdateDeveloperMetadataResponse/id str UpdateDeveloperMetadataResponse
schemas/UpdateDeveloperMetadataResponse/properties dict
schemas/UpdateDeveloperMetadataResponse/properties/developerMetadata dict
schemas/UpdateDeveloperMetadataResponse/properties/developerMetadata/description str The updated developer metadata.
schemas/UpdateDeveloperMetadataResponse/properties/developerMetadata/items dict
schemas/UpdateDeveloperMetadataResponse/properties/developerMetadata/items/$ref str DeveloperMetadata
schemas/UpdateDeveloperMetadataResponse/properties/developerMetadata/type str array
schemas/UpdateDeveloperMetadataResponse/type str object
schemas/UpdateDimensionGroupRequest dict
schemas/UpdateDimensionGroupRequest/description str Updates the state of the specified group.
schemas/UpdateDimensionGroupRequest/id str UpdateDimensionGroupRequest
schemas/UpdateDimensionGroupRequest/properties dict
schemas/UpdateDimensionGroupRequest/properties/dimensionGroup dict
schemas/UpdateDimensionGroupRequest/properties/dimensionGroup/$ref str DimensionGroup
schemas/UpdateDimensionGroupRequest/properties/dimensionGroup/description str The group whose state should be updated. The range and depth of the group
should specify a valid group on the sheet, and all other fields updated.
schemas/UpdateDimensionGroupRequest/properties/fields dict
schemas/UpdateDimensionGroupRequest/properties/fields/description str The fields that should be updated.  At least one field must be specified.
The root `dimensionGroup` is implied and should not be specified.
A single `"*"` can be used as short-hand for listing every field.
schemas/UpdateDimensionGroupRequest/properties/fields/format str google-fieldmask
schemas/UpdateDimensionGroupRequest/properties/fields/type str string
schemas/UpdateDimensionGroupRequest/type str object
schemas/UpdateDimensionPropertiesRequest dict
schemas/UpdateDimensionPropertiesRequest/description str Updates properties of dimensions within the specified range.
schemas/UpdateDimensionPropertiesRequest/id str UpdateDimensionPropertiesRequest
schemas/UpdateDimensionPropertiesRequest/properties dict
schemas/UpdateDimensionPropertiesRequest/properties/fields dict
schemas/UpdateDimensionPropertiesRequest/properties/fields/description str The fields that should be updated.  At least one field must be specified.
The root `properties` is implied and should not be specified.
A single `"*"` can be used as short-hand for listing every field.
schemas/UpdateDimensionPropertiesRequest/properties/fields/format str google-fieldmask
schemas/UpdateDimensionPropertiesRequest/properties/fields/type str string
schemas/UpdateDimensionPropertiesRequest/properties/properties dict
schemas/UpdateDimensionPropertiesRequest/properties/properties/$ref str DimensionProperties
schemas/UpdateDimensionPropertiesRequest/properties/properties/description str Properties to update.
schemas/UpdateDimensionPropertiesRequest/properties/range dict
schemas/UpdateDimensionPropertiesRequest/properties/range/$ref str DimensionRange
schemas/UpdateDimensionPropertiesRequest/properties/range/description str The rows or columns to update.
schemas/UpdateDimensionPropertiesRequest/type str object
schemas/UpdateEmbeddedObjectPositionRequest dict
schemas/UpdateEmbeddedObjectPositionRequest/description str Update an embedded object's position (such as a moving or resizing a
chart or image).
schemas/UpdateEmbeddedObjectPositionRequest/id str UpdateEmbeddedObjectPositionRequest
schemas/UpdateEmbeddedObjectPositionRequest/properties dict
schemas/UpdateEmbeddedObjectPositionRequest/properties/fields dict
schemas/UpdateEmbeddedObjectPositionRequest/properties/fields/description str The fields of OverlayPosition
that should be updated when setting a new position. Used only if
newPosition.overlayPosition
is set, in which case at least one field must
be specified.  The root `newPosition.overlayPosition` is implied and
should not be specified.
A single `"*"` can be used as short-hand for listing every field.
schemas/UpdateEmbeddedObjectPositionRequest/properties/fields/format str google-fieldmask
schemas/UpdateEmbeddedObjectPositionRequest/properties/fields/type str string
schemas/UpdateEmbeddedObjectPositionRequest/properties/newPosition dict
schemas/UpdateEmbeddedObjectPositionRequest/properties/newPosition/$ref str EmbeddedObjectPosition
schemas/UpdateEmbeddedObjectPositionRequest/properties/newPosition/description str An explicit position to move the embedded object to.
If newPosition.sheetId is set,
a new sheet with that ID will be created.
If newPosition.newSheet is set to true,
a new sheet will be created with an ID that will be chosen for you.
schemas/UpdateEmbeddedObjectPositionRequest/properties/objectId dict
schemas/UpdateEmbeddedObjectPositionRequest/properties/objectId/description str The ID of the object to moved.
schemas/UpdateEmbeddedObjectPositionRequest/properties/objectId/format str int32
schemas/UpdateEmbeddedObjectPositionRequest/properties/objectId/type str integer
schemas/UpdateEmbeddedObjectPositionRequest/type str object
schemas/UpdateEmbeddedObjectPositionResponse dict
schemas/UpdateEmbeddedObjectPositionResponse/description str The result of updating an embedded object's position.
schemas/UpdateEmbeddedObjectPositionResponse/id str UpdateEmbeddedObjectPositionResponse
schemas/UpdateEmbeddedObjectPositionResponse/properties dict
schemas/UpdateEmbeddedObjectPositionResponse/properties/position dict
schemas/UpdateEmbeddedObjectPositionResponse/properties/position/$ref str EmbeddedObjectPosition
schemas/UpdateEmbeddedObjectPositionResponse/properties/position/description str The new position of the embedded object.
schemas/UpdateEmbeddedObjectPositionResponse/type str object
schemas/UpdateFilterViewRequest dict
schemas/UpdateFilterViewRequest/description str Updates properties of the filter view.
schemas/UpdateFilterViewRequest/id str UpdateFilterViewRequest
schemas/UpdateFilterViewRequest/properties dict
schemas/UpdateFilterViewRequest/properties/fields dict
schemas/UpdateFilterViewRequest/properties/fields/description str The fields that should be updated.  At least one field must be specified.
The root `filter` is implied and should not be specified.
A single `"*"` can be used as short-hand for listing every field.
schemas/UpdateFilterViewRequest/properties/fields/format str google-fieldmask
schemas/UpdateFilterViewRequest/properties/fields/type str string
schemas/UpdateFilterViewRequest/properties/filter dict
schemas/UpdateFilterViewRequest/properties/filter/$ref str FilterView
schemas/UpdateFilterViewRequest/properties/filter/description str The new properties of the filter view.
schemas/UpdateFilterViewRequest/type str object
schemas/UpdateNamedRangeRequest dict
schemas/UpdateNamedRangeRequest/description str Updates properties of the named range with the specified
namedRangeId.
schemas/UpdateNamedRangeRequest/id str UpdateNamedRangeRequest
schemas/UpdateNamedRangeRequest/properties dict
schemas/UpdateNamedRangeRequest/properties/fields dict
schemas/UpdateNamedRangeRequest/properties/fields/description str The fields that should be updated.  At least one field must be specified.
The root `namedRange` is implied and should not be specified.
A single `"*"` can be used as short-hand for listing every field.
schemas/UpdateNamedRangeRequest/properties/fields/format str google-fieldmask
schemas/UpdateNamedRangeRequest/properties/fields/type str string
schemas/UpdateNamedRangeRequest/properties/namedRange dict
schemas/UpdateNamedRangeRequest/properties/namedRange/$ref str NamedRange
schemas/UpdateNamedRangeRequest/properties/namedRange/description str The named range to update with the new properties.
schemas/UpdateNamedRangeRequest/type str object
schemas/UpdateProtectedRangeRequest dict
schemas/UpdateProtectedRangeRequest/description str Updates an existing protected range with the specified
protectedRangeId.
schemas/UpdateProtectedRangeRequest/id str UpdateProtectedRangeRequest
schemas/UpdateProtectedRangeRequest/properties dict
schemas/UpdateProtectedRangeRequest/properties/fields dict
schemas/UpdateProtectedRangeRequest/properties/fields/description str The fields that should be updated.  At least one field must be specified.
The root `protectedRange` is implied and should not be specified.
A single `"*"` can be used as short-hand for listing every field.
schemas/UpdateProtectedRangeRequest/properties/fields/format str google-fieldmask
schemas/UpdateProtectedRangeRequest/properties/fields/type str string
schemas/UpdateProtectedRangeRequest/properties/protectedRange dict
schemas/UpdateProtectedRangeRequest/properties/protectedRange/$ref str ProtectedRange
schemas/UpdateProtectedRangeRequest/properties/protectedRange/description str The protected range to update with the new properties.
schemas/UpdateProtectedRangeRequest/type str object
schemas/UpdateSheetPropertiesRequest dict
schemas/UpdateSheetPropertiesRequest/description str Updates properties of the sheet with the specified
sheetId.
schemas/UpdateSheetPropertiesRequest/id str UpdateSheetPropertiesRequest
schemas/UpdateSheetPropertiesRequest/properties dict
schemas/UpdateSheetPropertiesRequest/properties/fields dict
schemas/UpdateSheetPropertiesRequest/properties/fields/description str The fields that should be updated.  At least one field must be specified.
The root `properties` is implied and should not be specified.
A single `"*"` can be used as short-hand for listing every field.
schemas/UpdateSheetPropertiesRequest/properties/fields/format str google-fieldmask
schemas/UpdateSheetPropertiesRequest/properties/fields/type str string
schemas/UpdateSheetPropertiesRequest/properties/properties dict
schemas/UpdateSheetPropertiesRequest/properties/properties/$ref str SheetProperties
schemas/UpdateSheetPropertiesRequest/properties/properties/description str The properties to update.
schemas/UpdateSheetPropertiesRequest/type str object
schemas/UpdateSpreadsheetPropertiesRequest dict
schemas/UpdateSpreadsheetPropertiesRequest/description str Updates properties of a spreadsheet.
schemas/UpdateSpreadsheetPropertiesRequest/id str UpdateSpreadsheetPropertiesRequest
schemas/UpdateSpreadsheetPropertiesRequest/properties dict
schemas/UpdateSpreadsheetPropertiesRequest/properties/fields dict
schemas/UpdateSpreadsheetPropertiesRequest/properties/fields/description str The fields that should be updated.  At least one field must be specified.
The root 'properties' is implied and should not be specified.
A single `"*"` can be used as short-hand for listing every field.
schemas/UpdateSpreadsheetPropertiesRequest/properties/fields/format str google-fieldmask
schemas/UpdateSpreadsheetPropertiesRequest/properties/fields/type str string
schemas/UpdateSpreadsheetPropertiesRequest/properties/properties dict
schemas/UpdateSpreadsheetPropertiesRequest/properties/properties/$ref str SpreadsheetProperties
schemas/UpdateSpreadsheetPropertiesRequest/properties/properties/description str The properties to update.
schemas/UpdateSpreadsheetPropertiesRequest/type str object
schemas/UpdateValuesByDataFilterResponse dict
schemas/UpdateValuesByDataFilterResponse/description str The response when updating a range of values by a data filter in a
spreadsheet.
schemas/UpdateValuesByDataFilterResponse/id str UpdateValuesByDataFilterResponse
schemas/UpdateValuesByDataFilterResponse/properties dict
schemas/UpdateValuesByDataFilterResponse/properties/dataFilter dict
schemas/UpdateValuesByDataFilterResponse/properties/dataFilter/$ref str DataFilter
schemas/UpdateValuesByDataFilterResponse/properties/dataFilter/description str The data filter that selected the range that was updated.
schemas/UpdateValuesByDataFilterResponse/properties/updatedCells dict
schemas/UpdateValuesByDataFilterResponse/properties/updatedCells/description str The number of cells updated.
schemas/UpdateValuesByDataFilterResponse/properties/updatedCells/format str int32
schemas/UpdateValuesByDataFilterResponse/properties/updatedCells/type str integer
schemas/UpdateValuesByDataFilterResponse/properties/updatedColumns dict
schemas/UpdateValuesByDataFilterResponse/properties/updatedColumns/description str The number of columns where at least one cell in the column was updated.
schemas/UpdateValuesByDataFilterResponse/properties/updatedColumns/format str int32
schemas/UpdateValuesByDataFilterResponse/properties/updatedColumns/type str integer
schemas/UpdateValuesByDataFilterResponse/properties/updatedData dict
schemas/UpdateValuesByDataFilterResponse/properties/updatedData/$ref str ValueRange
schemas/UpdateValuesByDataFilterResponse/properties/updatedData/description str The values of the cells in the range matched by the dataFilter after all
updates were applied. This is only included if the request's
`includeValuesInResponse` field was `true`.
schemas/UpdateValuesByDataFilterResponse/properties/updatedRange dict
schemas/UpdateValuesByDataFilterResponse/properties/updatedRange/description str The range (in A1 notation) that updates were applied to.
schemas/UpdateValuesByDataFilterResponse/properties/updatedRange/type str string
schemas/UpdateValuesByDataFilterResponse/properties/updatedRows dict
schemas/UpdateValuesByDataFilterResponse/properties/updatedRows/description str The number of rows where at least one cell in the row was updated.
schemas/UpdateValuesByDataFilterResponse/properties/updatedRows/format str int32
schemas/UpdateValuesByDataFilterResponse/properties/updatedRows/type str integer
schemas/UpdateValuesByDataFilterResponse/type str object
schemas/UpdateValuesResponse dict
schemas/UpdateValuesResponse/description str The response when updating a range of values in a spreadsheet.
schemas/UpdateValuesResponse/id str UpdateValuesResponse
schemas/UpdateValuesResponse/properties dict
schemas/UpdateValuesResponse/properties/spreadsheetId dict
schemas/UpdateValuesResponse/properties/spreadsheetId/description str The spreadsheet the updates were applied to.
schemas/UpdateValuesResponse/properties/spreadsheetId/type str string
schemas/UpdateValuesResponse/properties/updatedCells dict
schemas/UpdateValuesResponse/properties/updatedCells/description str The number of cells updated.
schemas/UpdateValuesResponse/properties/updatedCells/format str int32
schemas/UpdateValuesResponse/properties/updatedCells/type str integer
schemas/UpdateValuesResponse/properties/updatedColumns dict
schemas/UpdateValuesResponse/properties/updatedColumns/description str The number of columns where at least one cell in the column was updated.
schemas/UpdateValuesResponse/properties/updatedColumns/format str int32
schemas/UpdateValuesResponse/properties/updatedColumns/type str integer
schemas/UpdateValuesResponse/properties/updatedData dict
schemas/UpdateValuesResponse/properties/updatedData/$ref str ValueRange
schemas/UpdateValuesResponse/properties/updatedData/description str The values of the cells after updates were applied.
This is only included if the request's `includeValuesInResponse` field
was `true`.
schemas/UpdateValuesResponse/properties/updatedRange dict
schemas/UpdateValuesResponse/properties/updatedRange/description str The range (in A1 notation) that updates were applied to.
schemas/UpdateValuesResponse/properties/updatedRange/type str string
schemas/UpdateValuesResponse/properties/updatedRows dict
schemas/UpdateValuesResponse/properties/updatedRows/description str The number of rows where at least one cell in the row was updated.
schemas/UpdateValuesResponse/properties/updatedRows/format str int32
schemas/UpdateValuesResponse/properties/updatedRows/type str integer
schemas/UpdateValuesResponse/type str object
schemas/ValueRange dict
schemas/ValueRange/description str Data within a range of the spreadsheet.
schemas/ValueRange/id str ValueRange
schemas/ValueRange/properties dict
schemas/ValueRange/properties/majorDimension dict
schemas/ValueRange/properties/majorDimension/description str The major dimension of the values.

For output, if the spreadsheet data is: `A1=1,B1=2,A2=3,B2=4`,
then requesting `range=A1:B2,majorDimension=ROWS` will return
`[[1,2],[3,4]]`,
whereas requesting `range=A1:B2,majorDimension=COLUMNS` will return
`[[1,3],[2,4]]`.

For input, with `range=A1:B2,majorDimension=ROWS` then `[[1,2],[3,4]]`
will set `A1=1,B1=2,A2=3,B2=4`. With `range=A1:B2,majorDimension=COLUMNS`
then `[[1,2],[3,4]]` will set `A1=1,B1=3,A2=2,B2=4`.

When writing, if this field is not set, it defaults to ROWS.
schemas/ValueRange/properties/majorDimension/enum list
schemas/ValueRange/properties/majorDimension/enum/[] str DIMENSION_UNSPECIFIED
schemas/ValueRange/properties/majorDimension/enumDescriptions list
schemas/ValueRange/properties/majorDimension/enumDescriptions/[] str The default value, do not use.
schemas/ValueRange/properties/majorDimension/type str string
schemas/ValueRange/properties/range dict
schemas/ValueRange/properties/range/description str The range the values cover, in A1 notation.
For output, this range indicates the entire requested range,
even though the values will exclude trailing rows and columns.
When appending values, this field represents the range to search for a
table, after which values will be appended.
schemas/ValueRange/properties/range/type str string
schemas/ValueRange/properties/values dict
schemas/ValueRange/properties/values/description str The data that was read or to be written.  This is an array of arrays,
the outer array representing all the data and each inner array
representing a major dimension. Each item in the inner array
corresponds with one cell.

For output, empty trailing rows and columns will not be included.

For input, supported value types are: bool, string, and double.
Null values will be skipped.
To set a cell to an empty value, set the string value to an empty string.
schemas/ValueRange/properties/values/items dict
schemas/ValueRange/properties/values/items/items dict
schemas/ValueRange/properties/values/items/items/type str any
schemas/ValueRange/properties/values/items/type str array
schemas/ValueRange/properties/values/type str array
schemas/ValueRange/type str object
schemas/WaterfallChartColumnStyle dict
schemas/WaterfallChartColumnStyle/description str Styles for a waterfall chart column.
schemas/WaterfallChartColumnStyle/id str WaterfallChartColumnStyle
schemas/WaterfallChartColumnStyle/properties dict
schemas/WaterfallChartColumnStyle/properties/color dict
schemas/WaterfallChartColumnStyle/properties/color/$ref str Color
schemas/WaterfallChartColumnStyle/properties/color/description str The color of the column.
schemas/WaterfallChartColumnStyle/properties/label dict
schemas/WaterfallChartColumnStyle/properties/label/description str The label of the column's legend.
schemas/WaterfallChartColumnStyle/properties/label/type str string
schemas/WaterfallChartColumnStyle/type str object
schemas/WaterfallChartCustomSubtotal dict
schemas/WaterfallChartCustomSubtotal/description str A custom subtotal column for a waterfall chart series.
schemas/WaterfallChartCustomSubtotal/id str WaterfallChartCustomSubtotal
schemas/WaterfallChartCustomSubtotal/properties dict
schemas/WaterfallChartCustomSubtotal/properties/dataIsSubtotal dict
schemas/WaterfallChartCustomSubtotal/properties/dataIsSubtotal/description str True if the data point at subtotal_index is the subtotal. If false,
the subtotal will be computed and appear after the data point.
schemas/WaterfallChartCustomSubtotal/properties/dataIsSubtotal/type str boolean
schemas/WaterfallChartCustomSubtotal/properties/label dict
schemas/WaterfallChartCustomSubtotal/properties/label/description str A label for the subtotal column.
schemas/WaterfallChartCustomSubtotal/properties/label/type str string
schemas/WaterfallChartCustomSubtotal/properties/subtotalIndex dict
schemas/WaterfallChartCustomSubtotal/properties/subtotalIndex/description str The 0-based index of a data point within the series. If
data_is_subtotal is true, the data point at this index is the
subtotal. Otherwise, the subtotal appears after the data point with
this index. A series can have multiple subtotals at arbitrary indices,
but subtotals do not affect the indices of the data points. For
example, if a series has three data points, their indices will always
be 0, 1, and 2, regardless of how many subtotals exist on the series or
what data points they are associated with.
schemas/WaterfallChartCustomSubtotal/properties/subtotalIndex/format str int32
schemas/WaterfallChartCustomSubtotal/properties/subtotalIndex/type str integer
schemas/WaterfallChartCustomSubtotal/type str object
schemas/WaterfallChartDomain dict
schemas/WaterfallChartDomain/description str The domain of a waterfall chart.
schemas/WaterfallChartDomain/id str WaterfallChartDomain
schemas/WaterfallChartDomain/properties dict
schemas/WaterfallChartDomain/properties/data dict
schemas/WaterfallChartDomain/properties/data/$ref str ChartData
schemas/WaterfallChartDomain/properties/data/description str The data of the WaterfallChartDomain.
schemas/WaterfallChartDomain/properties/reversed dict
schemas/WaterfallChartDomain/properties/reversed/description str True to reverse the order of the domain values (horizontal axis).
schemas/WaterfallChartDomain/properties/reversed/type str boolean
schemas/WaterfallChartDomain/type str object
schemas/WaterfallChartSeries dict
schemas/WaterfallChartSeries/description str A single series of data for a waterfall chart.
schemas/WaterfallChartSeries/id str WaterfallChartSeries
schemas/WaterfallChartSeries/properties dict
schemas/WaterfallChartSeries/properties/customSubtotals dict
schemas/WaterfallChartSeries/properties/customSubtotals/description str Custom subtotal columns appearing in this series. The order in which
subtotals are defined is not significant. Only one subtotal may be
defined for each data point.
schemas/WaterfallChartSeries/properties/customSubtotals/items dict
schemas/WaterfallChartSeries/properties/customSubtotals/items/$ref str WaterfallChartCustomSubtotal
schemas/WaterfallChartSeries/properties/customSubtotals/type str array
schemas/WaterfallChartSeries/properties/data dict
schemas/WaterfallChartSeries/properties/data/$ref str ChartData
schemas/WaterfallChartSeries/properties/data/description str The data being visualized in this series.
schemas/WaterfallChartSeries/properties/hideTrailingSubtotal dict
schemas/WaterfallChartSeries/properties/hideTrailingSubtotal/description str True to hide the subtotal column from the end of the series. By default,
a subtotal column will appear at the end of each series. Setting this
field to true will hide that subtotal column for this series.
schemas/WaterfallChartSeries/properties/hideTrailingSubtotal/type str boolean
schemas/WaterfallChartSeries/properties/negativeColumnsStyle dict
schemas/WaterfallChartSeries/properties/negativeColumnsStyle/$ref str WaterfallChartColumnStyle
schemas/WaterfallChartSeries/properties/negativeColumnsStyle/description str Styles for all columns in this series with negative values.
schemas/WaterfallChartSeries/properties/positiveColumnsStyle dict
schemas/WaterfallChartSeries/properties/positiveColumnsStyle/$ref str WaterfallChartColumnStyle
schemas/WaterfallChartSeries/properties/positiveColumnsStyle/description str Styles for all columns in this series with positive values.
schemas/WaterfallChartSeries/properties/subtotalColumnsStyle dict
schemas/WaterfallChartSeries/properties/subtotalColumnsStyle/$ref str WaterfallChartColumnStyle
schemas/WaterfallChartSeries/properties/subtotalColumnsStyle/description str Styles for all subtotal columns in this series.
schemas/WaterfallChartSeries/type str object
schemas/WaterfallChartSpec dict
schemas/WaterfallChartSpec/description str A waterfall chart.
schemas/WaterfallChartSpec/id str WaterfallChartSpec
schemas/WaterfallChartSpec/properties dict
schemas/WaterfallChartSpec/properties/connectorLineStyle dict
schemas/WaterfallChartSpec/properties/connectorLineStyle/$ref str LineStyle
schemas/WaterfallChartSpec/properties/connectorLineStyle/description str The line style for the connector lines.
schemas/WaterfallChartSpec/properties/domain dict
schemas/WaterfallChartSpec/properties/domain/$ref str WaterfallChartDomain
schemas/WaterfallChartSpec/properties/domain/description str The domain data (horizontal axis) for the waterfall chart.
schemas/WaterfallChartSpec/properties/firstValueIsTotal dict
schemas/WaterfallChartSpec/properties/firstValueIsTotal/description str True to interpret the first value as a total.
schemas/WaterfallChartSpec/properties/firstValueIsTotal/type str boolean
schemas/WaterfallChartSpec/properties/hideConnectorLines dict
schemas/WaterfallChartSpec/properties/hideConnectorLines/description str True to hide connector lines between columns.
schemas/WaterfallChartSpec/properties/hideConnectorLines/type str boolean
schemas/WaterfallChartSpec/properties/series dict
schemas/WaterfallChartSpec/properties/series/description str The data this waterfall chart is visualizing.
schemas/WaterfallChartSpec/properties/series/items dict
schemas/WaterfallChartSpec/properties/series/items/$ref str WaterfallChartSeries
schemas/WaterfallChartSpec/properties/series/type str array
schemas/WaterfallChartSpec/properties/stackedType dict
schemas/WaterfallChartSpec/properties/stackedType/description str The stacked type.
schemas/WaterfallChartSpec/properties/stackedType/enum list
schemas/WaterfallChartSpec/properties/stackedType/enum/[] str WATERFALL_STACKED_TYPE_UNSPECIFIED
schemas/WaterfallChartSpec/properties/stackedType/enumDescriptions list
schemas/WaterfallChartSpec/properties/stackedType/enumDescriptions/[] str Default value, do not use.
schemas/WaterfallChartSpec/properties/stackedType/type str string
schemas/WaterfallChartSpec/type str object
servicePath str 
title str Google Sheets API
version str v4
version_module bool True
